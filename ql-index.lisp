((:ql-project 1am :system-file 1am :system-name 1am :dependencies nil :source
  (("git" "https://github.com/lmj/1am.git")))
 (:ql-project 3b-bmfont :system-file 3b-bmfont :system-name 3b-bmfont
  :dependencies (alexandria asdf parse-number split-sequence) :source
  (("git" "https://github.com/3b/3b-bmfont.git")))
 (:ql-project 3b-bmfont :system-file 3b-bmfont :system-name 3b-bmfont/common
  :dependencies (alexandria parse-number split-sequence) :source
  (("git" "https://github.com/3b/3b-bmfont.git")))
 (:ql-project 3b-bmfont :system-file 3b-bmfont :system-name 3b-bmfont/json
  :dependencies (alexandria jsown parse-number split-sequence) :source
  (("git" "https://github.com/3b/3b-bmfont.git")))
 (:ql-project 3b-bmfont :system-file 3b-bmfont :system-name 3b-bmfont/text
  :dependencies (alexandria parse-number split-sequence) :source
  (("git" "https://github.com/3b/3b-bmfont.git")))
 (:ql-project 3b-bmfont :system-file 3b-bmfont :system-name 3b-bmfont/xml
  :dependencies (alexandria cxml flexi-streams parse-number split-sequence)
  :source (("git" "https://github.com/3b/3b-bmfont.git")))
 (:ql-project 3b-hdr :system-file 3b-hdr :system-name 3b-hdr :dependencies
  (alexandria asdf babel parse-number split-sequence) :source
  (("git" "https://github.com/3b/3b-hdr.git")))
 (:ql-project 3b-hdr :system-file 3b-hdr :system-name 3b-hdr/test :dependencies
  (3b-hdr nibbles parachute) :source
  (("git" "https://github.com/3b/3b-hdr.git")))
 (:ql-project 3b-swf :system-file 3b-swf :system-name 3b-swf :dependencies
  (alexandria chipz cl-jpeg cxml flexi-streams ieee-floats salza2 vecto zpng)
  :source (("git" "https://github.com/3b/3b-swf.git")))
 (:ql-project 3b-swf :system-file 3b-swf-swc :system-name 3b-swf-swc
  :dependencies (3b-swf cxml zip) :source
  (("git" "https://github.com/3b/3b-swf.git")))
 (:ql-project 3bgl-shader :system-file 3bgl-shader :system-name 3bgl-shader
  :dependencies (alexandria asdf bordeaux-threads cl-opengl) :source
  (("git" "https://github.com/3b/3bgl-shader.git")))
 (:ql-project 3bgl-shader :system-file 3bgl-shader-example :system-name
  3bgl-shader-example :dependencies (3bgl-shader asdf cl-glu cl-glut mathkit)
  :source (("git" "https://github.com/3b/3bgl-shader.git")))
 (:ql-project 3bmd :system-file 3bmd :system-name 3bmd :dependencies
  (alexandria asdf esrap split-sequence) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-ext-code-blocks :system-name
  3bmd-ext-code-blocks :dependencies
  (3bmd alexandria asdf colorize split-sequence) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-ext-code-blocks :system-name
  3bmd-ext-code-blocks/tests :dependencies
  (3bmd-ext-code-blocks 3bmd-tests fiasco) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-ext-definition-lists :system-name
  3bmd-ext-definition-lists :dependencies (3bmd alexandria asdf colorize)
  :source (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-ext-definition-lists :system-name
  3bmd-ext-definition-lists/tests :dependencies
  (3bmd-ext-definition-lists 3bmd-tests fiasco) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-ext-math :system-name 3bmd-ext-math
  :dependencies (3bmd asdf esrap) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-ext-tables :system-name 3bmd-ext-tables
  :dependencies (3bmd asdf) :source (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-ext-tables :system-name
  3bmd-ext-tables/tests :dependencies (3bmd-ext-tables 3bmd-tests fiasco)
  :source (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-ext-wiki-links :system-name
  3bmd-ext-wiki-links :dependencies (3bmd asdf) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-ext-wiki-links :system-name
  3bmd-ext-wiki-links/tests :dependencies
  (3bmd-ext-wiki-links 3bmd-tests fiasco) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-tests :system-name 3bmd-tests
  :dependencies (3bmd 3bmd-ext-code-blocks asdf fiasco) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-youtube :system-name 3bmd-youtube
  :dependencies (3bmd asdf esrap) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bmd :system-file 3bmd-youtube-tests :system-name
  3bmd-youtube-tests :dependencies (3bmd-youtube asdf fiasco) :source
  (("git" "https://github.com/3b/3bmd.git")))
 (:ql-project 3bz :system-file 3bz :system-name 3bz :dependencies
  (alexandria asdf babel cffi mmap nibbles trivial-features) :source
  (("git" "https://github.com/3b/3bz.git")))
 (:ql-project 3d-math :system-file 3d-math :system-name 3d-math :dependencies
  (asdf documentation-utils type-templates) :source
  (("git" "https://github.com/shinmera/3d-math.git")))
 (:ql-project 3d-math :system-file 3d-math-test :system-name 3d-math-test
  :dependencies (3d-math asdf parachute) :source
  (("git" "https://github.com/shinmera/3d-math.git")))
 (:ql-project 3d-matrices :system-file 3d-matrices :system-name 3d-matrices
  :dependencies (3d-vectors asdf documentation-utils) :source
  (("git" "https://github.com/Shinmera/3d-matrices.git")))
 (:ql-project 3d-matrices :system-file 3d-matrices-test :system-name
  3d-matrices-test :dependencies (3d-matrices asdf parachute) :source
  (("git" "https://github.com/Shinmera/3d-matrices.git")))
 (:ql-project 3d-quaternions :system-file 3d-quaternions :system-name
  3d-quaternions :dependencies
  (3d-matrices 3d-vectors asdf documentation-utils) :source
  (("git" "https://github.com/shinmera/3d-quaternions.git")))
 (:ql-project 3d-quaternions :system-file 3d-quaternions-test :system-name
  3d-quaternions-test :dependencies (3d-quaternions asdf parachute) :source
  (("git" "https://github.com/shinmera/3d-quaternions.git")))
 (:ql-project 3d-spaces :system-file 3d-spaces :system-name 3d-spaces
  :dependencies
  (3d-math asdf documentation-utils for trivial-extensible-sequences) :source
  (("git" "https://github.com/shirakumo/3d-spaces.git")))
 (:ql-project 3d-spaces :system-file 3d-spaces-test :system-name 3d-spaces-test
  :dependencies (3d-spaces asdf parachute) :source
  (("git" "https://github.com/shirakumo/3d-spaces.git")))
 (:ql-project 3d-transforms :system-file 3d-transforms :system-name
  3d-transforms :dependencies
  (3d-matrices 3d-quaternions 3d-vectors asdf documentation-utils) :source
  (("git" "https://github.com/shinmera/3d-transforms.git")))
 (:ql-project 3d-transforms :system-file 3d-transforms-test :system-name
  3d-transforms-test :dependencies (3d-transforms asdf parachute) :source
  (("git" "https://github.com/shinmera/3d-transforms.git")))
 (:ql-project 3d-vectors :system-file 3d-vectors :system-name 3d-vectors
  :dependencies (asdf documentation-utils) :source
  (("git" "https://github.com/Shinmera/3d-vectors.git")))
 (:ql-project 3d-vectors :system-file 3d-vectors-test :system-name
  3d-vectors-test :dependencies (3d-vectors asdf parachute) :source
  (("git" "https://github.com/Shinmera/3d-vectors.git")))
 (:ql-project 40ants-asdf-system :system-file 40ants-asdf-system :system-name
  40ants-asdf-system :dependencies (asdf) :source
  (("git" "https://github.com/40ants/40ants-asdf-system.git")))
 (:ql-project 40ants-asdf-system :system-file 40ants-asdf-system-tests
  :system-name 40ants-asdf-system-tests :dependencies
  (40ants-asdf-system asdf rove) :source
  (("git" "https://github.com/40ants/40ants-asdf-system.git")))
 (:ql-project 40ants-asdf-system :system-file test-40ants-system :system-name
  test-40ants-system :dependencies (40ants-asdf-system asdf) :source
  (("git" "https://github.com/40ants/40ants-asdf-system.git")))
 (:ql-project 40ants-slynk :system-file 40ants-slynk :system-name 40ants-slynk
  :dependencies
  (40ants-asdf-system 40ants-logging asdf global-vars log4cl slynk
   slynk-macrostep slynk-named-readtables)
  :source (("git" "https://github.com/40ants/slynk.git")))
 (:ql-project 40ants-slynk :system-file 40ants-slynk-ci :system-name
  40ants-slynk-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/slynk.git")))
 (:ql-project 40ants-slynk :system-file 40ants-slynk-docs :system-name
  40ants-slynk-docs :dependencies
  (40ants-doc 40ants-slynk asdf docs-config named-readtables
   pythonic-string-reader)
  :source (("git" "https://github.com/40ants/slynk.git")))
 (:ql-project 40ants-slynk :system-file 40ants-slynk-tests :system-name
  40ants-slynk-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/slynk.git")))
 (:ql-project a-cl-logger :system-file a-cl-logger :system-name a-cl-logger
  :dependencies
  (alexandria asdf cl-interpol cl-json closer-mop exit-hooks iterate local-time
   osicat symbol-munger)
  :source (("git" "https://github.com/AccelerationNet/a-cl-logger.git")))
 (:ql-project a-cl-logger :system-file a-cl-logger-logstash :system-name
  a-cl-logger-logstash :dependencies (a-cl-logger asdf cl-json zmq) :source
  (("git" "https://github.com/AccelerationNet/a-cl-logger.git")))
 (:ql-project a-cl-logger :system-file a-cl-logger :system-name
  a-cl-logger-tests :dependencies (a-cl-logger lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/a-cl-logger.git")))
 (:ql-project able :system-file able :system-name able :dependencies
  (cl-fad ltk trivial-gray-streams) :source
  (("git" "https://github.com/dherring/able.git")))
 (:ql-project abstract-arrays :system-file abstract-arrays :system-name
  abstract-arrays :dependencies
  (alexandria asdf closer-mop extensible-compound-types introspect-environment
   polymorphic-functions trivial-types)
  :source (("git" "https://github.com/digikar99/abstract-arrays.git")))
 (:ql-project access :system-file access :system-name access :dependencies
  (alexandria asdf cl-ppcre closer-mop iterate) :source
  (("git" "https://github.com/AccelerationNet/access.git")))
 (:ql-project access :system-file access :system-name access/test :dependencies
  (access lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/access.git")))
 (:ql-project acclimation :system-file acclimation :system-name acclimation
  :dependencies (asdf) :source
  (("git" "https://github.com/robert-strandh/Acclimation.git")))
 (:ql-project acclimation :system-file acclimation-temperature :system-name
  acclimation-temperature :dependencies (asdf) :source
  (("git" "https://github.com/robert-strandh/Acclimation.git")))
 (:ql-project action-list :system-file action-list :system-name action-list
  :dependencies (asdf documentation-utils trivial-extensible-sequences) :source
  (("git" "https://github.com/shinmera/action-list.git")))
 (:ql-project adhoc :system-file adhoc :system-name adhoc :dependencies
  (asdf closer-mop) :source (("git" "https://github.com/awolven/adhoc.git")))
 (:ql-project adhoc :system-file adhoc-tests :system-name adhoc-tests
  :dependencies (adhoc asdf fiveam) :source
  (("git" "https://github.com/awolven/adhoc.git")))
 (:ql-project adopt :system-file adopt :system-name adopt :dependencies
  (asdf bobbin split-sequence) :source
  (("mercurial" "https://hg.stevelosh.com/adopt")))
 (:ql-project adopt :system-file adopt :system-name adopt/test :dependencies
  (1am adopt) :source (("mercurial" "https://hg.stevelosh.com/adopt")))
 (:ql-project adopt-subcommands :system-file adopt-subcommands :system-name
  adopt-subcommands :dependencies (adopt asdf bobbin split-sequence uiop)
  :source
  (("latest-gitlab-release"
    "https://gitlab.com/daewok/adopt-subcommands.git")))
 (:ql-project adopt-subcommands :system-file adopt-subcommands-test
  :system-name adopt-subcommands-test :dependencies
  (adopt-subcommands asdf fiveam) :source
  (("latest-gitlab-release"
    "https://gitlab.com/daewok/adopt-subcommands.git")))
 (:ql-project adp :system-file adp :system-name adp :dependencies
  (alexandria asdf scribble) :source
  (("git" "https://github.com/Hectarea1996/adp.git")))
 (:ql-project advanced-readtable :system-file advanced-readtable :system-name
  advanced-readtable :dependencies (named-readtables) :source
  (("git" "https://github.com/Kalimehtar/advanced-readtable.git")))
 (:ql-project aether :system-file aether :system-name aether :dependencies
  (alexandria asdf cl-heap global-vars policy-cond) :source
  (("latest-github-release" "https://github.com/dtqec/aether.git")))
 (:ql-project aether :system-file aether-tests :system-name aether-tests
  :dependencies (aether asdf fiasco uiop) :source
  (("latest-github-release" "https://github.com/dtqec/aether.git")))
 (:ql-project agnostic-lizard :system-file agnostic-lizard :system-name
  agnostic-lizard :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/mraskin/agnostic-lizard.git")))
 (:ql-project agnostic-lizard :system-file agnostic-lizard-debugger-prototype
  :system-name agnostic-lizard-debugger-prototype :dependencies
  (agnostic-lizard asdf bordeaux-threads) :source
  (("git" "https://gitlab.common-lisp.net/mraskin/agnostic-lizard.git")))
 (:ql-project agutil :system-file agutil :system-name agutil :dependencies
  (alexandria asdf optima) :source
  (("git" "https://github.com/alex-gutev/agutil.git")))
 (:ql-project ahungry-fleece :system-file ahungry-fleece :system-name
  ahungry-fleece :dependencies
  (archive asdf chipz cl-json cl-yaml md5 split-sequence) :source
  (("git" "https://github.com/ahungry/ahungry-fleece.git")))
 (:ql-project ahungry-fleece :system-file skeleton :system-name skeleton
  :dependencies (ahungry-fleece asdf) :source
  (("git" "https://github.com/ahungry/ahungry-fleece.git")))
 (:ql-project alexa :system-file alexa :system-name alexa :dependencies
  (alexandria asdf cl-ppcre) :source
  (("latest-github-tag" "https://github.com/rigetti/alexa.git")))
 (:ql-project alexa :system-file alexa-tests :system-name alexa-tests
  :dependencies (alexa asdf fiasco uiop) :source
  (("latest-github-tag" "https://github.com/rigetti/alexa.git")))
 (:ql-project alexandria :system-file alexandria :system-name alexandria
  :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/alexandria/alexandria.git")))
 (:ql-project alexandria :system-file alexandria :system-name alexandria/tests
  :dependencies (alexandria) :source
  (("git" "https://gitlab.common-lisp.net/alexandria/alexandria.git")))
 (:ql-project alexandria-plus :system-file alexandria+ :system-name alexandria+
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/Symbolics/alexandria-plus.git")))
 (:ql-project alexandria-plus :system-file alexandria+ :system-name
  alexandria+/tests :dependencies (alexandria+ parachute) :source
  (("git" "https://github.com/Symbolics/alexandria-plus.git")))
 (:ql-project algebraic-data-library :system-file algebraic-data-library
  :system-name algebraic-data-library :dependencies
  (asdf cl-algebraic-data-type) :source
  (("git" "https://github.com/tarballs-are-good/algebraic-data-library.git")))
 (:ql-project also-alsa :system-file also-alsa :system-name also-alsa
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/varjagg/also-alsa.git")))
 (:ql-project amazon-ecs :system-file amazon-ecs :system-name amazon-ecs
  :dependencies
  (alexandria bordeaux-threads cl-ppcre drakma hunchentoot ironclad
   net-telent-date parse-number trivial-http xml-mop)
  :source (("git" "https://github.com/gonzojive/amazon-ecs")))
 (:ql-project amb :system-file amb :system-name amb :dependencies
  (alexandria asdf) :source (("git" "https://github.com/phoe/amb.git")))
 (:ql-project amb :system-file amb :system-name amb/test :dependencies
  (amb parachute) :source (("git" "https://github.com/phoe/amb.git")))
 (:ql-project anaphora :system-file anaphora :system-name anaphora
  :dependencies (asdf) :source
  (("latest-github-tag" "https://github.com/spwhitton/anaphora.git")))
 (:ql-project anaphora :system-file anaphora :system-name anaphora/test
  :dependencies (anaphora rt) :source
  (("latest-github-tag" "https://github.com/spwhitton/anaphora.git")))
 (:ql-project anaphoric-variants :system-file anaphoric-variants :system-name
  anaphoric-variants :dependencies (map-bind) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/anaphoric-variants_latest.tar.gz")))
 (:ql-project anatevka :system-file anatevka :system-name anatevka
  :dependencies (aether alexandria asdf) :source
  (("LATEST-GITHUB-RELEASE" "https://github.com/dtqec/anatevka.git")))
 (:ql-project anatevka :system-file anatevka-tests :system-name anatevka-tests
  :dependencies (anatevka asdf closer-mop fiasco uiop) :source
  (("LATEST-GITHUB-RELEASE" "https://github.com/dtqec/anatevka.git")))
 (:ql-project ansi-test-harness :system-file ansi-test-harness :system-name
  ansi-test-harness :dependencies (alexandria asdf) :source
  (("git" "https://github.com/yitzchak/ansi-test-harness.git")))
 (:ql-project antik :system-file antik :system-name antik :dependencies
  (asdf gsll physical-dimension) :source
  (("branched-git" "https://gitlab.common-lisp.net/antik/antik.git" "master")
   nil))
 (:ql-project antik :system-file antik-base :system-name antik-base
  :dependencies
  (alexandria asdf cl-ppcre iterate lisp-unit metabang-bind named-readtables
   split-sequence)
  :source
  (("branched-git" "https://gitlab.common-lisp.net/antik/antik.git" "master")
   nil))
 (:ql-project antik :system-file foreign-array :system-name foreign-array
  :dependencies
  (antik-base asdf cffi cffi-grovel static-vectors trivial-garbage) :source
  (("branched-git" "https://gitlab.common-lisp.net/antik/antik.git" "master")
   nil))
 (:ql-project antik :system-file physical-dimension :system-name
  physical-dimension :dependencies
  (asdf fare-utils foreign-array trivial-utf-8) :source
  (("branched-git" "https://gitlab.common-lisp.net/antik/antik.git" "master")
   nil))
 (:ql-project antik :system-file science-data :system-name science-data
  :dependencies (asdf drakma physical-dimension) :source
  (("branched-git" "https://gitlab.common-lisp.net/antik/antik.git" "master")
   nil))
 (:ql-project anypool :system-file anypool :system-name anypool :dependencies
  (asdf bordeaux-threads cl-speedy-queue) :source
  (("git" "https://github.com/fukamachi/anypool.git")))
 (:ql-project anypool :system-file anypool :system-name anypool/middleware
  :dependencies (anypool) :source
  (("git" "https://github.com/fukamachi/anypool.git")))
 (:ql-project anypool :system-file anypool :system-name anypool/tests
  :dependencies (anypool rove) :source
  (("git" "https://github.com/fukamachi/anypool.git")))
 (:ql-project anypool :system-file lack-middleware-anypool :system-name
  lack-middleware-anypool :dependencies (anypool asdf) :source
  (("git" "https://github.com/fukamachi/anypool.git")))
 (:ql-project apply-argv :system-file apply-argv :system-name apply-argv
  :dependencies (alexandria) :source
  (("git" "https://github.com/pve1/apply-argv.git")))
 (:ql-project apply-argv :system-file apply-argv :system-name apply-argv-tests
  :dependencies (apply-argv fiveam) :source
  (("git" "https://github.com/pve1/apply-argv.git")))
 (:ql-project april :system-file aplesque :system-name aplesque :dependencies
  (alexandria array-operations asdf cl-ppcre lparallel parse-number
   symbol-munger)
  :source (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april :system-name april :dependencies
  (alexandria aplesque array-operations asdf cl-ppcre cl-unicode lparallel
   parse-number prove random-state simple-date-time symbol-munger trivia varray
   vex)
  :source (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-demo.cnn :system-name april-demo.cnn
  :dependencies (april asdf lisp-binary) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-demo.fnn :system-name april-demo.fnn
  :dependencies (april april-lib.dfns.array asdf lisp-binary) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-demo.ncurses :system-name
  april-demo.ncurses :dependencies (april asdf croatoan lparallel) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-lib.dfns.array :system-name
  april-lib.dfns.array :dependencies (april asdf) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-lib.dfns.graph :system-name
  april-lib.dfns.graph :dependencies (april april-lib.dfns.array asdf) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-lib.dfns.numeric :system-name
  april-lib.dfns.numeric :dependencies (april april-lib.dfns.graph asdf)
  :source (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-lib.dfns.power :system-name
  april-lib.dfns.power :dependencies (april april-lib.dfns.array asdf) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-lib.dfns.string :system-name
  april-lib.dfns.string :dependencies (april april-lib.dfns.array asdf) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-lib.dfns.tree :system-name
  april-lib.dfns.tree :dependencies
  (april april-lib.dfns.array april-lib.dfns.power asdf) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file april-xt.uzuki :system-name april-xt.uzuki
  :dependencies (april asdf) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file maxpc-apache :system-name maxpc-apache
  :dependencies (asdf) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file varray :system-name varray :dependencies
  (aplesque asdf lparallel random-state serapeum) :source
  (("git" "https://github.com/phantomics/april.git")))
 (:ql-project april :system-file vex :system-name vex :dependencies
  (alexandria array-operations asdf cl-ppcre maxpc-apache prove symbol-munger)
  :source (("git" "https://github.com/phantomics/april.git")))
 (:ql-project arc-compat :system-file arc-compat :system-name arc-compat
  :dependencies
  (asdf babel bordeaux-threads cl-fad fiveam ironclad named-readtables) :source
  (("git" "https://github.com/g000001/arc-compat.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol :system-name architecture.builder-protocol
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol.inspection :system-name
  architecture.builder-protocol.inspection :dependencies
  (architecture.builder-protocol asdf clouseau) :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol.json :system-name
  architecture.builder-protocol.json :dependencies
  (alexandria architecture.builder-protocol asdf cl-json) :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol.json :system-name
  architecture.builder-protocol.json/test :dependencies
  (alexandria architecture.builder-protocol architecture.builder-protocol.json
   fiveam)
  :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol.print-tree :system-name
  architecture.builder-protocol.print-tree :dependencies
  (alexandria architecture.builder-protocol asdf utilities.print-tree) :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol.print-tree :system-name
  architecture.builder-protocol.print-tree/test :dependencies
  (alexandria architecture.builder-protocol.print-tree fiveam) :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol.universal-builder :system-name
  architecture.builder-protocol.universal-builder :dependencies
  (alexandria architecture.builder-protocol asdf closer-mop) :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol.universal-builder :system-name
  architecture.builder-protocol.universal-builder/test :dependencies
  (alexandria architecture.builder-protocol
   architecture.builder-protocol.universal-builder fiveam)
  :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol.xpath :system-name
  architecture.builder-protocol.xpath :dependencies
  (alexandria architecture.builder-protocol asdf xpath) :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol.xpath :system-name
  architecture.builder-protocol.xpath/test :dependencies
  (alexandria architecture.builder-protocol.xpath fiveam) :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.builder-protocol :system-file
  architecture.builder-protocol :system-name architecture.builder-protocol/test
  :dependencies (alexandria architecture.builder-protocol fiveam) :source
  (("git" "https://github.com/scymtym/architecture.builder-protocol.git")))
 (:ql-project architecture.hooks :system-file cl-hooks :system-name cl-hooks
  :dependencies (alexandria asdf closer-mop let-plus trivial-garbage) :source
  (("git" "https://github.com/scymtym/architecture.hooks.git")))
 (:ql-project architecture.hooks :system-file cl-hooks :system-name
  cl-hooks/test :dependencies (cl-hooks fiveam) :source
  (("git" "https://github.com/scymtym/architecture.hooks.git")))
 (:ql-project architecture.service-provider :system-file
  architecture.service-provider :system-name architecture.service-provider
  :dependencies
  (alexandria asdf let-plus more-conditions utilities.print-items) :source
  (("git" "https://github.com/scymtym/architecture.service-provider.git")))
 (:ql-project architecture.service-provider :system-file
  architecture.service-provider-and-hooks :system-name
  architecture.service-provider-and-hooks :dependencies
  (architecture.service-provider asdf cl-hooks) :source
  (("git" "https://github.com/scymtym/architecture.service-provider.git")))
 (:ql-project architecture.service-provider :system-file
  architecture.service-provider-and-hooks :system-name
  architecture.service-provider-and-hooks/test :dependencies
  (alexandria architecture.service-provider
   architecture.service-provider-and-hooks fiveam let-plus more-conditions)
  :source
  (("git" "https://github.com/scymtym/architecture.service-provider.git")))
 (:ql-project architecture.service-provider :system-file
  architecture.service-provider :system-name architecture.service-provider/test
  :dependencies
  (alexandria architecture.service-provider fiveam let-plus more-conditions)
  :source
  (("git" "https://github.com/scymtym/architecture.service-provider.git")))
 (:ql-project archive :system-file archive :system-name archive :dependencies
  (cl-fad trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/archive.git")))
 (:ql-project arithmetic-operators-as-words :system-file
  arithmetic-operators-as-words :system-name arithmetic-operators-as-words
  :dependencies (asdf) :source
  (("git" "https://github.com/K1D77A/arithmetic-operators-as-words.git")))
 (:ql-project arnesi :system-file arnesi :system-name arnesi :dependencies
  (collectors) :source
  (("git" "https://github.com/AccelerationNet/arnesi.git")))
 (:ql-project arnesi :system-file arnesi :system-name arnesi/cl-ppcre-extras
  :dependencies (arnesi cl-ppcre) :source
  (("git" "https://github.com/AccelerationNet/arnesi.git")))
 (:ql-project arnesi :system-file arnesi :system-name arnesi/slime-extras
  :dependencies (arnesi swank) :source
  (("git" "https://github.com/AccelerationNet/arnesi.git")))
 (:ql-project array-operations :system-file array-operations :system-name
  array-operations :dependencies (alexandria asdf let-plus) :source
  (("latest-github-release"
    "https://github.com/Lisp-Stat/array-operations.git")))
 (:ql-project array-operations :system-file array-operations :system-name
  array-operations/tests :dependencies (alexandria array-operations clunit2)
  :source
  (("latest-github-release"
    "https://github.com/Lisp-Stat/array-operations.git")))
 (:ql-project array-utils :system-file array-utils :system-name array-utils
  :dependencies (asdf) :source
  (("git" "https://github.com/Shinmera/array-utils.git")))
 (:ql-project array-utils :system-file array-utils-test :system-name
  array-utils-test :dependencies (array-utils asdf parachute) :source
  (("git" "https://github.com/Shinmera/array-utils.git")))
 (:ql-project arrival :system-file arrival :system-name arrival :dependencies
  (alexandria asdf iterate log4cl trivia trivia.quasiquote) :source
  (("git" "https://github.com/guicho271828/ArriVAL.git")))
 (:ql-project arrow-macros :system-file arrow-macros :system-name arrow-macros
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/hipeta/arrow-macros.git")))
 (:ql-project arrow-macros :system-file arrow-macros-test :system-name
  arrow-macros-test :dependencies (arrow-macros asdf fiveam) :source
  (("git" "https://github.com/hipeta/arrow-macros.git")))
 (:ql-project arrows :system-file arrows :system-name arrows :dependencies
  (asdf) :source (("git" "https://gitlab.com/Harleqin/arrows.git")))
 (:ql-project arrows :system-file arrows :system-name arrows/test :dependencies
  (arrows hu.dwim.stefil) :source
  (("git" "https://gitlab.com/Harleqin/arrows.git")))
 (:ql-project asd-generator :system-file asd-generator :system-name
  asd-generator :dependencies (alexandria asdf cl-fad iterate trivia) :source
  (("git" "https://github.com/phoe/asd-generator.git")))
 (:ql-project asd-generator :system-file asd-generator-test :system-name
  asd-generator-test :dependencies (alexandria asdf cl-fad iterate) :source
  (("git" "https://github.com/phoe/asd-generator.git")))
 (:ql-project asdf-dependency-graph :system-file asdf-dependency-graph
  :system-name asdf-dependency-graph :dependencies (asdf optima uiop) :source
  (("git" "https://github.com/digikar99/asdf-dependency-graph.git")))
 (:ql-project asdf-dependency-grovel :system-file asdf-dependency-grovel
  :system-name asdf-dependency-grovel :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/xcvb/asdf-dependency-grovel.git")))
 (:ql-project asdf-dependency-grovel :system-file test-serial-system
  :system-name test-serial-system :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/xcvb/asdf-dependency-grovel.git")))
 (:ql-project asdf-encodings :system-file asdf-encodings :system-name
  asdf-encodings :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/asdf/asdf-encodings.git")))
 (:ql-project asdf-encodings :system-file asdf-encodings :system-name
  asdf-encodings/test :dependencies (asdf-encodings fare-utils hu.dwim.stefil)
  :source (("git" "https://gitlab.common-lisp.net/asdf/asdf-encodings.git")))
 (:ql-project asdf-finalizers :system-file asdf-finalizers :system-name
  asdf-finalizers :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/asdf/asdf-finalizers.git")))
 (:ql-project asdf-finalizers :system-file list-of :system-name list-of
  :dependencies (asdf asdf-finalizers) :source
  (("git" "https://gitlab.common-lisp.net/asdf/asdf-finalizers.git")))
 (:ql-project asdf-flv :system-file net.didierverna.asdf-flv :system-name
  net.didierverna.asdf-flv :dependencies (asdf) :source
  (("latest-github-tag" "https://github.com/didierverna/asdf-flv.git")))
 (:ql-project asdf-linguist :system-file asdf-linguist :system-name
  asdf-linguist :dependencies (asdf inferior-shell parenscript) :source
  (("git" "https://github.com/eudoxia0/asdf-linguist.git")))
 (:ql-project asdf-manager :system-file asdf-manager :system-name asdf-manager
  :dependencies (trivial-download trivial-extract uiop) :source
  (("git" "https://github.com/roswell/asdf-manager.git")))
 (:ql-project asdf-manager :system-file asdf-manager-test :system-name
  asdf-manager-test :dependencies (asdf-manager fiveam) :source
  (("git" "https://github.com/roswell/asdf-manager.git")))
 (:ql-project asdf-package-system :system-file asdf-package-system :system-name
  asdf-package-system :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/asdf/asdf-package-system.git")))
 (:ql-project asdf-system-connections :system-file asdf-system-connections
  :system-name asdf-system-connections :dependencies nil :source
  (("git" "https://github.com/gwkkwg/asdf-system-connections.git")))
 (:ql-project asdf-viz :system-file asdf-viz :system-name asdf-viz
  :dependencies (asdf cl-dot closer-mop iterate swank trivia) :source
  (("git" "https://github.com/guicho271828/asdf-viz.git")))
 (:ql-project aserve :system-file zaserve :system-name zaserve :dependencies
  (asdf setup-cl+ssl zacl) :source
  (("git" "https://github.com/gendl/aserve.git")))
 (:ql-project asn1 :system-file asn1 :system-name asn1 :dependencies
  (asdf fast-io ironclad trivia) :source
  (("git" "https://github.com/fukamachi/asn1.git")))
 (:ql-project asn1 :system-file asn1 :system-name asn1/tests :dependencies nil
  :source (("git" "https://github.com/fukamachi/asn1.git")))
 (:ql-project assert-p :system-file assert-p :system-name assert-p
  :dependencies (asdf assertion-error simplet-asdf) :source
  (("git" "https://github.com/noloop/assert-p.git")))
 (:ql-project assert-p :system-file assert-p :system-name assert-p/test
  :dependencies (assert-p simplet simplet-asdf) :source
  (("git" "https://github.com/noloop/assert-p.git")))
 (:ql-project assertion-error :system-file assertion-error :system-name
  assertion-error :dependencies (asdf dissect) :source
  (("git" "https://github.com/noloop/assertion-error.git")))
 (:ql-project assertion-error :system-file assertion-error :system-name
  assertion-error/test :dependencies (assertion-error) :source
  (("git" "https://github.com/noloop/assertion-error.git")))
 (:ql-project assoc-utils :system-file assoc-utils :system-name assoc-utils
  :dependencies (asdf) :source
  (("git" "https://github.com/fukamachi/assoc-utils.git")))
 (:ql-project assoc-utils :system-file assoc-utils-test :system-name
  assoc-utils-test :dependencies (asdf assoc-utils prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/assoc-utils.git")))
 (:ql-project asteroids :system-file asteroids :system-name asteroids
  :dependencies
  (asdf lispbuilder-sdl lispbuilder-sdl-gfx lispbuilder-sdl-mixer) :source
  (("git" "https://github.com/stacksmith/asteroids.git")))
 (:ql-project astonish :system-file astonish :system-name astonish
  :dependencies (alexandria asdf uiop) :source
  (("git" "https://gitlab.com/TheLostLambda/astonish.git")))
 (:ql-project astonish :system-file astonish :system-name astonish/tests
  :dependencies (astonish rove) :source
  (("git" "https://gitlab.com/TheLostLambda/astonish.git")))
 (:ql-project async-process :system-file async-process :system-name
  async-process :dependencies (asdf cffi) :source
  (("git" "https://github.com/cxxxr/async-process.git")))
 (:ql-project atdoc :system-file atdoc :system-name atdoc :dependencies
  (cl-ppcre closer-mop cxml split-sequence swank xuriella) :source
  (("git" "http://www.lichteblau.com/git/atdoc.git")))
 (:ql-project atdoc :system-file blocks-world :system-name blocks-world
  :dependencies nil :source
  (("git" "http://www.lichteblau.com/git/atdoc.git")))
 (:ql-project atomics :system-file atomics :system-name atomics :dependencies
  (asdf documentation-utils) :source
  (("git" "https://github.com/shinmera/atomics.git")))
 (:ql-project atomics :system-file atomics-test :system-name atomics-test
  :dependencies (asdf atomics parachute) :source
  (("git" "https://github.com/shinmera/atomics.git")))
 (:ql-project audio-tag :system-file audio-tag :system-name audio-tag
  :dependencies (asdf flexi-streams osicat) :source
  (("git" "https://github.com/C-Entropy/audio-tag.git")))
 (:ql-project audio-tag :system-file audio-tag :system-name audio-tag/tests
  :dependencies (audio-tag rove) :source
  (("git" "https://github.com/C-Entropy/audio-tag.git")))
 (:ql-project authenticated-encryption :system-file authenticated-encryption
  :system-name authenticated-encryption :dependencies (asdf ironclad) :source
  (("git" "https://github.com/kkazuo/authenticated-encryption.git")))
 (:ql-project authenticated-encryption :system-file
  authenticated-encryption-test :system-name authenticated-encryption-test
  :dependencies (1am asdf authenticated-encryption) :source
  (("git" "https://github.com/kkazuo/authenticated-encryption.git")))
 (:ql-project auto-restart :system-file auto-restart :system-name auto-restart
  :dependencies (asdf iterate) :source
  (("git" "https://github.com/tdrhq/auto-restart.git")))
 (:ql-project auto-restart :system-file auto-restart :system-name
  auto-restart/tests :dependencies (auto-restart fiveam) :source
  (("git" "https://github.com/tdrhq/auto-restart.git")))
 (:ql-project autoexport :system-file autoexport :system-name autoexport
  :dependencies (alexandria asdf closer-mop) :source
  (("git" "https://github.com/fami-com/autoexport.git")))
 (:ql-project avatar-api :system-file avatar-api :system-name avatar-api
  :dependencies (cl-json crypto-shortcuts drakma) :source
  (("git" "https://github.com/eudoxia0/avatar-api.git")))
 (:ql-project avatar-api :system-file avatar-api-test :system-name
  avatar-api-test :dependencies (avatar-api fiveam) :source
  (("git" "https://github.com/eudoxia0/avatar-api.git")))
 (:ql-project avl-tree :system-file avl-tree :system-name avl-tree
  :dependencies (asdf mfiano-utils) :source
  (("git" "https://github.com/mfiano/avl-tree.git")))
 (:ql-project aws-foundation :system-file aws-foundation :system-name
  aws-foundation :dependencies
  (asdf babel cl-json cl-json-helper dexador ironclad local-time) :source
  (("git" "https://github.com/stablecross/aws-foundation.git")))
 (:ql-project aws-sdk-lisp :system-file aws-sdk :system-name aws-sdk
  :dependencies
  (alexandria asdf assoc-utils aws-sign4 babel cl-ppcre dexador ironclad kebab
   local-time parser.ini quri trivial-timeout trivial-types xmls yason)
  :source (("git" "https://github.com/pokepay/aws-sdk-lisp.git")))
 (:ql-project aws-sign4 :system-file aws-sign4 :system-name aws-sign4
  :dependencies
  (asdf cl-ppcre flexi-streams ironclad local-time secret-values
   split-sequence)
  :source (("git" "https://github.com/rotatef/aws-sign4.git")))
 (:ql-project aws-sign4 :system-file aws-sign4 :system-name aws-sign4-example
  :dependencies (aws-sign4 drakma) :source
  (("git" "https://github.com/rotatef/aws-sign4.git")))
 (:ql-project aws-sign4 :system-file aws-sign4 :system-name aws-sign4-tests
  :dependencies (aws-sign4) :source
  (("git" "https://github.com/rotatef/aws-sign4.git")))
 (:ql-project ayah-captcha :system-file ayah-captcha :system-name ayah-captcha
  :dependencies (asdf cl-json drakma) :source
  (("git" "https://github.com/aarvid/ayah-captcha.git")))
 (:ql-project ayah-captcha :system-file ayah-captcha-demo :system-name
  ayah-captcha-demo :dependencies (asdf ayah-captcha cl-who hunchentoot)
  :source (("git" "https://github.com/aarvid/ayah-captcha.git")))
 (:ql-project babel :system-file babel :system-name babel :dependencies
  (alexandria asdf trivial-features) :source
  (("git" "https://github.com/cl-babel/babel.git") nil))
 (:ql-project babel :system-file babel-streams :system-name babel-streams
  :dependencies (alexandria asdf babel trivial-gray-streams) :source
  (("git" "https://github.com/cl-babel/babel.git") nil))
 (:ql-project babel :system-file babel-tests :system-name babel-tests
  :dependencies (asdf babel hu.dwim.stefil) :source
  (("git" "https://github.com/cl-babel/babel.git") nil))
 (:ql-project babylon :system-file babylon :system-name babylon :dependencies
  (asdf fare-quasiquote-extras fmcs) :source
  (("git" "https://github.com/thephoeron/babylon.git")))
 (:ql-project babylon :system-file babylon :system-name babylon/test
  :dependencies (babylon) :source
  (("git" "https://github.com/thephoeron/babylon.git")))
 (:ql-project base-blobs :system-file base-blobs :system-name base-blobs
  :dependencies (asdf bodge-blobs-support trivial-features) :source
  (("tagged-git" "https://github.com/borodust/base-blobs.git" "stable")))
 (:ql-project base64 :system-file base64 :system-name base64 :dependencies
  (asdf) :source (("git" "https://github.com/massung/base64.git")))
 (:ql-project basic-binary-ipc :system-file basic-binary-ipc :system-name
  basic-binary-ipc :dependencies (asdf cffi-grovel) :source
  (("git" "https://github.com/markcox80/basic-binary-ipc.git")))
 (:ql-project basic-binary-ipc :system-file basic-binary-ipc-tests :system-name
  basic-binary-ipc-tests :dependencies
  (asdf basic-binary-ipc bordeaux-threads lisp-unit) :source
  (("git" "https://github.com/markcox80/basic-binary-ipc.git")))
 (:ql-project bdef :system-file bdef :system-name bdef :dependencies
  (alexandria asdf eager-future2 jsown mutility parse-float) :source
  (("git" "https://github.com/defaultxr/bdef.git")))
 (:ql-project bdef :system-file bdef :system-name bdef/cl-collider
  :dependencies (bdef cl-collider) :source
  (("git" "https://github.com/defaultxr/bdef.git")))
 (:ql-project bdef :system-file bdef :system-name bdef/cl-patterns
  :dependencies (bdef cl-patterns) :source
  (("git" "https://github.com/defaultxr/bdef.git")))
 (:ql-project bdef :system-file bdef :system-name bdef/tests :dependencies
  (bdef cl-patterns fiveam mutility) :source
  (("git" "https://github.com/defaultxr/bdef.git")))
 (:ql-project beast :system-file beast :system-name beast :dependencies (asdf)
  :source (("mercurial" "https://hg.stevelosh.com/beast")))
 (:ql-project beast :system-file beast :system-name beast/test :dependencies
  (1am beast) :source (("mercurial" "https://hg.stevelosh.com/beast")))
 (:ql-project beirc :system-file beirc :system-name beirc :dependencies
  (cl-fad cl-irc cl-ppcre mcclim split-sequence) :source
  (("git" "https://gitlab.common-lisp.net/beirc/beirc.git")))
 (:ql-project big-string :system-file big-string :system-name big-string
  :dependencies (asdf) :source
  (("git" "https://github.com/stylewarning/big-string.git")))
 (:ql-project bike :system-file bike :system-name bike :dependencies
  (alexandria asdf bike-internals bordeaux-threads cffi cl-ppcre closer-mop
   flexi-streams global-vars named-readtables split-sequence trivial-features
   trivial-garbage uiop)
  :source (("git" "https://github.com/Lovesan/bike.git")))
 (:ql-project bike :system-file bike-examples :system-name bike-examples
  :dependencies (asdf bike float-features trivial-features) :source
  (("git" "https://github.com/Lovesan/bike.git")))
 (:ql-project bike :system-file bike-internals :system-name bike-internals
  :dependencies
  (alexandria asdf bordeaux-threads cffi cl-ppcre flexi-streams global-vars
   split-sequence trivial-features trivial-garbage uiop)
  :source (("git" "https://github.com/Lovesan/bike.git")))
 (:ql-project bike :system-file bike-tests :system-name bike-tests
  :dependencies (asdf bike fiveam) :source
  (("git" "https://github.com/Lovesan/bike.git")))
 (:ql-project binary-io :system-file binary-io :system-name binary-io
  :dependencies (alexandria asdf ieee-floats) :source
  (("git" "https://github.com/mgi/binary-io.git")))
 (:ql-project binary-io :system-file binary-io :system-name binary-io/test
  :dependencies (1am binary-io) :source
  (("git" "https://github.com/mgi/binary-io.git")))
 (:ql-project binary-parser :system-file binary-parser :system-name
  binary-parser :dependencies (asdf babel bitio chipz fast-io) :source
  (("git" "https://github.com/mfiano/binary-parser.git")))
 (:ql-project binary-search-tree :system-file binary-search-tree :system-name
  binary-search-tree :dependencies (asdf mfiano-utils) :source
  (("git" "https://github.com/mfiano/binary-search-tree.git")))
 (:ql-project binary-structures :system-file binary-structures :system-name
  binary-structures :dependencies
  (asdf babel cffi documentation-utils nibbles trivial-extensible-sequences)
  :source (("git" "https://github.com/shinmera/binary-structures.git")))
 (:ql-project binary-types :system-file binary-types :system-name binary-types
  :dependencies nil :source (("git" "https://github.com/Ferada/binary-types")))
 (:ql-project binascii :system-file binascii :system-name binascii
  :dependencies nil :source
  (("git" "https://github.com/sharplispers/binascii.git")))
 (:ql-project binascii :system-file binascii :system-name binascii-tests
  :dependencies (binascii) :source
  (("git" "https://github.com/sharplispers/binascii.git")))
 (:ql-project binding-arrows :system-file binding-arrows :system-name
  binding-arrows :dependencies (asdf) :source
  (("git" "https://github.com/phoe/binding-arrows.git")))
 (:ql-project binding-arrows :system-file binding-arrows :system-name
  binding-arrows/test :dependencies (binding-arrows hu.dwim.stefil) :source
  (("git" "https://github.com/phoe/binding-arrows.git")))
 (:ql-project binfix :system-file binfix :system-name binfix :dependencies
  (asdf) :source (("git" "https://github.com/vcerovski/binfix.git")))
 (:ql-project binfix :system-file binfix :system-name binfix/5am :dependencies
  (binfix fiveam) :source (("git" "https://github.com/vcerovski/binfix.git")))
 (:ql-project binomial-heap :system-file binomial-heap :system-name
  binomial-heap :dependencies nil :source
  (("git" "https://github.com/vy/binomial-heap.git")))
 (:ql-project binpack :system-file binpack :system-name binpack :dependencies
  (alexandria asdf) :source
  (("git" "https://github.com/lispgames/binpack.git")))
 (:ql-project binpack :system-file binpack-test :system-name binpack-test
  :dependencies (asdf binpack parachute) :source
  (("git" "https://github.com/lispgames/binpack.git")))
 (:ql-project binpack :system-file binpack-test :system-name binpack-test/2
  :dependencies (alexandria parachute) :source
  (("git" "https://github.com/lispgames/binpack.git")))
 (:ql-project binpack :system-file binpack-test :system-name
  binpack-test/common :dependencies (binpack parachute) :source
  (("git" "https://github.com/lispgames/binpack.git")))
 (:ql-project binpack :system-file binpack :system-name binpack/2 :dependencies
  (alexandria) :source (("git" "https://github.com/lispgames/binpack.git")))
 (:ql-project birch :system-file birch :system-name birch :dependencies
  (alexandria asdf cl+ssl flexi-streams split-sequence usocket) :source
  (("git" "https://github.com/jorams/birch.git")))
 (:ql-project birch :system-file birch.test :system-name birch.test
  :dependencies (asdf birch flexi-streams prove) :source
  (("git" "https://github.com/jorams/birch.git")))
 (:ql-project bit-ops :system-file bit-ops :system-name bit-ops :dependencies
  (alexandria asdf immutable-struct iterate lisp-namespace trivia) :source
  (("git" "https://github.com/guicho271828/bit-ops.git")))
 (:ql-project bit-ops :system-file bit-ops.test :system-name bit-ops.test
  :dependencies (asdf bit-ops fiveam) :source
  (("git" "https://github.com/guicho271828/bit-ops.git")))
 (:ql-project bit-smasher :system-file bit-smasher :system-name bit-smasher
  :dependencies (asdf cl-base58 cl-base64) :source
  (("git" "https://github.com/thephoeron/bit-smasher.git")))
 (:ql-project bit-smasher :system-file bit-smasher-test :system-name
  bit-smasher-test :dependencies (asdf bit-smasher prove prove-asdf) :source
  (("git" "https://github.com/thephoeron/bit-smasher.git")))
 (:ql-project bitfield :system-file bitfield :system-name bitfield
  :dependencies (asdf) :source
  (("git" "https://github.com/marcoheisig/bitfield.git")))
 (:ql-project bitfield-schema :system-file bitfield-schema :system-name
  bitfield-schema :dependencies (iterate) :source
  (("git" "https://bitbucket.org/swizard/bitfield-schema.git")))
 (:ql-project bitio :system-file bitio :system-name bitio :dependencies
  (asdf checkl cl-package-locks fast-io trivial-gray-streams) :source
  (("git" "https://github.com/psilord/bitio.git")))
 (:ql-project bk-tree :system-file bk-tree :system-name bk-tree :dependencies
  nil :source (("git" "https://github.com/vy/bk-tree.git")))
 (:ql-project bknr-datastore :system-file bknr.data.impex :system-name
  bknr.data.impex :dependencies
  (asdf bknr.datastore bknr.impex bknr.indices bknr.utils cl-interpol
   unit-test)
  :source (("git" "https://github.com/hanshuebner/bknr-datastore.git")))
 (:ql-project bknr-datastore :system-file bknr.datastore :system-name
  bknr.datastore :dependencies
  (alexandria asdf bknr.indices bknr.utils cl-interpol closer-mop trivial-utf-8
   unit-test yason)
  :source (("git" "https://github.com/hanshuebner/bknr-datastore.git")))
 (:ql-project bknr-datastore :system-file bknr.impex :system-name bknr.impex
  :dependencies
  (asdf bknr.indices bknr.utils bknr.xml cl-interpol closer-mop cxml) :source
  (("git" "https://github.com/hanshuebner/bknr-datastore.git")))
 (:ql-project bknr-datastore :system-file bknr.indices :system-name
  bknr.indices :dependencies
  (asdf bknr.skip-list bknr.utils cl-interpol closer-mop) :source
  (("git" "https://github.com/hanshuebner/bknr-datastore.git")))
 (:ql-project bknr-datastore :system-file bknr.skip-list :system-name
  bknr.skip-list :dependencies (asdf) :source
  (("git" "https://github.com/hanshuebner/bknr-datastore.git")))
 (:ql-project bknr-datastore :system-file bknr.skip-list :system-name
  bknr.skip-list.test :dependencies (bknr.skip-list unit-test) :source
  (("git" "https://github.com/hanshuebner/bknr-datastore.git")))
 (:ql-project bknr-datastore :system-file bknr.utils :system-name bknr.utils
  :dependencies
  (alexandria asdf bordeaux-threads cl-interpol cl-ppcre flexi-streams md5)
  :source (("git" "https://github.com/hanshuebner/bknr-datastore.git")))
 (:ql-project bknr-datastore :system-file bknr.xml :system-name bknr.xml
  :dependencies (asdf cl-interpol cxml) :source
  (("git" "https://github.com/hanshuebner/bknr-datastore.git")))
 (:ql-project bknr-web :system-file bknr.modules :system-name bknr.modules
  :dependencies
  (bknr.utils bknr.web cl-gd cl-interpol cl-ppcre cl-smtp closer-mop cxml md5
   parenscript puri stem unit-test)
  :source (("git" "https://github.com/hanshuebner/bknr-web.git")))
 (:ql-project bknr-web :system-file bknr.web :system-name bknr.web
  :dependencies
  (alexandria bknr.data.impex bknr.datastore bknr.utils bknr.xml cl-gd
   cl-interpol cl-ppcre cxml drakma hunchentoot md5 parenscript puri unit-test
   usocket xhtmlgen yason)
  :source (("git" "https://github.com/hanshuebner/bknr-web.git")))
 (:ql-project bknr-web :system-file html-match :system-name html-match
  :dependencies (cl-ppcre unit-test) :source
  (("git" "https://github.com/hanshuebner/bknr-web.git")))
 (:ql-project bknr-web :system-file html-match :system-name html-match.test
  :dependencies (html-match unit-test) :source
  (("git" "https://github.com/hanshuebner/bknr-web.git")))
 (:ql-project bknr-web :system-file leech :system-name leech :dependencies
  (aserve unit-test) :source
  (("git" "https://github.com/hanshuebner/bknr-web.git")))
 (:ql-project black-tie :system-file black-tie :system-name black-tie
  :dependencies (asdf) :source
  (("git" "https://gitlab.com/aerique/black-tie.git")))
 (:ql-project blackbird :system-file blackbird :system-name blackbird
  :dependencies (asdf vom) :source
  (("git" "https://github.com/orthecreedence/blackbird.git")))
 (:ql-project blackbird :system-file blackbird-test :system-name blackbird-test
  :dependencies (asdf blackbird cl-async fiveam) :source
  (("git" "https://github.com/orthecreedence/blackbird.git")))
 (:ql-project bnf :system-file bnf :system-name bnf :dependencies
  (asdf trestrul uiop) :source
  (("git" "https://github.com/hyotang666/bnf.git")))
 (:ql-project bnf :system-file bnf.test :system-name bnf.test :dependencies
  (asdf bnf jingoh) :source (("git" "https://github.com/hyotang666/bnf.git")))
 (:ql-project bobbin :system-file bobbin :system-name bobbin :dependencies
  (asdf split-sequence) :source
  (("mercurial" "https://hg.stevelosh.com/bobbin")))
 (:ql-project bobbin :system-file bobbin :system-name bobbin/test :dependencies
  (1am bobbin) :source (("mercurial" "https://hg.stevelosh.com/bobbin")))
 (:ql-project bodge-blobs-support :system-file bodge-blobs-support :system-name
  bodge-blobs-support :dependencies
  (alexandria asdf cffi trivial-features uiop) :source
  (("tagged-git" "https://github.com/borodust/bodge-blobs-support.git"
    "stable")))
 (:ql-project bodge-chipmunk :system-file bodge-chipmunk :system-name
  bodge-chipmunk :dependencies
  (alexandria asdf cffi cffi-c-ref claw claw-utils) :source
  (("tagged-git" "https://github.com/borodust/bodge-chipmunk.git" "stable")))
 (:ql-project bodge-chipmunk :system-file bodge-chipmunk :system-name
  bodge-chipmunk/example :dependencies
  (bodge-chipmunk chipmunk-blob float-features) :source
  (("tagged-git" "https://github.com/borodust/bodge-chipmunk.git" "stable")))
 (:ql-project bodge-concurrency :system-file bodge-concurrency :system-name
  bodge-concurrency :dependencies
  (asdf bodge-memory bodge-queue bodge-utilities bordeaux-threads cl-flow
   cl-muth simple-flow-dispatcher trivial-main-thread)
  :source
  (("tagged-git" "https://github.com/borodust/bodge-concurrency.git"
    "stable")))
 (:ql-project bodge-glad :system-file bodge-glad :system-name bodge-glad
  :dependencies (alexandria asdf cffi) :source
  (("tagged-git" "https://github.com/borodust/bodge-glad.git" "stable")))
 (:ql-project bodge-glfw :system-file bodge-glfw :system-name bodge-glfw
  :dependencies (alexandria asdf cffi cffi-c-ref claw claw-utils) :source
  (("tagged-git" "https://github.com/borodust/bodge-glfw.git" "stable")))
 (:ql-project bodge-glfw :system-file bodge-glfw :system-name
  bodge-glfw/example :dependencies (bodge-glfw cl-opengl claw glfw-blob)
  :source
  (("tagged-git" "https://github.com/borodust/bodge-glfw.git" "stable")))
 (:ql-project bodge-heap :system-file bodge-heap :system-name bodge-heap
  :dependencies (asdf) :source
  (("tagged-git" "https://github.com/borodust/bodge-heap.git" "stable")))
 (:ql-project bodge-heap :system-file bodge-heap :system-name bodge-heap/tests
  :dependencies (alexandria bodge-heap fiveam) :source
  (("tagged-git" "https://github.com/borodust/bodge-heap.git" "stable")))
 (:ql-project bodge-host :system-file bodge-host :system-name bodge-host
  :dependencies
  (asdf bodge-concurrency bodge-glfw bodge-libc-essentials bodge-math
   bodge-utilities cffi-c-ref float-features glfw-blob)
  :source
  (("tagged-git" "https://github.com/borodust/bodge-host.git" "stable")))
 (:ql-project bodge-libc-essentials :system-file bodge-libc-essentials
  :system-name bodge-libc-essentials :dependencies (asdf claw) :source
  (("tagged-git" "https://github.com/borodust/bodge-libc-essentials.git"
    "stable")))
 (:ql-project bodge-math :system-file bodge-math :system-name bodge-math
  :dependencies (asdf bodge-utilities rtg-math) :source
  (("tagged-git" "https://github.com/borodust/bodge-math.git" "stable")))
 (:ql-project bodge-memory :system-file bodge-memory :system-name bodge-memory
  :dependencies (asdf bodge-utilities trivial-garbage) :source
  (("tagged-git" "https://github.com/borodust/bodge-memory.git" "stable")))
 (:ql-project bodge-nanovg :system-file bodge-nanovg :system-name bodge-nanovg
  :dependencies (alexandria asdf cffi cffi-c-ref claw claw-utils uiop) :source
  (("tagged-git" "https://github.com/borodust/bodge-nanovg.git" "stable")))
 (:ql-project bodge-nanovg :system-file bodge-nanovg :system-name
  bodge-nanovg/example :dependencies
  (bodge-glad bodge-glfw bodge-nanovg cffi cffi-c-ref cl-opengl claw
   float-features glad-blob glfw-blob nanovg-blob trivial-main-thread)
  :source
  (("tagged-git" "https://github.com/borodust/bodge-nanovg.git" "stable")))
 (:ql-project bodge-nuklear :system-file bodge-nuklear :system-name
  bodge-nuklear :dependencies (alexandria asdf cffi cffi-c-ref claw claw-utils)
  :source
  (("tagged-git" "https://github.com/borodust/bodge-nuklear.git" "stable")))
 (:ql-project bodge-ode :system-file bodge-ode :system-name bodge-ode
  :dependencies
  (alexandria asdf cffi cffi-c-ref claw claw-utils float-features) :source
  (("tagged-git" "https://github.com/borodust/bodge-ode.git" "stable")))
 (:ql-project bodge-ode :system-file bodge-ode :system-name bodge-ode/example
  :dependencies (bodge-ode cffi-c-ref claw ode-blob) :source
  (("tagged-git" "https://github.com/borodust/bodge-ode.git" "stable")))
 (:ql-project bodge-openal :system-file bodge-openal :system-name bodge-openal
  :dependencies (alexandria asdf cffi claw claw-utils) :source
  (("tagged-git" "https://github.com/borodust/bodge-openal.git" "stable")))
 (:ql-project bodge-openal :system-file bodge-openal :system-name
  bodge-openal/example :dependencies
  (alexandria bodge-openal cffi-c-ref claw float-features openal-blob
   static-vectors)
  :source
  (("tagged-git" "https://github.com/borodust/bodge-openal.git" "stable")))
 (:ql-project bodge-queue :system-file bodge-queue :system-name bodge-queue
  :dependencies (asdf) :source
  (("tagged-git" "https://github.com/borodust/bodge-queue.git" "stable")))
 (:ql-project bodge-queue :system-file bodge-queue :system-name
  bodge-queue/tests :dependencies (bodge-queue fiveam) :source
  (("tagged-git" "https://github.com/borodust/bodge-queue.git" "stable")))
 (:ql-project bodge-sndfile :system-file bodge-sndfile :system-name
  bodge-sndfile :dependencies
  (alexandria asdf bodge-libc-essentials cffi cffi-c-ref claw claw-utils
   static-vectors)
  :source
  (("tagged-git" "https://github.com/borodust/bodge-sndfile.git" "stable")))
 (:ql-project bodge-sndfile :system-file bodge-sndfile :system-name
  bodge-sndfile/example :dependencies (bodge-sndfile cffi-c-ref sndfile-blob)
  :source
  (("tagged-git" "https://github.com/borodust/bodge-sndfile.git" "stable")))
 (:ql-project bodge-utilities :system-file bodge-utilities :system-name
  bodge-utilities :dependencies
  (alexandria asdf cffi claw dissect local-time log4cl split-sequence
   static-vectors trivial-gray-streams uiop)
  :source
  (("tagged-git" "https://github.com/borodust/bodge-utilities.git" "stable")))
 (:ql-project bordeaux-fft :system-file bordeaux-fft :system-name bordeaux-fft
  :dependencies nil :source
  (("http"
    "http://vintage-digital.com/hefner/software/bordeaux-fft/bordeaux-fft-current.tar.gz")))
 (:ql-project bordeaux-threads :system-file bordeaux-threads :system-name
  bordeaux-threads :dependencies
  (alexandria asdf global-vars trivial-features trivial-garbage) :source
  (("latest-github-release" "https://github.com/sionescu/bordeaux-threads.git")
   nil))
 (:ql-project bordeaux-threads :system-file bordeaux-threads :system-name
  bordeaux-threads/test :dependencies (bordeaux-threads fiveam) :source
  (("latest-github-release" "https://github.com/sionescu/bordeaux-threads.git")
   nil))
 (:ql-project bourbaki :system-file bourbaki :system-name bourbaki
  :dependencies nil :source
  (("http" "http://juhaarpi.users.paivola.fi/bourbaki/bourbaki.tar.gz")))
 (:ql-project bp :system-file bp :system-name bp :dependencies
  (asdf aserve cffi ironclad jsown usocket) :source
  (("git" "https://github.com/rodentrabies/bp.git")))
 (:ql-project bst :system-file bst :system-name bst :dependencies (asdf)
  :source (("git" "https://codeberg.org/glv/bst.git")))
 (:ql-project bst :system-file bst :system-name bst/test :dependencies
  (alexandria bst fiveam) :source (("git" "https://codeberg.org/glv/bst.git")))
 (:ql-project bt-semaphore :system-file bt-semaphore :system-name bt-semaphore
  :dependencies (asdf bordeaux-threads) :source
  (("git" "https://github.com/rmoritz/bt-semaphore.git")))
 (:ql-project bt-semaphore :system-file bt-semaphore-test :system-name
  bt-semaphore-test :dependencies (asdf bt-semaphore clunit) :source
  (("git" "https://github.com/rmoritz/bt-semaphore.git")))
 (:ql-project btrie :system-file btrie :system-name btrie :dependencies
  (arnesi lift split-sequence) :source
  (("git" "https://github.com/peterhil/btrie.git")))
 (:ql-project btrie :system-file btrie :system-name btrie-tests :dependencies
  (btrie lift metabang-bind) :source
  (("git" "https://github.com/peterhil/btrie.git")))
 (:ql-project bubble-operator-upwards :system-file bubble-operator-upwards
  :system-name bubble-operator-upwards :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/bubble-operator-upwards_latest.tar.gz")))
 (:ql-project bubble-operator-upwards :system-file
  bubble-operator-upwards_tests :system-name bubble-operator-upwards_tests
  :dependencies (asdf bubble-operator-upwards parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/bubble-operator-upwards_latest.tar.gz")))
 (:ql-project buildapp :system-file buildapp :system-name buildapp
  :dependencies nil :source
  (("https" "https://www.xach.com/lisp/buildapp.tgz")))
 (:ql-project buildnode :system-file buildnode :system-name buildnode
  :dependencies
  (alexandria cl-interpol cl-ppcre closure-html collectors cxml flexi-streams
   iterate split-sequence swank symbol-munger)
  :source (("git" "https://github.com/AccelerationNet/buildnode.git")))
 (:ql-project buildnode :system-file buildnode-excel :system-name
  buildnode-excel :dependencies (buildnode) :source
  (("git" "https://github.com/AccelerationNet/buildnode.git")))
 (:ql-project buildnode :system-file buildnode-html5 :system-name
  buildnode-html5 :dependencies (buildnode) :source
  (("git" "https://github.com/AccelerationNet/buildnode.git")))
 (:ql-project buildnode :system-file buildnode-kml :system-name buildnode-kml
  :dependencies (buildnode) :source
  (("git" "https://github.com/AccelerationNet/buildnode.git")))
 (:ql-project buildnode :system-file buildnode :system-name buildnode-test
  :dependencies (buildnode buildnode-xhtml lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/buildnode.git")))
 (:ql-project buildnode :system-file buildnode-xhtml :system-name
  buildnode-xhtml :dependencies (buildnode) :source
  (("git" "https://github.com/AccelerationNet/buildnode.git")))
 (:ql-project buildnode :system-file buildnode-xul :system-name buildnode-xul
  :dependencies (buildnode) :source
  (("git" "https://github.com/AccelerationNet/buildnode.git")))
 (:ql-project burgled-batteries :system-file burgled-batteries :system-name
  burgled-batteries :dependencies
  (alexandria cffi cffi-grovel cl-fad parse-declarations-1.0 trivial-garbage)
  :source (("git" "https://github.com/pinterface/burgled-batteries.git")))
 (:ql-project burgled-batteries :system-file burgled-batteries-tests
  :system-name burgled-batteries-tests :dependencies
  (burgled-batteries cl-quickcheck lift) :source
  (("git" "https://github.com/pinterface/burgled-batteries.git")))
 (:ql-project burgled-batteries.syntax :system-file burgled-batteries.syntax
  :system-name burgled-batteries.syntax :dependencies
  (asdf burgled-batteries esrap named-readtables) :source
  (("git" "https://github.com/mmontone/burgled-batteries.syntax.git")))
 (:ql-project burgled-batteries.syntax :system-file
  burgled-batteries.syntax-test :system-name burgled-batteries.syntax-test
  :dependencies (asdf burgled-batteries.syntax lift) :source
  (("git" "https://github.com/mmontone/burgled-batteries.syntax.git")))
 (:ql-project bytecurry.asdf-ext :system-file bytecurry.asdf-ext :system-name
  bytecurry.asdf-ext :dependencies (asdf asdf-package-system) :source
  (("git" "https://github.com/bytecurry/bytecurry.asdf-ext.git")))
 (:ql-project bytecurry.mocks :system-file bytecurry.mocks :system-name
  bytecurry.mocks :dependencies (asdf asdf-package-system bytecurry.asdf-ext)
  :source (("git" "https://github.com/bytecurry/bytecurry.mocks.git")))
 (:ql-project bytecurry.mocks :system-file bytecurry.mocks :system-name
  bytecurry.mocks/test :dependencies (bytecurry.mocks fiveam) :source
  (("git" "https://github.com/bytecurry/bytecurry.mocks.git")))
 (:ql-project c2ffi-blob :system-file c2ffi-blob :system-name c2ffi-blob
  :dependencies (asdf claw-support trivial-features) :source
  (("tagged-git" "https://github.com/borodust/c2ffi-blob.git" "stable")))
 (:ql-project cacau :system-file cacau :system-name cacau :dependencies
  (asdf assertion-error eventbus) :source
  (("git" "https://github.com/noloop/cacau.git")))
 (:ql-project cacau :system-file cacau-asdf :system-name cacau-asdf
  :dependencies (asdf) :source (("git" "https://github.com/noloop/cacau.git")))
 (:ql-project cacau :system-file cacau-examples-asdf-integration :system-name
  cacau-examples-asdf-integration :dependencies (asdf) :source
  (("git" "https://github.com/noloop/cacau.git")))
 (:ql-project cacau :system-file cacau-examples-asdf-integration-test
  :system-name cacau-examples-asdf-integration-test :dependencies
  (asdf assert-p cacau cacau-asdf cacau-examples-asdf-integration) :source
  (("git" "https://github.com/noloop/cacau.git")))
 (:ql-project cacau :system-file cacau-test :system-name cacau-test
  :dependencies (asdf assert-p cacau cacau-asdf) :source
  (("git" "https://github.com/noloop/cacau.git")))
 (:ql-project cache-while :system-file cache-while :system-name cache-while
  :dependencies (asdf) :source
  (("git" "https://github.com/charje/cache-while.git")))
 (:ql-project cacle :system-file cacle :system-name cacle :dependencies
  (asdf bordeaux-threads) :source
  (("git" "https://github.com/jlahd/cacle.git")))
 (:ql-project calispel :system-file calispel :system-name calispel
  :dependencies (bordeaux-threads jpl-queues jpl-util) :source
  (("git" "https://github.com/hawkir/calispel.git")))
 (:ql-project calispel :system-file calispel :system-name calispel-test
  :dependencies (calispel eager-future2) :source
  (("git" "https://github.com/hawkir/calispel.git")))
 (:ql-project calm :system-file calm :system-name calm :dependencies
  (asdf bt-semaphore cl-cairo2 cl-gobject-introspection sdl2 sdl2-image
   sdl2-mixer str swank)
  :source (("git" "https://github.com/VitoVan/calm.git")))
 (:ql-project cambl :system-file cambl :system-name cambl :dependencies
  (alexandria asdf cl-containers fprog local-time periods) :source
  (("git" "https://github.com/jwiegley/cambl.git")))
 (:ql-project cambl :system-file cambl-test :system-name cambl-test
  :dependencies (asdf cambl uiop xlunit) :source
  (("git" "https://github.com/jwiegley/cambl.git")))
 (:ql-project cambl :system-file fprog :system-name fprog :dependencies (asdf)
  :source (("git" "https://github.com/jwiegley/cambl.git")))
 (:ql-project can :system-file can :system-name can :dependencies (asdf)
  :source (("git" "https://github.com/fukamachi/can.git")))
 (:ql-project can :system-file can-test :system-name can-test :dependencies
  (alexandria asdf can mito prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/can.git")))
 (:ql-project canonicalized-initargs :system-file canonicalized-initargs
  :system-name canonicalized-initargs :dependencies
  (asdf cesdi closer-mop compatible-metaclasses enhanced-defclass
   enhanced-typep object-class)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/canonicalized-initargs_latest.tar.gz")))
 (:ql-project canonicalized-initargs :system-file canonicalized-initargs_tests
  :system-name canonicalized-initargs_tests :dependencies
  (asdf canonicalized-initargs enhanced-boolean enhanced-eval-when parachute)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/canonicalized-initargs_latest.tar.gz")))
 (:ql-project caramel :system-file caramel :system-name caramel :dependencies
  (alexandria buildnode closure-html css-selectors cxml cxml-dom iterate)
  :source (("git" "https://github.com/pocket7878/Caramel.git")))
 (:ql-project cardiogram :system-file cardioex :system-name cardioex
  :dependencies (asdf cardiogram) :source
  (("git" "https://gitlab.com/a.aguilar/cardiogram.git")))
 (:ql-project cardiogram :system-file cardiogram :system-name cardiogram
  :dependencies (asdf cl-annot closer-mop) :source
  (("git" "https://gitlab.com/a.aguilar/cardiogram.git")))
 (:ql-project cari3s :system-file cari3s :system-name cari3s :dependencies
  (asdf cffi closer-mop com.inuoe.jzon documentation-utils drakma pango-markup
   usocket)
  :source (("git" "https://github.com/Shinmera/cari3s.git")))
 (:ql-project carrier :system-file carrier :system-name carrier :dependencies
  (alexandria asdf babel blackbird cl-async cl-async-ssl cl-cookie fast-http
   fast-io quri)
  :source (("git" "https://github.com/orthecreedence/carrier.git")))
 (:ql-project cartesian-product-switch :system-file cartesian-product-switch
  :system-name cartesian-product-switch :dependencies (map-bind) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/cartesian-product-switch_latest.tar.gz")))
 (:ql-project caveman :system-file caveman-middleware-dbimanager :system-name
  caveman-middleware-dbimanager :dependencies (asdf dbi) :source
  (("git" "https://github.com/fukamachi/caveman.git")))
 (:ql-project caveman :system-file caveman2 :system-name caveman2 :dependencies
  (asdf cl-project cl-syntax-annot dbi lack-request lack-response myway ningle
   quri)
  :source (("git" "https://github.com/fukamachi/caveman.git")))
 (:ql-project caveman :system-file caveman2-db :system-name caveman2-db
  :dependencies (asdf caveman-middleware-dbimanager dbi sxql) :source
  (("git" "https://github.com/fukamachi/caveman.git")))
 (:ql-project caveman :system-file caveman2-test :system-name caveman2-test
  :dependencies
  (asdf caveman2 dexador lack-component prove prove-asdf trivial-types uiop
   usocket)
  :source (("git" "https://github.com/fukamachi/caveman.git")))
 (:ql-project caveman2-widgets :system-file caveman2-widgets :system-name
  caveman2-widgets :dependencies (asdf caveman2 moptilities trivial-garbage)
  :source (("git" "https://github.com/ritschmaster/caveman2-widgets.git")))
 (:ql-project caveman2-widgets :system-file caveman2-widgets-test :system-name
  caveman2-widgets-test :dependencies (asdf caveman2-widgets prove prove-asdf)
  :source (("git" "https://github.com/ritschmaster/caveman2-widgets.git")))
 (:ql-project caveman2-widgets-bootstrap :system-file
  caveman2-widgets-bootstrap :system-name caveman2-widgets-bootstrap
  :dependencies (asdf caveman2 caveman2-widgets) :source
  (("git" "https://github.com/ritschmaster/caveman2-widgets-bootstrap.git")))
 (:ql-project caveman2-widgets-bootstrap :system-file
  caveman2-widgets-bootstrap-test :system-name caveman2-widgets-bootstrap-test
  :dependencies (asdf caveman2-widgets-bootstrap prove prove-asdf) :source
  (("git" "https://github.com/ritschmaster/caveman2-widgets-bootstrap.git")))
 (:ql-project ccl-compat :system-file ccl-compat :system-name ccl-compat
  :dependencies (alexandria bordeaux-threads closer-mop) :source
  (("git" "https://github.com/phoe/ccl-compat.git")))
 (:ql-project ccldoc :system-file ccldoc :system-name ccldoc :dependencies
  (alexandria asdf ccl-compat cl-who s-xml split-sequence) :source
  (("git" "https://github.com/Clozure/ccldoc.git")))
 (:ql-project ccldoc :system-file ccldoc-libraries :system-name
  ccldoc-libraries :dependencies (alexandria asdf s-xml split-sequence) :source
  (("git" "https://github.com/Clozure/ccldoc.git")))
 (:ql-project cells :system-file cells :system-name cells :dependencies
  (asdf utils-kt) :source (("git" "https://github.com/kennytilton/cells.git")))
 (:ql-project cells :system-file cells-test :system-name cells-test
  :dependencies (asdf cells) :source
  (("git" "https://github.com/kennytilton/cells.git")))
 (:ql-project cephes.cl :system-file cephes :system-name cephes :dependencies
  (asdf cffi) :source (("git" "https://github.com/Lisp-Stat/cephes.cl.git")))
 (:ql-project cepl :system-file cepl :system-name cepl :dependencies
  (alexandria asdf bordeaux-threads cepl.build cffi cl-opengl cl-ppcre
   documentation-utils float-features ieee-floats split-sequence uiop varjo)
  :source
  (("branched-git" "https://github.com/cbaggers/cepl.git"
    "release-quicklisp")))
 (:ql-project cepl :system-file cepl.build :system-name cepl.build
  :dependencies (alexandria asdf) :source
  (("branched-git" "https://github.com/cbaggers/cepl.git"
    "release-quicklisp")))
 (:ql-project cepl.camera :system-file cepl.camera :system-name cepl.camera
  :dependencies (asdf cepl cepl.spaces rtg-math) :source
  (("branched-git" "https://github.com/cbaggers/cepl.camera.git"
    "release-quicklisp")))
 (:ql-project cepl.devil :system-file cepl.devil :system-name cepl.devil
  :dependencies (asdf cepl cl-devil) :source
  (("branched-git" "https://github.com/cbaggers/cepl.devil.git"
    "release-quicklisp")))
 (:ql-project cepl.drm-gbm :system-file cepl.drm-gbm :system-name cepl.drm-gbm
  :dependencies (asdf cepl cl-drm cl-egl cl-gbm osicat) :source
  (("git" "https://github.com/malcolmstill/cepl.drm-gbm.git")))
 (:ql-project cepl.glop :system-file cepl.glop :system-name cepl.glop
  :dependencies (asdf cepl glop) :source
  (("branched-git" "https://github.com/cbaggers/cepl.glop.git"
    "release-quicklisp")))
 (:ql-project cepl.sdl2 :system-file cepl.sdl2 :system-name cepl.sdl2
  :dependencies (asdf cepl sdl2) :source
  (("branched-git" "https://github.com/cbaggers/cepl.sdl2.git"
    "release-quicklisp")))
 (:ql-project cepl.sdl2-image :system-file cepl.sdl2-image :system-name
  cepl.sdl2-image :dependencies (asdf cepl sdl2 sdl2-image) :source
  (("branched-git" "https://github.com/cbaggers/cepl.sdl2-image.git"
    "release-quicklisp")))
 (:ql-project cepl.sdl2-ttf :system-file cepl.sdl2-ttf :system-name
  cepl.sdl2-ttf :dependencies (asdf cepl.sdl2 rtg-math sdl2-ttf) :source
  (("branched-git" "https://github.com/cbaggers/cepl.sdl2-ttf.git"
    "release-quicklisp")))
 (:ql-project cepl.skitter :system-file cepl.skitter.glop :system-name
  cepl.skitter.glop :dependencies (asdf cepl.glop skitter.glop) :source
  (("branched-git" "https://github.com/cbaggers/cepl.skitter.git"
    "release-quicklisp")))
 (:ql-project cepl.skitter :system-file cepl.skitter.sdl2 :system-name
  cepl.skitter.sdl2 :dependencies (asdf cepl.sdl2 skitter.sdl2) :source
  (("branched-git" "https://github.com/cbaggers/cepl.skitter.git"
    "release-quicklisp")))
 (:ql-project cepl.spaces :system-file cepl.spaces :system-name cepl.spaces
  :dependencies (asdf cepl documentation-utils fn rtg-math rtg-math.vari varjo)
  :source
  (("branched-git" "https://github.com/cbaggers/cepl.spaces.git"
    "release-quicklisp")))
 (:ql-project ceramic :system-file ceramic :system-name ceramic :dependencies
  (asdf cl-json clack-handler-hunchentoot copy-directory electron-tools
   external-program remote-js trivial-build trivial-compress trivial-download
   trivial-exe trivial-extract uiop uuid)
  :source (("git" "https://github.com/ceramic/ceramic.git")))
 (:ql-project ceramic :system-file ceramic-test-app :system-name
  ceramic-test-app :dependencies (asdf ceramic drakma) :source
  (("git" "https://github.com/ceramic/ceramic.git")))
 (:ql-project cerberus :system-file cerberus :system-name cerberus
  :dependencies
  (alexandria asdf babel flexi-streams glass ironclad nibbles usocket) :source
  (("git" "https://github.com/fjames86/cerberus.git")))
 (:ql-project cerberus :system-file cerberus :system-name cerberus-kdc
  :dependencies (cerberus frpc pounds) :source
  (("git" "https://github.com/fjames86/cerberus.git")))
 (:ql-project cesdi :system-file cesdi :system-name cesdi :dependencies
  (asdf closer-mop) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/cesdi_latest.tar.gz")))
 (:ql-project cesdi :system-file cesdi_tests :system-name cesdi_tests
  :dependencies (asdf cesdi parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/cesdi_latest.tar.gz")))
 (:ql-project cffi :system-file cffi :system-name cffi :dependencies
  (alexandria asdf babel trivial-features uiop) :source
  (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi :system-file cffi-examples :system-name cffi-examples
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi :system-file cffi-grovel :system-name cffi-grovel
  :dependencies (alexandria asdf cffi cffi-toolchain) :source
  (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi :system-file cffi-libffi :system-name cffi-libffi
  :dependencies (asdf cffi cffi-grovel trivial-features) :source
  (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi :system-file cffi-tests :system-name cffi-tests
  :dependencies
  (asdf bordeaux-threads cffi-grovel cffi-libffi rt trivial-features) :source
  (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi :system-file cffi-tests :system-name cffi-tests/example
  :dependencies (cffi-grovel) :source
  (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi :system-file cffi-toolchain :system-name cffi-toolchain
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi :system-file cffi-uffi-compat :system-name cffi-uffi-compat
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi :system-file cffi :system-name cffi/c2ffi :dependencies
  (alexandria cffi) :source (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi :system-file cffi :system-name cffi/c2ffi-generator
  :dependencies (alexandria cffi cl-json cl-ppcre) :source
  (("git" "https://github.com/cffi/cffi.git")))
 (:ql-project cffi-c-ref :system-file cffi-c-ref :system-name cffi-c-ref
  :dependencies (alexandria asdf cffi) :source
  (("tagged-git" "https://github.com/borodust/cffi-c-ref.git" "stable")))
 (:ql-project cffi-c-ref :system-file cffi-c-ref :system-name cffi-c-ref/tests
  :dependencies (alexandria bodge-libc-essentials cffi-c-ref fiveam) :source
  (("tagged-git" "https://github.com/borodust/cffi-c-ref.git" "stable")))
 (:ql-project cffi-object :system-file cffi-object :system-name cffi-object
  :dependencies (alexandria asdf cffi trivial-garbage uiop) :source
  (("git" "https://github.com/bohonghuang/cffi-object.git")))
 (:ql-project cffi-object :system-file cffi-object.ops :system-name
  cffi-object.ops :dependencies (asdf cffi-object cffi-ops) :source
  (("git" "https://github.com/bohonghuang/cffi-object.git")))
 (:ql-project cffi-object :system-file cffi-object :system-name
  cffi-object/test :dependencies
  (cffi-object cffi-object.ops cffi-ops parachute) :source
  (("git" "https://github.com/bohonghuang/cffi-object.git")))
 (:ql-project cffi-ops :system-file cffi-ops :system-name cffi-ops
  :dependencies (alexandria arrow-macros asdf cffi trivial-macroexpand-all)
  :source (("git" "https://github.com/bohonghuang/cffi-ops.git")))
 (:ql-project cffi-ops :system-file cffi-ops :system-name cffi-ops/test
  :dependencies (cffi-ops parachute) :source
  (("git" "https://github.com/bohonghuang/cffi-ops.git")))
 (:ql-project chain :system-file chain :system-name chain :dependencies
  (asdf metabang-bind) :source (("git" "https://gitlab.com/Aksej/chain.git")))
 (:ql-project chameleon :system-file chameleon :system-name chameleon
  :dependencies (alexandria asdf) :source
  (("latest-github-tag" "https://github.com/sheepduke/chameleon.git")))
 (:ql-project chameleon :system-file chameleon :system-name chameleon/tests
  :dependencies (chameleon fiveam) :source
  (("latest-github-tag" "https://github.com/sheepduke/chameleon.git")))
 (:ql-project chancery :system-file chancery :system-name chancery
  :dependencies (asdf named-readtables) :source
  (("mercurial" "https://hg.stevelosh.com/chancery")))
 (:ql-project chancery :system-file chancery.test :system-name chancery.test
  :dependencies (1am asdf chancery) :source
  (("mercurial" "https://hg.stevelosh.com/chancery")))
 (:ql-project changed-stream :system-file changed-stream :system-name
  changed-stream :dependencies nil :source
  (("git" "https://github.com/WarrenWilkinson/changed-stream.git")))
 (:ql-project changed-stream :system-file changed-stream.test :system-name
  changed-stream.test :dependencies (changed-stream) :source
  (("git" "https://github.com/WarrenWilkinson/changed-stream.git")))
 (:ql-project chanl :system-file chanl :system-name chanl :dependencies
  (asdf bordeaux-threads) :source
  (("git" "https://github.com/zkat/chanl.git")))
 (:ql-project chanl :system-file chanl :system-name chanl/examples
  :dependencies (chanl) :source (("git" "https://github.com/zkat/chanl.git")))
 (:ql-project chanl :system-file chanl :system-name chanl/tests :dependencies
  (chanl fiveam) :source (("git" "https://github.com/zkat/chanl.git")))
 (:ql-project cheat-js :system-file cheat-js :system-name cheat-js
  :dependencies (cl-uglify-js fiveam) :source
  (("git" "https://github.com/mbrezu/Cheat-JS.git")))
 (:ql-project check-bnf :system-file check-bnf :system-name check-bnf
  :dependencies
  (alexandria asdf closer-mop jingoh.documentizer matrix-case millet) :source
  (("git" "https://github.com/hyotang666/check-bnf.git")))
 (:ql-project check-bnf :system-file check-bnf.test :system-name check-bnf.test
  :dependencies (asdf check-bnf jingoh) :source
  (("git" "https://github.com/hyotang666/check-bnf.git")))
 (:ql-project check-it :system-file check-it :system-name check-it
  :dependencies (alexandria closer-mop optima) :source
  (("git" "https://github.com/DalekBaldwin/check-it.git")))
 (:ql-project check-it :system-file check-it :system-name check-it-test
  :dependencies (check-it stefil) :source
  (("git" "https://github.com/DalekBaldwin/check-it.git")))
 (:ql-project checkl :system-file checkl :system-name checkl :dependencies
  (asdf marshal) :source (("git" "https://github.com/rpav/CheckL.git")))
 (:ql-project checkl :system-file checkl-docs :system-name checkl-docs
  :dependencies (asdf checkl cl-gendoc) :source
  (("git" "https://github.com/rpav/CheckL.git")))
 (:ql-project checkl :system-file checkl-test :system-name checkl-test
  :dependencies (asdf checkl fiveam) :source
  (("git" "https://github.com/rpav/CheckL.git")))
 (:ql-project chemical-compounds :system-file chemical-compounds :system-name
  chemical-compounds :dependencies (periodic-table) :source
  (("https"
    "https://common-lisp.net/project/chemboy/chemical-compounds-latest.tar.gz")))
 (:ql-project chillax :system-file chillax :system-name chillax :dependencies
  (chillax.core chillax.yason) :source
  (("git" "https://github.com/zkat/chillax.git")))
 (:ql-project chillax :system-file chillax.core :system-name chillax.core
  :dependencies (alexandria drakma flexi-streams) :source
  (("git" "https://github.com/zkat/chillax.git")))
 (:ql-project chillax :system-file chillax.jsown :system-name chillax.jsown
  :dependencies (chillax.core jsown) :source
  (("git" "https://github.com/zkat/chillax.git")))
 (:ql-project chillax :system-file chillax.view-server :system-name
  chillax.view-server :dependencies (alexandria yason) :source
  (("git" "https://github.com/zkat/chillax.git")))
 (:ql-project chillax :system-file chillax.yason :system-name chillax.yason
  :dependencies (chillax.core yason) :source
  (("git" "https://github.com/zkat/chillax.git")))
 (:ql-project chipmunk-blob :system-file chipmunk-blob :system-name
  chipmunk-blob :dependencies (asdf bodge-blobs-support trivial-features)
  :source
  (("tagged-git" "https://github.com/borodust/chipmunk-blob.git" "stable")))
 (:ql-project chipz :system-file chipz :system-name chipz :dependencies (asdf)
  :source (("git" "https://github.com/sharplispers/chipz.git") nil))
 (:ql-project chirp :system-file chirp :system-name chirp :dependencies
  (asdf chirp-drakma) :source
  (("git" "https://github.com/Shinmera/chirp.git")))
 (:ql-project chirp :system-file chirp-core :system-name chirp-core
  :dependencies
  (alexandria asdf babel cl-base64 cl-ppcre flexi-streams ironclad local-time
   split-sequence uuid yason)
  :source (("git" "https://github.com/Shinmera/chirp.git")))
 (:ql-project chirp :system-file chirp-dexador :system-name chirp-dexador
  :dependencies (asdf chirp-core dexador) :source
  (("git" "https://github.com/Shinmera/chirp.git")))
 (:ql-project chirp :system-file chirp-drakma :system-name chirp-drakma
  :dependencies (asdf chirp-core drakma) :source
  (("git" "https://github.com/Shinmera/chirp.git")))
 (:ql-project chlorophyll :system-file chlorophyll :system-name chlorophyll
  :dependencies (alexandria asdf uiop) :source
  (("git" "https://github.com/gorozhin/chlorophyll.git")))
 (:ql-project chlorophyll :system-file chlorophyll-test :system-name
  chlorophyll-test :dependencies (alexandria asdf chlorophyll fiveam) :source
  (("git" "https://github.com/gorozhin/chlorophyll.git")))
 (:ql-project chrome-native-messaging :system-file chrome-native-messaging
  :system-name chrome-native-messaging :dependencies (trivial-utf-8) :source
  (("git" "https://github.com/Ralt/chrome-native-messaging.git")))
 (:ql-project chronicity :system-file chronicity :system-name chronicity
  :dependencies (asdf cl-interpol cl-ppcre local-time) :source
  (("git" "https://github.com/chaitanyagupta/chronicity.git")))
 (:ql-project chronicity :system-file chronicity-test :system-name
  chronicity-test :dependencies (asdf chronicity lisp-unit) :source
  (("git" "https://github.com/chaitanyagupta/chronicity.git")))
 (:ql-project chtml-matcher :system-file chtml-matcher :system-name
  chtml-matcher :dependencies (cl-ppcre closure-html f-underscore stdutils)
  :source (("git" "https://github.com/eslick/chtml-matcher.git")))
 (:ql-project chunga :system-file chunga :system-name chunga :dependencies
  (asdf trivial-gray-streams) :source (("ediware-http" "chunga")))
 (:ql-project ci :system-file 40ants-ci :system-name 40ants-ci :dependencies
  (40ants-asdf-system 40ants-doc alexandria asdf docs-config str yason) :source
  (("git" "https://github.com/40ants/ci.git")))
 (:ql-project ci :system-file 40ants-ci-tests :system-name 40ants-ci-tests
  :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/ci.git")))
 (:ql-project ci-utils :system-file ci-utils :system-name ci-utils
  :dependencies (asdf ci-utils-features) :source
  (("git" "https://github.com/neil-lindquist/ci-utils.git")))
 (:ql-project ci-utils :system-file ci-utils-features :system-name
  ci-utils-features :dependencies (asdf) :source
  (("git" "https://github.com/neil-lindquist/ci-utils.git")))
 (:ql-project ci-utils :system-file ci-utils :system-name ci-utils/coveralls
  :dependencies (ci-utils ci-utils-features split-sequence) :source
  (("git" "https://github.com/neil-lindquist/ci-utils.git")))
 (:ql-project ci-utils :system-file ci-utils :system-name ci-utils/test
  :dependencies (ci-utils ci-utils-features fiveam split-sequence) :source
  (("git" "https://github.com/neil-lindquist/ci-utils.git")))
 (:ql-project ciao :system-file ciao :system-name ciao :dependencies
  (asdf cl-json dexador hunchentoot trivial-open-browser) :source
  (("git" "https://github.com/kjinho/ciao.git")))
 (:ql-project ciao :system-file ciao :system-name ciao/tests :dependencies
  (ciao rove) :source (("git" "https://github.com/kjinho/ciao.git")))
 (:ql-project circular-streams :system-file circular-streams :system-name
  circular-streams :dependencies (fast-io trivial-gray-streams) :source
  (("git" "https://github.com/fukamachi/circular-streams.git")))
 (:ql-project circular-streams :system-file circular-streams-test :system-name
  circular-streams-test :dependencies
  (circular-streams cl-test-more flexi-streams) :source
  (("git" "https://github.com/fukamachi/circular-streams.git")))
 (:ql-project city-hash :system-file city-hash :system-name city-hash
  :dependencies (asdf com.google.base nibbles swap-bytes) :source
  (("git" "https://github.com/brown/city-hash.git")))
 (:ql-project city-hash :system-file city-hash-test :system-name city-hash-test
  :dependencies (asdf city-hash hu.dwim.stefil) :source
  (("git" "https://github.com/brown/city-hash.git")))
 (:ql-project cl+ssl :system-file cl+ssl :system-name cl+ssl :dependencies
  (alexandria asdf bordeaux-threads cffi flexi-streams trivial-features
   trivial-garbage trivial-gray-streams uiop usocket)
  :source (("git" "https://github.com/cl-plus-ssl/cl-plus-ssl.git")))
 (:ql-project cl+ssl :system-file cl+ssl.test :system-name cl+ssl.test
  :dependencies
  (asdf bordeaux-threads cl+ssl cl-coveralls fiveam trivial-sockets usocket)
  :source (("git" "https://github.com/cl-plus-ssl/cl-plus-ssl.git")))
 (:ql-project cl+ssl :system-file cl+ssl :system-name cl+ssl/config
  :dependencies (cffi) :source
  (("git" "https://github.com/cl-plus-ssl/cl-plus-ssl.git")))
 (:ql-project cl-6502 :system-file cl-6502 :system-name cl-6502 :dependencies
  (alexandria asdf cl-ppcre) :source
  (("git" "https://github.com/redline6561/cl-6502.git")))
 (:ql-project cl-abnf :system-file abnf :system-name abnf :dependencies
  (asdf cl-ppcre esrap) :source
  (("git" "https://github.com/dimitri/cl-abnf.git")))
 (:ql-project cl-abstract-classes :system-file abstract-classes :system-name
  abstract-classes :dependencies (asdf closer-mop) :source
  (("mercurial" "https://bitbucket.org/eeeickythump/cl-abstract-classes")))
 (:ql-project cl-abstract-classes :system-file singleton-classes :system-name
  singleton-classes :dependencies (asdf closer-mop) :source
  (("mercurial" "https://bitbucket.org/eeeickythump/cl-abstract-classes")))
 (:ql-project cl-acronyms :system-file cl-acronyms :system-name cl-acronyms
  :dependencies (alexandria split-sequence) :source
  (("git" "https://github.com/isoraqathedh/cl-acronyms.git")))
 (:ql-project cl-advice :system-file cl-advice :system-name cl-advice
  :dependencies (asdf closer-mop) :source
  (("git" "https://github.com/szos/cl-advice.git")))
 (:ql-project cl-advice :system-file cl-advice-tests :system-name
  cl-advice-tests :dependencies (asdf cl-advice fiveam) :source
  (("git" "https://github.com/szos/cl-advice.git")))
 (:ql-project cl-algebraic-data-type :system-file cl-algebraic-data-type
  :system-name cl-algebraic-data-type :dependencies
  (alexandria asdf global-vars) :source
  (("git" "https://github.com/tarballs-are-good/cl-algebraic-data-type.git")))
 (:ql-project cl-all :system-file cl-all :system-name cl-all :dependencies
  (asdf) :source (("git" "https://github.com/Shinmera/cl-all.git")))
 (:ql-project cl-amqp :system-file cl-amqp :system-name cl-amqp :dependencies
  (alexandria asdf cl-interpol collectors fast-io local-time log4cl nibbles
   trivial-utf-8 wu-decimal)
  :source
  (("latest-github-release" "https://github.com/cl-rabbit/cl-amqp.git")))
 (:ql-project cl-amqp :system-file cl-amqp.test :system-name cl-amqp.test
  :dependencies (asdf cl-amqp cl-interpol log4cl mw-equiv prove prove-asdf)
  :source
  (("latest-github-release" "https://github.com/cl-rabbit/cl-amqp.git")))
 (:ql-project cl-ana :system-file cl-ana :system-name cl-ana :dependencies
  (asdf cl-ana.array-utils cl-ana.binary-tree cl-ana.calculus cl-ana.clos-utils
   cl-ana.columnar-table cl-ana.csv-table cl-ana.error-propogation
   cl-ana.file-utils cl-ana.fitting cl-ana.generic-math cl-ana.hash-table-utils
   cl-ana.hdf-table cl-ana.histogram cl-ana.int-char cl-ana.linear-algebra
   cl-ana.list-utils cl-ana.lorentz cl-ana.makeres cl-ana.makeres-block
   cl-ana.makeres-branch cl-ana.makeres-graphviz cl-ana.makeres-macro
   cl-ana.makeres-progress cl-ana.makeres-table cl-ana.makeres-utils cl-ana.map
   cl-ana.math-functions cl-ana.ntuple-table cl-ana.package-utils
   cl-ana.pathname-utils cl-ana.plotting cl-ana.quantity cl-ana.reusable-table
   cl-ana.serialization cl-ana.spline cl-ana.statistical-learning
   cl-ana.statistics cl-ana.table cl-ana.table-utils cl-ana.table-viewing
   cl-ana.tensor)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.array-utils :system-name
  cl-ana.array-utils :dependencies (alexandria asdf) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.binary-tree :system-name
  cl-ana.binary-tree :dependencies
  (asdf cl-ana.functional-utils cl-ana.list-utils cl-ana.macro-utils) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.calculus :system-name cl-ana.calculus
  :dependencies (asdf cl-ana.generic-math cl-ana.linear-algebra) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.clos-utils :system-name
  cl-ana.clos-utils :dependencies
  (asdf cl-ana.list-utils cl-ana.symbol-utils cl-ana.tensor closer-mop) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.columnar-table :system-name
  cl-ana.columnar-table :dependencies (asdf cl-ana.reusable-table cl-ana.table)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.csv-table :system-name
  cl-ana.csv-table :dependencies
  (alexandria antik asdf cl-ana.list-utils cl-ana.table cl-csv iterate) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.error-propogation :system-name
  cl-ana.error-propogation :dependencies
  (asdf cl-ana.generic-math cl-ana.math-functions) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.file-utils :system-name
  cl-ana.file-utils :dependencies (asdf external-program split-sequence)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.fitting :system-name cl-ana.fitting
  :dependencies
  (alexandria asdf cl-ana.error-propogation cl-ana.generic-math cl-ana.map
   cl-ana.math-functions gsll)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.functional-utils :system-name
  cl-ana.functional-utils :dependencies (asdf) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.generic-math :system-name
  cl-ana.generic-math :dependencies
  (asdf cl-ana.list-utils cl-ana.package-utils) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.gnuplot-interface :system-name
  cl-ana.gnuplot-interface :dependencies (asdf external-program) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.gsl-cffi :system-name cl-ana.gsl-cffi
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.hash-table-utils :system-name
  cl-ana.hash-table-utils :dependencies (asdf) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.hdf-cffi :system-name cl-ana.hdf-cffi
  :dependencies (asdf cffi cffi-grovel) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.hdf-table :system-name
  cl-ana.hdf-table :dependencies
  (alexandria asdf cl-ana.binary-tree cl-ana.hdf-typespec cl-ana.hdf-utils
   cl-ana.list-utils cl-ana.memoization cl-ana.table cl-ana.typed-table
   cl-ana.typespec)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.hdf-typespec :system-name
  cl-ana.hdf-typespec :dependencies
  (alexandria asdf cffi cl-ana.hdf-cffi cl-ana.list-utils cl-ana.memoization
   cl-ana.string-utils cl-ana.symbol-utils cl-ana.typespec)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.hdf-utils :system-name
  cl-ana.hdf-utils :dependencies
  (alexandria asdf cffi cl-ana.hdf-cffi cl-ana.hdf-typespec cl-ana.macro-utils
   cl-ana.memoization cl-ana.pathname-utils cl-ana.string-utils
   cl-ana.typespec)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.histogram :system-name
  cl-ana.histogram :dependencies
  (alexandria asdf cl-ana.binary-tree cl-ana.clos-utils cl-ana.fitting
   cl-ana.functional-utils cl-ana.generic-math cl-ana.hash-table-utils
   cl-ana.list-utils cl-ana.macro-utils cl-ana.map cl-ana.symbol-utils
   cl-ana.tensor iterate)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.int-char :system-name cl-ana.int-char
  :dependencies (asdf) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.linear-algebra :system-name
  cl-ana.linear-algebra :dependencies
  (asdf cl-ana.generic-math cl-ana.list-utils cl-ana.math-functions
   cl-ana.tensor gsll)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.list-utils :system-name
  cl-ana.list-utils :dependencies
  (alexandria asdf cl-ana.functional-utils cl-ana.string-utils) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.lorentz :system-name cl-ana.lorentz
  :dependencies
  (asdf cl-ana.generic-math cl-ana.linear-algebra cl-ana.tensor iterate)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.macro-utils :system-name
  cl-ana.macro-utils :dependencies
  (alexandria asdf cl-ana.list-utils cl-ana.string-utils cl-ana.symbol-utils
   split-sequence)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.makeres :system-name cl-ana.makeres
  :dependencies
  (alexandria asdf cl-ana.error-propogation cl-ana.file-utils
   cl-ana.functional-utils cl-ana.generic-math cl-ana.hash-table-utils
   cl-ana.hdf-utils cl-ana.histogram cl-ana.list-utils cl-ana.macro-utils
   cl-ana.map cl-ana.memoization cl-ana.pathname-utils cl-ana.plotting
   cl-ana.reusable-table cl-ana.serialization cl-ana.string-utils
   cl-ana.symbol-utils cl-ana.table cl-fad external-program uiop)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.makeres-block :system-name
  cl-ana.makeres-block :dependencies
  (alexandria asdf cl-ana.list-utils cl-ana.macro-utils cl-ana.makeres) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.makeres-branch :system-name
  cl-ana.makeres-branch :dependencies
  (alexandria asdf cl-ana.generic-math cl-ana.hash-table-utils
   cl-ana.list-utils cl-ana.makeres cl-ana.map)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.makeres-graphviz :system-name
  cl-ana.makeres-graphviz :dependencies (asdf cl-ana.makeres external-program)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.makeres-macro :system-name
  cl-ana.makeres-macro :dependencies (asdf cl-ana.list-utils cl-ana.makeres)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.makeres-progress :system-name
  cl-ana.makeres-progress :dependencies
  (alexandria asdf cl-ana.generic-math cl-ana.makeres) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.makeres-table :system-name
  cl-ana.makeres-table :dependencies
  (asdf cl-ana.csv-table cl-ana.hash-table-utils cl-ana.hdf-table
   cl-ana.hdf-utils cl-ana.list-utils cl-ana.macro-utils cl-ana.makeres
   cl-ana.makeres-macro cl-ana.memoization cl-ana.ntuple-table
   cl-ana.reusable-table cl-ana.string-utils cl-ana.table)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.makeres-utils :system-name
  cl-ana.makeres-utils :dependencies
  (alexandria asdf cl-ana.file-utils cl-ana.fitting cl-ana.functional-utils
   cl-ana.generic-math cl-ana.histogram cl-ana.list-utils cl-ana.macro-utils
   cl-ana.makeres cl-ana.map cl-ana.pathname-utils cl-ana.plotting
   cl-ana.reusable-table cl-ana.string-utils cl-ana.symbol-utils cl-ana.table)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.map :system-name cl-ana.map
  :dependencies (asdf cl-ana.hash-table-utils) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.math-functions :system-name
  cl-ana.math-functions :dependencies (asdf cl-ana.generic-math gsll) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.memoization :system-name
  cl-ana.memoization :dependencies (alexandria asdf) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.ntuple-table :system-name
  cl-ana.ntuple-table :dependencies
  (alexandria asdf cffi cl-ana.gsl-cffi cl-ana.list-utils cl-ana.table
   cl-ana.typed-table cl-ana.typespec gsll)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.package-utils :system-name
  cl-ana.package-utils :dependencies (alexandria asdf) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.pathname-utils :system-name
  cl-ana.pathname-utils :dependencies (asdf) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.plotting :system-name cl-ana.plotting
  :dependencies
  (alexandria asdf cl-ana.error-propogation cl-ana.functional-utils
   cl-ana.generic-math cl-ana.gnuplot-interface cl-ana.histogram
   cl-ana.list-utils cl-ana.macro-utils cl-ana.map cl-ana.math-functions
   cl-ana.pathname-utils cl-ana.string-utils cl-ana.tensor external-program
   split-sequence uiop)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.quantity :system-name cl-ana.quantity
  :dependencies
  (alexandria asdf cl-ana.error-propogation cl-ana.generic-math
   cl-ana.list-utils cl-ana.macro-utils cl-ana.math-functions
   cl-ana.symbol-utils)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.reusable-table :system-name
  cl-ana.reusable-table :dependencies (alexandria asdf cl-ana.table) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.serialization :system-name
  cl-ana.serialization :dependencies
  (asdf cl-ana.error-propogation cl-ana.hdf-table cl-ana.hdf-utils
   cl-ana.histogram cl-ana.int-char cl-ana.macro-utils cl-ana.typespec)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.spline :system-name cl-ana.spline
  :dependencies
  (asdf cffi cl-ana.fitting cl-ana.generic-math cl-ana.list-utils
   cl-ana.macro-utils cl-ana.math-functions cl-ana.tensor gsll)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.statistical-learning :system-name
  cl-ana.statistical-learning :dependencies
  (asdf cl-ana.functional-utils cl-ana.generic-math cl-ana.histogram
   cl-ana.linear-algebra cl-ana.list-utils cl-ana.macro-utils cl-ana.map
   cl-ana.math-functions cl-ana.statistics)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.statistics :system-name
  cl-ana.statistics :dependencies
  (asdf cl-ana.generic-math cl-ana.histogram cl-ana.list-utils
   cl-ana.macro-utils cl-ana.map cl-ana.math-functions)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.string-utils :system-name
  cl-ana.string-utils :dependencies (asdf split-sequence) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.symbol-utils :system-name
  cl-ana.symbol-utils :dependencies (asdf cl-ana.list-utils) :source
  (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.table :system-name cl-ana.table
  :dependencies
  (alexandria asdf cl-ana.functional-utils cl-ana.list-utils cl-ana.macro-utils
   cl-ana.string-utils cl-ana.symbol-utils)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.table-utils :system-name
  cl-ana.table-utils :dependencies
  (asdf cl-ana.generic-math cl-ana.hash-table-utils cl-ana.statistics
   cl-ana.string-utils cl-ana.symbol-utils cl-ana.table)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.table-viewing :system-name
  cl-ana.table-viewing :dependencies
  (alexandria asdf cl-ana.generic-math cl-ana.histogram cl-ana.macro-utils
   cl-ana.plotting cl-ana.string-utils cl-ana.table)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.tensor :system-name cl-ana.tensor
  :dependencies
  (alexandria asdf cl-ana.generic-math cl-ana.list-utils cl-ana.macro-utils
   cl-ana.symbol-utils)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.typed-table :system-name
  cl-ana.typed-table :dependencies
  (alexandria asdf cl-ana.list-utils cl-ana.string-utils cl-ana.symbol-utils
   cl-ana.table cl-ana.typespec)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-ana :system-file cl-ana.typespec :system-name cl-ana.typespec
  :dependencies
  (alexandria asdf cffi cl-ana.int-char cl-ana.list-utils cl-ana.memoization
   cl-ana.string-utils cl-ana.symbol-utils cl-ana.tensor)
  :source (("git" "https://github.com/ghollisjr/cl-ana.git")))
 (:ql-project cl-annot :system-file cl-annot :system-name cl-annot
  :dependencies (alexandria) :source
  (("git" "https://github.com/m2ym/cl-annot.git")))
 (:ql-project cl-annot-prove :system-file cl-annot-prove :system-name
  cl-annot-prove :dependencies
  (cl-fad cl-ppcre cl-syntax cl-syntax-annot prove trivial-types) :source
  (("git" "https://github.com/Rudolph-Miller/cl-annot-prove.git")))
 (:ql-project cl-annot-prove :system-file cl-annot-prove-test :system-name
  cl-annot-prove-test :dependencies (cl-annot-prove prove prove-asdf) :source
  (("git" "https://github.com/Rudolph-Miller/cl-annot-prove.git")))
 (:ql-project cl-annot-revisit :system-file cl-annot-revisit :system-name
  cl-annot-revisit :dependencies (alexandria asdf named-readtables) :source
  (("git" "https://github.com/y2q-actionman/cl-annot-revisit.git")))
 (:ql-project cl-annot-revisit :system-file cl-annot-revisit-compat
  :system-name cl-annot-revisit-compat :dependencies (asdf cl-annot-revisit)
  :source (("git" "https://github.com/y2q-actionman/cl-annot-revisit.git")))
 (:ql-project cl-annot-revisit :system-file cl-annot-revisit-test :system-name
  cl-annot-revisit-test :dependencies
  (1am asdf cl-annot-revisit cl-annot-revisit-compat trivial-macroexpand-all)
  :source (("git" "https://github.com/y2q-actionman/cl-annot-revisit.git")))
 (:ql-project cl-anonfun :system-file cl-anonfun :system-name cl-anonfun
  :dependencies nil :source
  (("git" "https://github.com/arielnetworks/cl-anonfun.git")))
 (:ql-project cl-ansi-term :system-file cl-ansi-term :system-name cl-ansi-term
  :dependencies (alexandria anaphora asdf str) :source
  (("git" "https://github.com/vindarel/cl-ansi-term.git")))
 (:ql-project cl-ansi-text :system-file cl-ansi-text :system-name cl-ansi-text
  :dependencies (alexandria asdf cl-colors2) :source
  (("git" "https://github.com/pnathan/cl-ansi-text.git")))
 (:ql-project cl-ansi-text :system-file cl-ansi-text.test :system-name
  cl-ansi-text.test :dependencies
  (alexandria asdf cl-ansi-text cl-colors2 fiveam) :source
  (("git" "https://github.com/pnathan/cl-ansi-text.git")))
 (:ql-project cl-apertium-stream-parser :system-file cl-apertium-stream
  :system-name cl-apertium-stream :dependencies (asdf cl-ppcre esrap) :source
  (("git" "https://github.com/veer66/cl-apertium-stream-parser.git")))
 (:ql-project cl-apertium-stream-parser :system-file cl-apertium-stream
  :system-name cl-apertium-stream/tests :dependencies
  (cl-apertium-stream fiveam) :source
  (("git" "https://github.com/veer66/cl-apertium-stream-parser.git")))
 (:ql-project cl-apple-plist :system-file cl-apple-plist :system-name
  cl-apple-plist :dependencies (html-encode) :source
  (("git" "https://github.com/RobBlackwell/cl-apple-plist.git")))
 (:ql-project cl-arff-parser :system-file cl-arff-parser :system-name
  cl-arff-parser :dependencies nil :source
  (("git" "https://github.com/pieterw/cl-arff-parser.git")))
 (:ql-project cl-argparse :system-file cl-argparse :system-name cl-argparse
  :dependencies (asdf) :source
  (("git" "https://github.com/simkoc/cl-argparse.git")))
 (:ql-project cl-aristid :system-file cl-aristid :system-name cl-aristid
  :dependencies (asdf cl-colors cl-svg) :source
  (("git" "https://github.com/FdelMazo/cl-aristid.git")))
 (:ql-project cl-arxiv-api :system-file cl-arxiv-api :system-name cl-arxiv-api
  :dependencies (cl-interpol cl-ppcre cxml iterate trivial-http) :source
  (("git" "https://github.com/mabragor/cl-arxiv-api.git")))
 (:ql-project cl-ascii-art :system-file cl-ascii-art :system-name cl-ascii-art
  :dependencies
  (alexandria cl-ansi-text cl-ppcre inferior-shell iterate split-sequence)
  :source (("git" "https://github.com/Blue-Sky-Skunkworks/cl-ascii-art.git")))
 (:ql-project cl-ascii-table :system-file cl-ascii-table :system-name
  cl-ascii-table :dependencies (asdf) :source
  (("git" "https://github.com/telephil/cl-ascii-table.git")))
 (:ql-project cl-association-rules :system-file cl-association-rules
  :system-name cl-association-rules :dependencies nil :source
  (("git" "https://github.com/diogoalexandrefranco/cl-association-rules.git")))
 (:ql-project cl-association-rules :system-file cl-association-rules
  :system-name cl-association-rules-tests :dependencies
  (cl-association-rules prove) :source
  (("git" "https://github.com/diogoalexandrefranco/cl-association-rules.git")))
 (:ql-project cl-async :system-file cl-async :system-name cl-async
  :dependencies
  (asdf babel cffi cl-async-base cl-async-util cl-libuv cl-ppcre static-vectors
   trivial-features trivial-gray-streams uiop)
  :source (("git" "https://github.com/orthecreedence/cl-async.git")))
 (:ql-project cl-async :system-file cl-async :system-name cl-async-base
  :dependencies (bordeaux-threads cffi cl-libuv) :source
  (("git" "https://github.com/orthecreedence/cl-async.git")))
 (:ql-project cl-async :system-file cl-async-repl :system-name cl-async-repl
  :dependencies (asdf bordeaux-threads cl-async) :source
  (("git" "https://github.com/orthecreedence/cl-async.git")))
 (:ql-project cl-async :system-file cl-async-ssl :system-name cl-async-ssl
  :dependencies (asdf cffi cl-async vom) :source
  (("git" "https://github.com/orthecreedence/cl-async.git")))
 (:ql-project cl-async :system-file cl-async-test :system-name cl-async-test
  :dependencies
  (asdf bordeaux-threads cffi cl-async cl-async-ssl fiveam flexi-streams
   ironclad usocket)
  :source (("git" "https://github.com/orthecreedence/cl-async.git")))
 (:ql-project cl-async :system-file cl-async :system-name cl-async-util
  :dependencies (cffi cl-async-base cl-libuv cl-ppcre fast-io vom) :source
  (("git" "https://github.com/orthecreedence/cl-async.git")))
 (:ql-project cl-async-await :system-file cl-async-await :system-name
  cl-async-await :dependencies (asdf bordeaux-threads closer-mop simple-actors)
  :source (("git" "https://github.com/j3pic/cl-async-await.git")))
 (:ql-project cl-async-future :system-file cl-async-future :system-name
  cl-async-future :dependencies (blackbird) :source
  (("git" "https://github.com/orthecreedence/cl-async-future.git")))
 (:ql-project cl-atelier :system-file org.melusina.atelier :system-name
  org.melusina.atelier :dependencies
  (alexandria asdf cl-ppcre org.melusina.rashell osicat trivia) :source
  (("git" "https://github.com/melusina-org/cl-atelier.git")))
 (:ql-project cl-atelier :system-file org.melusina.atelier :system-name
  org.melusina.atelier/development :dependencies (org.melusina.atelier) :source
  (("git" "https://github.com/melusina-org/cl-atelier.git")))
 (:ql-project cl-atelier :system-file org.melusina.atelier :system-name
  org.melusina.atelier/testsuite :dependencies
  (alexandria org.melusina.atelier org.melusina.confidence) :source
  (("git" "https://github.com/melusina-org/cl-atelier.git")))
 (:ql-project cl-aubio :system-file cl-aubio :system-name cl-aubio
  :dependencies (asdf cffi cffi-libffi closer-mop) :source
  (("git" "https://github.com/Lautaro-Garcia/cl-aubio.git")))
 (:ql-project cl-aubio :system-file cl-aubio :system-name cl-aubio/examples
  :dependencies (cl-aubio vgplot) :source
  (("git" "https://github.com/Lautaro-Garcia/cl-aubio.git")))
 (:ql-project cl-aubio :system-file cl-aubio :system-name cl-aubio/tests
  :dependencies (cl-aubio fiveam) :source
  (("git" "https://github.com/Lautaro-Garcia/cl-aubio.git")))
 (:ql-project cl-autorepo :system-file cl-autorepo :system-name cl-autorepo
  :dependencies (asdf) :source
  (("git" "https://github.com/billstclair/cl-autorepo.git")))
 (:ql-project cl-autowrap :system-file cl-autowrap :system-name cl-autowrap
  :dependencies
  (alexandria asdf cffi cl-json cl-ppcre defpackage-plus trivial-features uiop)
  :source (("git" "https://github.com/rpav/cl-autowrap.git")))
 (:ql-project cl-autowrap :system-file cl-autowrap-test :system-name
  cl-autowrap-test :dependencies (asdf cl-autowrap) :source
  (("git" "https://github.com/rpav/cl-autowrap.git")))
 (:ql-project cl-autowrap :system-file cl-autowrap :system-name
  cl-autowrap/libffi :dependencies (cl-autowrap cl-plus-c) :source
  (("git" "https://github.com/rpav/cl-autowrap.git")))
 (:ql-project cl-autowrap :system-file cl-plus-c :system-name cl-plus-c
  :dependencies (asdf cl-autowrap) :source
  (("git" "https://github.com/rpav/cl-autowrap.git")))
 (:ql-project cl-azure :system-file cl-azure :system-name cl-azure
  :dependencies (babel cl-base64 cl-json cl-ppcre cxml drakma ironclad puri rt)
  :source (("git" "https://github.com/RobBlackwell/cl-azure.git")))
 (:ql-project cl-base16 :system-file cl-base16 :system-name cl-base16
  :dependencies (asdf cl-mustache cl-slug cl-yaml trivial-shell uiop) :source
  (("git" "https://github.com/tpine/cl-base16.git")))
 (:ql-project cl-base32 :system-file cl-base32 :system-name cl-base32
  :dependencies nil :source
  (("git" "https://github.com/hargettp/cl-base32.git")))
 (:ql-project cl-base32 :system-file cl-base32 :system-name cl-base32-tests
  :dependencies (cl-base32 lisp-unit) :source
  (("git" "https://github.com/hargettp/cl-base32.git")))
 (:ql-project cl-base58 :system-file cl-base58 :system-name cl-base58
  :dependencies nil :source
  (("git" "https://github.com/eudoxia0/cl-base58.git")))
 (:ql-project cl-base58 :system-file cl-base58-test :system-name cl-base58-test
  :dependencies (cl-base58 cl-test-more) :source
  (("git" "https://github.com/eudoxia0/cl-base58.git")))
 (:ql-project cl-base64 :system-file cl-base64 :system-name cl-base64
  :dependencies (asdf) :source (("kmr-git" "cl-base64")))
 (:ql-project cl-base64 :system-file cl-base64 :system-name cl-base64/test
  :dependencies (cl-base64 kmrcl ptester) :source (("kmr-git" "cl-base64")))
 (:ql-project cl-bayesnet :system-file cl-bayesnet :system-name cl-bayesnet
  :dependencies (cffi s-xml trivial-shell) :source
  (("git" "https://github.com/lhope/cl-bayesnet.git")))
 (:ql-project cl-bcrypt :system-file cl-bcrypt :system-name cl-bcrypt
  :dependencies (asdf binascii cl-ppcre ironclad) :source
  (("git" "https://github.com/dnaeon/cl-bcrypt.git")))
 (:ql-project cl-bcrypt :system-file cl-bcrypt.test :system-name cl-bcrypt.test
  :dependencies (asdf cl-bcrypt rove) :source
  (("git" "https://github.com/dnaeon/cl-bcrypt.git")))
 (:ql-project cl-beanstalk :system-file cl-beanstalk :system-name cl-beanstalk
  :dependencies (asdf flexi-streams split-sequence usocket) :source
  (("git" "https://github.com/antifuchs/cl-beanstalk.git")))
 (:ql-project cl-bencode :system-file bencode :system-name bencode
  :dependencies (asdf flexi-streams) :source
  (("git" "https://github.com/nja/cl-bencode.git")))
 (:ql-project cl-bencode :system-file bencode :system-name bencode-test
  :dependencies (bencode check-it hu.dwim.stefil) :source
  (("git" "https://github.com/nja/cl-bencode.git")))
 (:ql-project cl-bert :system-file bert :system-name bert :dependencies
  (alexandria erlang-term) :source
  (("git" "https://github.com/flambard/cl-bert.git")))
 (:ql-project cl-bibtex :system-file bibtex :system-name bibtex :dependencies
  (asdf split-sequence) :source
  (("git" "https://github.com/mkoeppe/cl-bibtex.git") nil))
 (:ql-project cl-bip39 :system-file cl-bip39 :system-name cl-bip39
  :dependencies (asdf ironclad secure-random split-sequence trivial-utf-8)
  :source (("git" "https://github.com/zodmaner/cl-bip39.git")))
 (:ql-project cl-bloggy :system-file cl-bloggy :system-name cl-bloggy
  :dependencies
  (alexandria asdf closer-mop do-urlencode hunchentoot lass local-time
   lorem-ipsum spinneret str xml-emitter)
  :source (("git" "https://github.com/K1D77A/cl-bloggy.git")))
 (:ql-project cl-bloom :system-file cl-bloom :system-name cl-bloom
  :dependencies (asdf cl-murmurhash static-vectors) :source
  (("git" "https://github.com/ruricolist/cl-bloom.git")))
 (:ql-project cl-bloom-filter :system-file cl-bloom-filter :system-name
  cl-bloom-filter :dependencies (asdf) :source
  (("git" "https://github.com/alangalvino/cl-bloom-filter.git")))
 (:ql-project cl-bloom-filter :system-file cl-bloom-filter :system-name
  cl-bloom-filter/tests :dependencies (cl-bloom-filter rove) :source
  (("git" "https://github.com/alangalvino/cl-bloom-filter.git")))
 (:ql-project cl-bmas :system-file bmas :system-name bmas :dependencies
  (asdf cffi cl-autowrap uiop) :source
  (("git" "https://github.com/digikar99/cl-bmas.git")))
 (:ql-project cl-bmp :system-file cl-bmp :system-name cl-bmp :dependencies
  (asdf binary-structures documentation-utils) :source
  (("git" "https://github.com/shinmera/cl-bmp.git")))
 (:ql-project cl-bnf :system-file cl-bnf :system-name cl-bnf :dependencies
  (asdf) :source (("git" "https://github.com/diasbruno/cl-bnf.git")))
 (:ql-project cl-bnf :system-file cl-bnf-examples :system-name cl-bnf-examples
  :dependencies (asdf cl-bnf) :source
  (("git" "https://github.com/diasbruno/cl-bnf.git")))
 (:ql-project cl-bnf :system-file cl-bnf-tests :system-name cl-bnf-tests
  :dependencies (asdf cl-bnf fiveam) :source
  (("git" "https://github.com/diasbruno/cl-bnf.git")))
 (:ql-project cl-bootstrap :system-file cl-bootstrap :system-name cl-bootstrap
  :dependencies (asdf cl-who parenscript) :source
  (("git" "https://github.com/rajasegar/cl-bootstrap.git")))
 (:ql-project cl-bootstrap :system-file cl-bootstrap-demo :system-name
  cl-bootstrap-demo :dependencies
  (asdf cl-bootstrap cl-who hunchentoot parenscript) :source
  (("git" "https://github.com/rajasegar/cl-bootstrap.git")))
 (:ql-project cl-bootstrap :system-file cl-bootstrap-test :system-name
  cl-bootstrap-test :dependencies (asdf cl-bootstrap fiveam) :source
  (("git" "https://github.com/rajasegar/cl-bootstrap.git")))
 (:ql-project cl-bplustree :system-file cl-bplustree :system-name cl-bplustree
  :dependencies (asdf) :source
  (("git" "https://github.com/ebobby/cl-bplustree.git")))
 (:ql-project cl-bplustree :system-file cl-bplustree :system-name
  cl-bplustree-test :dependencies (cl-bplustree) :source
  (("git" "https://github.com/ebobby/cl-bplustree.git")))
 (:ql-project cl-brewer :system-file cl-brewer-ci :system-name cl-brewer-ci
  :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/cl-brewer.git")))
 (:ql-project cl-brewer :system-file cl-brewer-deploy-hooks :system-name
  cl-brewer-deploy-hooks :dependencies (asdf deploy) :source
  (("git" "https://github.com/40ants/cl-brewer.git")))
 (:ql-project cl-brewer :system-file cl-brewer-tests :system-name
  cl-brewer-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/cl-brewer.git")))
 (:ql-project cl-brewer :system-file quicklisp-starter :system-name
  quicklisp-starter :dependencies (asdf) :source
  (("git" "https://github.com/40ants/cl-brewer.git")))
 (:ql-project cl-buchberger :system-file cl-buchberger :system-name
  cl-buchberger :dependencies (asdf) :source
  (("git" "https://git.sr.ht/~jmbr/cl-buchberger")))
 (:ql-project cl-bus :system-file cl-bus :system-name cl-bus :dependencies
  (asdf) :source (("git" "https://gitlab.com/Aksej/cl-bus.git")))
 (:ql-project cl-ca :system-file cl-ca :system-name cl-ca :dependencies nil
  :source (("git" "https://github.com/lukasepple/cl-ca.git")))
 (:ql-project cl-cache-tables :system-file cl-cache-tables :system-name
  cl-cache-tables :dependencies nil :source
  (("git" "https://github.com/diogoalexandrefranco/cl-cache-tables.git")))
 (:ql-project cl-cache-tables :system-file cl-cache-tables :system-name
  cl-cache-tables-tests :dependencies (cl-cache-tables prove) :source
  (("git" "https://github.com/diogoalexandrefranco/cl-cache-tables.git")))
 (:ql-project cl-cairo2 :system-file a-cl-cairo2-loader :system-name
  a-cl-cairo2-loader :dependencies (asdf cl-cairo2) :source
  (("git" "https://github.com/rpav/cl-cairo2.git")))
 (:ql-project cl-cairo2 :system-file cl-cairo2 :system-name cl-cairo2
  :dependencies
  (asdf cffi cl-colors cl-utilities metabang-bind trivial-features
   trivial-garbage)
  :source (("git" "https://github.com/rpav/cl-cairo2.git")))
 (:ql-project cl-cairo2 :system-file cl-cairo2-demos :system-name
  cl-cairo2-demos :dependencies (asdf cl-cairo2) :source
  (("git" "https://github.com/rpav/cl-cairo2.git")))
 (:ql-project cl-cairo2 :system-file cl-cairo2-xlib :system-name cl-cairo2-xlib
  :dependencies (asdf cl-cairo2 cl-freetype2) :source
  (("git" "https://github.com/rpav/cl-cairo2.git")))
 (:ql-project cl-capstone :system-file capstone :system-name capstone
  :dependencies (asdf cffi cffi-grovel gt static-vectors trivial-features)
  :source (("git" "https://github.com/GrammaTech/cl-capstone.git")))
 (:ql-project cl-capstone :system-file capstone :system-name capstone/raw
  :dependencies (cffi cffi-grovel gt static-vectors) :source
  (("git" "https://github.com/GrammaTech/cl-capstone.git")))
 (:ql-project cl-capstone :system-file capstone :system-name capstone/raw-test
  :dependencies (cffi cffi-grovel gt static-vectors stefil) :source
  (("git" "https://github.com/GrammaTech/cl-capstone.git")))
 (:ql-project cl-capstone :system-file capstone :system-name capstone/test
  :dependencies (capstone cffi cffi-grovel gt static-vectors stefil) :source
  (("git" "https://github.com/GrammaTech/cl-capstone.git")))
 (:ql-project cl-case-control :system-file cl-case-control :system-name
  cl-case-control :dependencies (trivial-types) :source
  (("git" "https://github.com/ichimal/cl-case-control.git")))
 (:ql-project cl-catmull-rom-spline :system-file cl-catmull-rom-spline
  :system-name cl-catmull-rom-spline :dependencies (asdf) :source
  (("git" "https://github.com/Jach/cl-catmull-rom-spline.git")))
 (:ql-project cl-catmull-rom-spline :system-file cl-catmull-rom-spline
  :system-name cl-catmull-rom-spline/example :dependencies
  (bordeaux-threads cl-catmull-rom-spline lispbuilder-sdl lispbuilder-sdl-gfx
   lispbuilder-sdl-ttf)
  :source (("git" "https://github.com/Jach/cl-catmull-rom-spline.git")))
 (:ql-project cl-catmull-rom-spline :system-file cl-catmull-rom-spline
  :system-name cl-catmull-rom-spline/test :dependencies
  (arrow-macros cl-catmull-rom-spline fiveam uiop) :source
  (("git" "https://github.com/Jach/cl-catmull-rom-spline.git")))
 (:ql-project cl-cblas :system-file cblas :system-name cblas :dependencies
  (asdf cffi cl-autowrap uiop) :source
  (("git" "https://github.com/digikar99/cl-cblas.git")))
 (:ql-project cl-cerf :system-file cl-cerf :system-name cl-cerf :dependencies
  (asdf cffi cffi-libffi) :source
  (("git" "https://github.com/ghollisjr/cl-cerf.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk :system-name cl-cffi-gtk
  :dependencies
  (asdf cl-cffi-gtk-cairo cl-cffi-gtk-gdk cl-cffi-gtk-gdk-pixbuf
   cl-cffi-gtk-gio cl-cffi-gtk-glib cl-cffi-gtk-gobject cl-cffi-gtk-pango)
  :source (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-cairo :system-name
  cl-cffi-gtk-cairo :dependencies (asdf cl-cffi-gtk-glib) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-demo-cairo :system-name
  cl-cffi-gtk-demo-cairo :dependencies (asdf cl-cffi-gtk) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-demo-glib :system-name
  cl-cffi-gtk-demo-glib :dependencies (asdf cl-cffi-gtk) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-demo-gobject :system-name
  cl-cffi-gtk-demo-gobject :dependencies (asdf cl-cffi-gtk-gobject) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-example-gtk :system-name
  cl-cffi-gtk-example-gtk :dependencies (asdf cl-cffi-gtk) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-gdk :system-name
  cl-cffi-gtk-gdk :dependencies
  (asdf cl-cffi-gtk-cairo cl-cffi-gtk-gdk-pixbuf cl-cffi-gtk-gio
   cl-cffi-gtk-glib cl-cffi-gtk-gobject cl-cffi-gtk-pango)
  :source (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-gdk-pixbuf :system-name
  cl-cffi-gtk-gdk-pixbuf :dependencies
  (asdf cl-cffi-gtk-glib cl-cffi-gtk-gobject) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-gio :system-name
  cl-cffi-gtk-gio :dependencies (asdf cl-cffi-gtk-glib cl-cffi-gtk-gobject)
  :source (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-glib :system-name
  cl-cffi-gtk-glib :dependencies
  (alexandria asdf bordeaux-threads cffi iterate trivial-features) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-gobject :system-name
  cl-cffi-gtk-gobject :dependencies
  (asdf cl-cffi-gtk-glib closer-mop trivial-garbage) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-opengl-demo :system-name
  cl-cffi-gtk-opengl-demo :dependencies (asdf cl-cffi-gtk cl-opengl) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-cffi-gtk :system-file cl-cffi-gtk-pango :system-name
  cl-cffi-gtk-pango :dependencies
  (asdf cl-cffi-gtk-cairo cl-cffi-gtk-glib cl-cffi-gtk-gobject) :source
  (("git" "https://github.com/sharplispers/cl-cffi-gtk.git")))
 (:ql-project cl-change-case :system-file cl-change-case :system-name
  cl-change-case :dependencies (asdf cl-ppcre cl-ppcre-unicode) :source
  (("git" "https://github.com/rudolfochrist/cl-change-case.git")))
 (:ql-project cl-change-case :system-file cl-change-case :system-name
  cl-change-case/test :dependencies (cl-change-case fiveam) :source
  (("git" "https://github.com/rudolfochrist/cl-change-case.git")))
 (:ql-project cl-charms :system-file cl-charms :system-name cl-charms
  :dependencies (alexandria asdf cffi cffi-grovel) :source
  (("git" "https://github.com/HiTECNOLOGYs/cl-charms.git")))
 (:ql-project cl-charms :system-file cl-charms-marquee :system-name
  cl-charms-marquee :dependencies (asdf cl-charms) :source
  (("git" "https://github.com/HiTECNOLOGYs/cl-charms.git")))
 (:ql-project cl-charms :system-file cl-charms-paint :system-name
  cl-charms-paint :dependencies (asdf cl-charms) :source
  (("git" "https://github.com/HiTECNOLOGYs/cl-charms.git")))
 (:ql-project cl-charms :system-file cl-charms-timer :system-name
  cl-charms-timer :dependencies (asdf cl-charms) :source
  (("git" "https://github.com/HiTECNOLOGYs/cl-charms.git")))
 (:ql-project cl-cheshire-cat :system-file cl-cheshire-cat :system-name
  cl-cheshire-cat :dependencies
  (alexandria cl-fad cl-ppcre cl-store hunchentoot split-sequence usocket)
  :source (("git" "https://github.com/mentel/cl-cheshire-cat.git")))
 (:ql-project cl-clblas :system-file cl-clblas :system-name cl-clblas
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/gos-k/cl-clblas.git")))
 (:ql-project cl-clblas :system-file cl-clblas-test :system-name cl-clblas-test
  :dependencies (asdf cffi cl-clblas cl-oclapi prove prove-asdf) :source
  (("git" "https://github.com/gos-k/cl-clblas.git")))
 (:ql-project cl-cli :system-file cl-cli :system-name cl-cli :dependencies
  (split-sequence) :source (("git" "https://github.com/renard/cl-cli.git")))
 (:ql-project cl-cli-parser :system-file cli-parser :system-name cli-parser
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/cl-cli-parser/cl-cli-parser.git")))
 (:ql-project cl-clon :system-file net.didierverna.clon :system-name
  net.didierverna.clon :dependencies
  (asdf net.didierverna.clon.core net.didierverna.clon.setup) :source
  (("latest-github-tag" "https://github.com/didierverna/clon.git")
   ("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/clon/latest.tar.gz")))
 (:ql-project cl-clon :system-file net.didierverna.clon.core :system-name
  net.didierverna.clon.core :dependencies (asdf net.didierverna.clon.setup)
  :source
  (("latest-github-tag" "https://github.com/didierverna/clon.git")
   ("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/clon/latest.tar.gz")))
 (:ql-project cl-clon :system-file net.didierverna.clon.demo.advanced
  :system-name net.didierverna.clon.demo.advanced :dependencies
  (asdf net.didierverna.clon) :source
  (("latest-github-tag" "https://github.com/didierverna/clon.git")
   ("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/clon/latest.tar.gz")))
 (:ql-project cl-clon :system-file net.didierverna.clon.demo.simple
  :system-name net.didierverna.clon.demo.simple :dependencies
  (asdf net.didierverna.clon) :source
  (("latest-github-tag" "https://github.com/didierverna/clon.git")
   ("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/clon/latest.tar.gz")))
 (:ql-project cl-clon :system-file net.didierverna.clon.setup :system-name
  net.didierverna.clon.setup :dependencies (asdf named-readtables) :source
  (("latest-github-tag" "https://github.com/didierverna/clon.git")
   ("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/clon/latest.tar.gz")))
 (:ql-project cl-clon :system-file net.didierverna.clon.setup :system-name
  net.didierverna.clon.setup/termio :dependencies (net.didierverna.clon.setup)
  :source
  (("latest-github-tag" "https://github.com/didierverna/clon.git")
   ("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/clon/latest.tar.gz")))
 (:ql-project cl-clon :system-file net.didierverna.clon.termio :system-name
  net.didierverna.clon.termio :dependencies
  (asdf net.didierverna.clon.core net.didierverna.clon.setup) :source
  (("latest-github-tag" "https://github.com/didierverna/clon.git")
   ("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/clon/latest.tar.gz")))
 (:ql-project cl-closure-template :system-file closure-template :system-name
  closure-template :dependencies
  (alexandria babel closer-mop esrap iterate parse-number split-sequence)
  :source (("git" "https://github.com/archimag/cl-closure-template.git")))
 (:ql-project cl-closure-template :system-file closure-template :system-name
  closure-template-test :dependencies (closure-template lift) :source
  (("git" "https://github.com/archimag/cl-closure-template.git")))
 (:ql-project cl-clsparse :system-file cl-clsparse :system-name cl-clsparse
  :dependencies (asdf cffi cffi-libffi) :source
  (("git" "https://github.com/gos-k/cl-clsparse.git")))
 (:ql-project cl-cmark :system-file cmark :system-name cmark :dependencies
  (asdf cffi flexi-streams libcmark) :source
  (("git" "https://gitlab.com/HiPhish/cl-cmark.git")))
 (:ql-project cl-cmark :system-file cmark :system-name cmark/test :dependencies
  (cl-fad cmark fiveam) :source
  (("git" "https://gitlab.com/HiPhish/cl-cmark.git")))
 (:ql-project cl-cmark :system-file libcmark :system-name libcmark
  :dependencies (asdf cffi) :source
  (("git" "https://gitlab.com/HiPhish/cl-cmark.git")))
 (:ql-project cl-cmark :system-file libcmark :system-name libcmark/test
  :dependencies (fiveam libcmark) :source
  (("git" "https://gitlab.com/HiPhish/cl-cmark.git")))
 (:ql-project cl-cognito :system-file cl-cognito :system-name cl-cognito
  :dependencies
  (asdf aws-foundation cl-base64 cl-json-helper ironclad local-time) :source
  (("git" "https://github.com/stablecross/cl-cognito.git")))
 (:ql-project cl-coinpayments :system-file cl-coinpayments :system-name
  cl-coinpayments :dependencies
  (asdf babel closer-mop dexador ironclad jonathan str) :source
  (("git" "https://github.com/K1D77A/cl-coinpayments.git")))
 (:ql-project cl-collider :system-file cl-collider :system-name cl-collider
  :dependencies
  (alexandria asdf bordeaux-threads cffi cl-ppcre flexi-streams
   named-readtables pileup sc-osc simple-inferiors split-sequence)
  :source (("git" "https://github.com/byulparan/cl-collider.git")))
 (:ql-project cl-collider :system-file sc-osc :system-name sc-osc :dependencies
  (alexandria asdf bordeaux-threads ieee-floats osc usocket) :source
  (("git" "https://github.com/byulparan/cl-collider.git")))
 (:ql-project cl-colors :system-file cl-colors :system-name cl-colors
  :dependencies (alexandria asdf let-plus) :source
  (("git" "https://github.com/tpapp/cl-colors.git")))
 (:ql-project cl-colors :system-file cl-colors :system-name cl-colors-tests
  :dependencies (cl-colors lift) :source
  (("git" "https://github.com/tpapp/cl-colors.git")))
 (:ql-project cl-colors2 :system-file cl-colors2 :system-name cl-colors2
  :dependencies (alexandria asdf cl-ppcre) :source
  (("git" "https://notabug.org/cage/cl-colors2.git")))
 (:ql-project cl-colors2 :system-file cl-colors2 :system-name cl-colors2/tests
  :dependencies (cl-colors2 clunit2) :source
  (("git" "https://notabug.org/cage/cl-colors2.git")))
 (:ql-project cl-confidence :system-file org.melusina.confidence :system-name
  org.melusina.confidence :dependencies (alexandria asdf) :source
  (("git" "https://github.com/melusina-org/cl-confidence.git")))
 (:ql-project cl-confidence :system-file org.melusina.confidence :system-name
  org.melusina.confidence/development :dependencies (org.melusina.atelier)
  :source (("git" "https://github.com/melusina-org/cl-confidence.git")))
 (:ql-project cl-confidence :system-file org.melusina.confidence :system-name
  org.melusina.confidence/testsuite :dependencies
  (alexandria org.melusina.confidence) :source
  (("git" "https://github.com/melusina-org/cl-confidence.git")))
 (:ql-project cl-conllu :system-file cl-conllu :system-name cl-conllu
  :dependencies
  (alexandria asdf cl-log cl-markup cl-ppcre lispbuilder-lexer optima.ppcre
   split-sequence uuid wilbur xmls yason)
  :source (("git" "http://github.com/own-pt/cl-conllu.git")))
 (:ql-project cl-conspack :system-file cl-conspack :system-name cl-conspack
  :dependencies
  (alexandria asdf closer-mop fast-io ieee-floats trivial-garbage
   trivial-utf-8)
  :source (("git" "https://github.com/conspack/cl-conspack.git")))
 (:ql-project cl-conspack :system-file cl-conspack-test :system-name
  cl-conspack-test :dependencies (asdf cl-conspack fiveam) :source
  (("git" "https://github.com/conspack/cl-conspack.git")))
 (:ql-project cl-cont :system-file cl-cont :system-name cl-cont :dependencies
  (alexandria closer-mop) :source
  (("git" "https://gitlab.common-lisp.net/cl-cont/cl-cont.git")))
 (:ql-project cl-cont :system-file cl-cont-test :system-name cl-cont-test
  :dependencies (cl-cont rt) :source
  (("git" "https://gitlab.common-lisp.net/cl-cont/cl-cont.git")))
 (:ql-project cl-containers :system-file cl-containers :system-name
  cl-containers :dependencies (asdf asdf-system-connections metatilities-base)
  :source (("git" "https://github.com/gwkkwg/cl-containers.git")))
 (:ql-project cl-containers :system-file cl-containers-test :system-name
  cl-containers-test :dependencies (asdf cl-containers lift) :source
  (("git" "https://github.com/gwkkwg/cl-containers.git")))
 (:ql-project cl-containers :system-file cl-containers :system-name
  cl-containers/with-moptilities :dependencies (cl-containers moptilities)
  :source (("git" "https://github.com/gwkkwg/cl-containers.git")))
 (:ql-project cl-containers :system-file cl-containers :system-name
  cl-containers/with-utilities :dependencies (cl-containers metatilities-base)
  :source (("git" "https://github.com/gwkkwg/cl-containers.git")))
 (:ql-project cl-cookie :system-file cl-cookie :system-name cl-cookie
  :dependencies (alexandria asdf cl-ppcre local-time proc-parse quri) :source
  (("git" "https://github.com/fukamachi/cl-cookie.git")))
 (:ql-project cl-cookie :system-file cl-cookie-test :system-name cl-cookie-test
  :dependencies (asdf cl-cookie prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/cl-cookie.git")))
 (:ql-project cl-coroutine :system-file cl-coroutine :system-name cl-coroutine
  :dependencies (alexandria cl-cont) :source
  (("git" "https://github.com/takagi/cl-coroutine.git")))
 (:ql-project cl-coroutine :system-file cl-coroutine-test :system-name
  cl-coroutine-test :dependencies (cl-coroutine cl-test-more) :source
  (("git" "https://github.com/takagi/cl-coroutine.git")))
 (:ql-project cl-coveralls :system-file cl-coveralls :system-name cl-coveralls
  :dependencies
  (alexandria asdf cl-ppcre dexador flexi-streams ironclad jonathan lquery
   split-sequence uiop)
  :source (("git" "https://github.com/fukamachi/cl-coveralls.git")))
 (:ql-project cl-coveralls :system-file cl-coveralls-test :system-name
  cl-coveralls-test :dependencies (asdf cl-coveralls prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/cl-coveralls.git")))
 (:ql-project cl-covid19 :system-file cl-covid19 :system-name cl-covid19
  :dependencies
  (alexandria asdf cl-ascii-table cl-csv cl-migratum cl-migratum.driver.dbi
   cl-migratum.provider.local-path dexador djula jonathan quri tmpdir)
  :source (("git" "https://github.com/dnaeon/cl-covid19.git")))
 (:ql-project cl-cpus :system-file cl-cpus :system-name cl-cpus :dependencies
  (asdf cffi) :source
  (("git" "https://git.towernet.dev/projects/cl-cpus.git")))
 (:ql-project cl-cram :system-file cl-cram :system-name cl-cram :dependencies
  (asdf) :source (("git" "https://github.com/hikettei/cl-cram.git")))
 (:ql-project cl-crc64 :system-file cl-crc64 :system-name cl-crc64
  :dependencies nil :source
  (("git" "https://github.com/RobBlackwell/cl-crc64.git")))
 (:ql-project cl-creditcard :system-file cl-authorize-net :system-name
  cl-authorize-net :dependencies
  (alexandria cl-creditcard drakma split-sequence symbol-munger) :source
  (("git" "https://github.com/AccelerationNet/cl-creditcard.git")))
 (:ql-project cl-creditcard :system-file cl-authorize-net :system-name
  cl-authorize-net-tests :dependencies (alexandria cl-authorize-net lisp-unit)
  :source (("git" "https://github.com/AccelerationNet/cl-creditcard.git")))
 (:ql-project cl-creditcard :system-file cl-creditcard :system-name
  cl-creditcard :dependencies (iterate) :source
  (("git" "https://github.com/AccelerationNet/cl-creditcard.git")))
 (:ql-project cl-cron :system-file cl-cron :system-name cl-cron :dependencies
  (asdf bordeaux-threads) :source
  (("git" "https://github.com/ciel-lang/cl-cron.git")))
 (:ql-project cl-crypt :system-file crypt :system-name crypt :dependencies nil
  :source (("git" "https://github.com/renard/cl-crypt.git")))
 (:ql-project cl-css :system-file cl-css :system-name cl-css :dependencies nil
  :source (("git" "https://github.com/Inaimathi/cl-css.git")))
 (:ql-project cl-csv :system-file cl-csv :system-name cl-csv :dependencies
  (alexandria asdf cl-interpol iterate) :source
  (("git" "https://github.com/AccelerationNet/cl-csv.git") nil))
 (:ql-project cl-csv :system-file cl-csv-clsql :system-name cl-csv-clsql
  :dependencies (asdf cl-csv clsql-helper data-table-clsql) :source
  (("git" "https://github.com/AccelerationNet/cl-csv.git") nil))
 (:ql-project cl-csv :system-file cl-csv-data-table :system-name
  cl-csv-data-table :dependencies (asdf cl-csv data-table) :source
  (("git" "https://github.com/AccelerationNet/cl-csv.git") nil))
 (:ql-project cl-csv :system-file cl-csv :system-name cl-csv/speed-test
  :dependencies (cl-csv lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/cl-csv.git") nil))
 (:ql-project cl-csv :system-file cl-csv :system-name cl-csv/test :dependencies
  (cl-csv lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/cl-csv.git") nil))
 (:ql-project cl-cuda :system-file cl-cuda :system-name cl-cuda :dependencies
  (alexandria asdf cffi cffi-grovel cl-pattern cl-ppcre cl-reexport
   external-program osicat split-sequence)
  :source (("git" "https://github.com/takagi/cl-cuda.git")))
 (:ql-project cl-cuda :system-file cl-cuda-examples :system-name
  cl-cuda-examples :dependencies (asdf cl-cuda imago) :source
  (("git" "https://github.com/takagi/cl-cuda.git")))
 (:ql-project cl-cuda :system-file cl-cuda-interop :system-name cl-cuda-interop
  :dependencies (asdf cl-cuda cl-glu cl-glut cl-opengl) :source
  (("git" "https://github.com/takagi/cl-cuda.git")))
 (:ql-project cl-cuda :system-file cl-cuda-interop-examples :system-name
  cl-cuda-interop-examples :dependencies (asdf cl-cuda-interop) :source
  (("git" "https://github.com/takagi/cl-cuda.git")))
 (:ql-project cl-cuda :system-file cl-cuda-misc :system-name cl-cuda-misc
  :dependencies (asdf cl-emb local-time) :source
  (("git" "https://github.com/takagi/cl-cuda.git")))
 (:ql-project cl-custom-hash-table :system-file cl-custom-hash-table
  :system-name cl-custom-hash-table :dependencies (asdf) :source
  (("git" "https://github.com/metawilm/cl-custom-hash-table.git")))
 (:ql-project cl-custom-hash-table :system-file cl-custom-hash-table-test
  :system-name cl-custom-hash-table-test :dependencies
  (asdf cl-custom-hash-table hu.dwim.stefil) :source
  (("git" "https://github.com/metawilm/cl-custom-hash-table.git")))
 (:ql-project cl-cxx :system-file cxx :system-name cxx :dependencies
  (asdf cffi trivial-garbage) :source
  (("git" "https://github.com/Islam0mar/cl-cxx.git")))
 (:ql-project cl-cxx :system-file cxx-test :system-name cxx-test :dependencies
  (asdf cxx prove prove-asdf) :source
  (("git" "https://github.com/Islam0mar/cl-cxx.git")))
 (:ql-project cl-cxx-jit :system-file cxx-jit :system-name cxx-jit
  :dependencies (asdf cffi trivial-garbage uiop) :source
  (("git" "https://github.com/Islam0mar/CL-CXX-JIT.git")))
 (:ql-project cl-darksky :system-file cl-darksky :system-name cl-darksky
  :dependencies (alexandria asdf dexador jonathan) :source
  (("git" "https://github.com/0xk175un3/cl-darksky.git")))
 (:ql-project cl-darksky :system-file cl-darksky-test :system-name
  cl-darksky-test :dependencies (asdf cl-darksky prove prove-asdf) :source
  (("git" "https://github.com/0xk175un3/cl-darksky.git")))
 (:ql-project cl-data-format-validation :system-file data-format-validation
  :system-name data-format-validation :dependencies (cl-ppcre) :source
  (("git" "https://github.com/willijar/cl-data-format-validation.git")))
 (:ql-project cl-data-structures :system-file cl-data-structures :system-name
  cl-data-structures :dependencies
  (alexandria asdf bordeaux-threads cl-ppcre closer-mop
   documentation-utils-extensions flexichain iterate lparallel metabang-bind
   more-conditions serapeum trivial-garbage uiop)
  :source (("git" "https://github.com/sirherrbatka/cl-data-structures.git")))
 (:ql-project cl-data-structures :system-file cl-data-structures-tests
  :system-name cl-data-structures-tests :dependencies
  (asdf cl-data-structures prove prove-asdf) :source
  (("git" "https://github.com/sirherrbatka/cl-data-structures.git")))
 (:ql-project cl-date-time-parser :system-file cl-date-time-parser :system-name
  cl-date-time-parser :dependencies
  (alexandria anaphora cl-ppcre local-time parse-float split-sequence) :source
  (("git" "https://github.com/tkych/cl-date-time-parser.git")))
 (:ql-project cl-db3 :system-file db3 :system-name db3 :dependencies (asdf)
  :source (("git" "https://github.com/dimitri/cl-db3.git")))
 (:ql-project cl-dbi :system-file cl-dbi :system-name cl-dbi :dependencies
  (asdf dbi) :source (("git" "https://github.com/fukamachi/cl-dbi.git")))
 (:ql-project cl-dbi :system-file dbd-mysql :system-name dbd-mysql
  :dependencies (asdf cl-mysql dbi) :source
  (("git" "https://github.com/fukamachi/cl-dbi.git")))
 (:ql-project cl-dbi :system-file dbd-postgres :system-name dbd-postgres
  :dependencies (asdf cl-postgres dbi trivial-garbage) :source
  (("git" "https://github.com/fukamachi/cl-dbi.git")))
 (:ql-project cl-dbi :system-file dbd-sqlite3 :system-name dbd-sqlite3
  :dependencies (asdf dbi sqlite trivial-garbage) :source
  (("git" "https://github.com/fukamachi/cl-dbi.git")))
 (:ql-project cl-dbi :system-file dbi :system-name dbi :dependencies
  (asdf bordeaux-threads closer-mop split-sequence) :source
  (("git" "https://github.com/fukamachi/cl-dbi.git")))
 (:ql-project cl-dbi :system-file dbi-test :system-name dbi-test :dependencies
  (alexandria asdf dbi rove trivial-types) :source
  (("git" "https://github.com/fukamachi/cl-dbi.git")))
 (:ql-project cl-dbi :system-file dbi :system-name dbi/test :dependencies
  (alexandria closer-mop dbd-mysql dbd-postgres dbd-sqlite3 dbi dbi-test rove
   trivial-types)
  :source (("git" "https://github.com/fukamachi/cl-dbi.git")))
 (:ql-project cl-dct :system-file dct :system-name dct :dependencies
  (alexandria asdf) :source
  (("git" "https://github.com/belambert/cl-dct.git")))
 (:ql-project cl-dct :system-file dct-test :system-name dct-test :dependencies
  (asdf babel cl-coveralls dct lisp-unit trivial-features) :source
  (("git" "https://github.com/belambert/cl-dct.git")))
 (:ql-project cl-debug-print :system-file cl-debug-print :system-name
  cl-debug-print :dependencies (asdf cl-syntax) :source
  (("git" "https://github.com/masatoi/cl-debug-print.git")))
 (:ql-project cl-debug-print :system-file cl-debug-print-test :system-name
  cl-debug-print-test :dependencies (asdf cl-debug-print prove prove-asdf)
  :source (("git" "https://github.com/masatoi/cl-debug-print.git")))
 (:ql-project cl-debug-print :system-file cl-syntax-debug-print :system-name
  cl-syntax-debug-print :dependencies (asdf cl-debug-print cl-syntax) :source
  (("git" "https://github.com/masatoi/cl-debug-print.git")))
 (:ql-project cl-decimals :system-file decimals :system-name decimals
  :dependencies (asdf) :source
  (("git" "https://github.com/tlikonen/cl-decimals")))
 (:ql-project cl-def-properties :system-file def-properties :system-name
  def-properties :dependencies (alexandria asdf closer-mop swank) :source
  (("git" "https://github.com/mmontone/cl-def-properties.git")))
 (:ql-project cl-dejavu :system-file cl-dejavu :system-name cl-dejavu
  :dependencies (asdf) :source
  (("git" "https://codeberg.org/TurtleWare/cl-dejavu.git")))
 (:ql-project cl-devil :system-file cl-devil :system-name cl-devil
  :dependencies (alexandria cffi) :source
  (("git" "https://github.com/zkat/cl-devil.git")))
 (:ql-project cl-devil :system-file cl-ilu :system-name cl-ilu :dependencies
  (alexandria cffi cl-devil) :source
  (("git" "https://github.com/zkat/cl-devil.git")))
 (:ql-project cl-devil :system-file cl-ilut :system-name cl-ilut :dependencies
  (alexandria cffi cl-devil) :source
  (("git" "https://github.com/zkat/cl-devil.git")))
 (:ql-project cl-diceware :system-file cl-diceware :system-name cl-diceware
  :dependencies nil :source
  (("git" "https://github.com/billstclair/cl-diceware.git")))
 (:ql-project cl-difflib :system-file cl-difflib :system-name cl-difflib
  :dependencies nil :source
  (("git" "https://github.com/wiseman/cl-difflib.git")))
 (:ql-project cl-difflib :system-file cl-difflib-tests :system-name
  cl-difflib-tests :dependencies (cl-difflib) :source
  (("git" "https://github.com/wiseman/cl-difflib.git")))
 (:ql-project cl-digraph :system-file cl-digraph :system-name cl-digraph
  :dependencies (asdf) :source
  (("mercurial" "https://hg.stevelosh.com/cl-digraph/")))
 (:ql-project cl-digraph :system-file cl-digraph.dot :system-name
  cl-digraph.dot :dependencies (asdf cl-digraph cl-dot) :source
  (("mercurial" "https://hg.stevelosh.com/cl-digraph/")))
 (:ql-project cl-diskspace :system-file cl-diskspace :system-name cl-diskspace
  :dependencies (asdf cffi cffi-grovel cl-ppcre uiop) :source
  (("git" "https://github.com/muyinliu/cl-diskspace.git")))
 (:ql-project cl-disque :system-file cl-disque :system-name cl-disque
  :dependencies (babel cl-ppcre flexi-streams rutils usocket) :source
  (("git" "https://github.com/CodyReichert/cl-disque.git")))
 (:ql-project cl-disque :system-file cl-disque-test :system-name cl-disque-test
  :dependencies (cl-disque prove prove-asdf) :source
  (("git" "https://github.com/CodyReichert/cl-disque.git")))
 (:ql-project cl-djula-svg :system-file cl-djula-svg :system-name cl-djula-svg
  :dependencies (alexandria asdf xmls) :source
  (("git" "https://github.com/rajasegar/cl-djula-svg.git")))
 (:ql-project cl-djula-svg :system-file cl-djula-svg :system-name
  cl-djula-svg/tests :dependencies (cl-djula-svg rove) :source
  (("git" "https://github.com/rajasegar/cl-djula-svg.git")))
 (:ql-project cl-djula-tailwind :system-file cl-djula-tailwind :system-name
  cl-djula-tailwind :dependencies (asdf cl-css cl-minify-css cl-ppcre djula)
  :source (("git" "https://github.com/rajasegar/cl-djula-tailwind.git")))
 (:ql-project cl-djula-tailwind :system-file cl-djula-tailwind :system-name
  cl-djula-tailwind/tests :dependencies (cl-djula-tailwind rove) :source
  (("git" "https://github.com/rajasegar/cl-djula-tailwind.git")))
 (:ql-project cl-docutils :system-file docutils :system-name docutils
  :dependencies (cl-ppcre data-format-validation trivial-gray-streams) :source
  (("git" "https://github.com/willijar/cl-docutils.git")))
 (:ql-project cl-dot :system-file cl-dot :system-name cl-dot :dependencies
  (asdf uiop) :source (("git" "https://github.com/michaelw/cl-dot.git")))
 (:ql-project cl-dotenv :system-file cl-dotenv :system-name cl-dotenv
  :dependencies (alexandria asdf serapeum) :source
  (("git" "https://github.com/ollelauribostrom/cl-dotenv.git")))
 (:ql-project cl-dotenv :system-file cl-dotenv-test :system-name cl-dotenv-test
  :dependencies (asdf cl-dotenv prove prove-asdf) :source
  (("git" "https://github.com/ollelauribostrom/cl-dotenv.git")))
 (:ql-project cl-drawille :system-file cl-drawille :system-name cl-drawille
  :dependencies (alexandria asdf cffi osicat) :source
  (("git" "https://github.com/Goheeca/cl-drawille.git")))
 (:ql-project cl-drawille :system-file cl-drawille :system-name
  cl-drawille/examples :dependencies (cl-drawille) :source
  (("git" "https://github.com/Goheeca/cl-drawille.git")))
 (:ql-project cl-drawille :system-file cl-drawille :system-name
  cl-drawille/examples-animations :dependencies (cl-charms cl-drawille) :source
  (("git" "https://github.com/Goheeca/cl-drawille.git")))
 (:ql-project cl-drm :system-file cl-drm :system-name cl-drm :dependencies
  (cffi) :source (("git" "https://github.com/malcolmstill/cl-drm.git")))
 (:ql-project cl-dropbox :system-file cl-dropbox :system-name cl-dropbox
  :dependencies (cl-json cl-oauth cl-ppcre drakma) :source
  (("git" "https://github.com/jsmpereira/cl-dropbox.git")))
 (:ql-project cl-dsl :system-file cl-dsl :system-name cl-dsl :dependencies nil
  :source (("git" "https://github.com/mabragor/cl-dsl.git")))
 (:ql-project cl-dsl :system-file cl-dsl :system-name cl-dsl-tests
  :dependencies (cl-dsl eos) :source
  (("git" "https://github.com/mabragor/cl-dsl.git")))
 (:ql-project cl-durian :system-file cl-durian :system-name cl-durian
  :dependencies nil :source
  (("git" "https://github.com/GordianNaught/cl-durian.git")))
 (:ql-project cl-earley-parser :system-file cl-earley-parser :system-name
  cl-earley-parser :dependencies (asdf split-sequence) :source
  (("git" "https://github.com/oyvinht/cl-earley-parser.git")))
 (:ql-project cl-ecma-48 :system-file cl-ecma-48 :system-name cl-ecma-48
  :dependencies (asdf) :source
  (("http" "http://verisimilitudes.net/cl-ecma-48.tgz")))
 (:ql-project cl-editdistance :system-file edit-distance :system-name
  edit-distance :dependencies (asdf) :source
  (("git" "https://github.com/belambert/cl-editdistance.git")))
 (:ql-project cl-editdistance :system-file edit-distance-test :system-name
  edit-distance-test :dependencies
  (asdf babel cl-coveralls edit-distance lisp-unit trivial-features) :source
  (("git" "https://github.com/belambert/cl-editdistance.git")))
 (:ql-project cl-egl :system-file cl-egl :system-name cl-egl :dependencies
  (asdf cffi) :source (("git" "https://github.com/malcolmstill/cl-egl.git")))
 (:ql-project cl-elastic :system-file cl-elastic :system-name cl-elastic
  :dependencies (asdf drakma named-readtables yason) :source
  (("git" "https://github.com/FiV0/cl-elasticsearch.git")))
 (:ql-project cl-elastic :system-file cl-elastic-test :system-name
  cl-elastic-test :dependencies (asdf cl-elastic named-readtables parachute)
  :source (("git" "https://github.com/FiV0/cl-elasticsearch.git")))
 (:ql-project cl-emacs-if :system-file cl-emacs-if :system-name cl-emacs-if
  :dependencies nil :source
  (("git" "https://github.com/7max/cl-emacs-if.git")))
 (:ql-project cl-emb :system-file cl-emb :system-name cl-emb :dependencies
  (asdf cl-ppcre) :source (("git" "https://github.com/38a938c2/cl-emb.git")))
 (:ql-project cl-emoji :system-file cl-emoji :system-name cl-emoji
  :dependencies (asdf) :source
  (("git" "https://github.com/asciian/cl-emoji.git")))
 (:ql-project cl-emoji :system-file cl-emoji-test :system-name cl-emoji-test
  :dependencies (asdf cl-emoji prove prove-asdf) :source
  (("git" "https://github.com/asciian/cl-emoji.git")))
 (:ql-project cl-enchant :system-file enchant :system-name enchant
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/tlikonen/cl-enchant.git")))
 (:ql-project cl-enchant :system-file enchant-autoload :system-name
  enchant-autoload :dependencies (asdf enchant) :source
  (("git" "https://github.com/tlikonen/cl-enchant.git")))
 (:ql-project cl-enumeration :system-file enumerations :system-name
  enumerations :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/cl-enumeration/enumerations.git")
   nil))
 (:ql-project cl-env :system-file cl-env :system-name cl-env :dependencies
  (asdf) :source (("git" "https://github.com/mini-eggs/cl-env.git")))
 (:ql-project cl-env :system-file cl-env :system-name cl-env/test :dependencies
  (cl-env lisp-unit) :source
  (("git" "https://github.com/mini-eggs/cl-env.git")))
 (:ql-project cl-environments :system-file cl-environments :system-name
  cl-environments :dependencies
  (alexandria anaphora asdf collectors optima parse-declarations-1.0) :source
  (("git" "https://github.com/alex-gutev/cl-environments.git")))
 (:ql-project cl-environments :system-file cl-environments :system-name
  cl-environments/test :dependencies (cl-environments fiveam) :source
  (("git" "https://github.com/alex-gutev/cl-environments.git")))
 (:ql-project cl-epmd :system-file epmd :system-name epmd :dependencies
  (com.gigamonkeys.binary-data usocket) :source
  (("git" "https://github.com/flambard/cl-epmd.git")))
 (:ql-project cl-epmd :system-file epmd-test :system-name epmd-test
  :dependencies (epmd fiveam flexi-streams) :source
  (("git" "https://github.com/flambard/cl-epmd.git")))
 (:ql-project cl-epoch :system-file cl-epoch :system-name cl-epoch
  :dependencies (asdf) :source
  (("git" "https://github.com/mcandre/cl-epoch.git")))
 (:ql-project cl-erlang-term :system-file erlang-term :system-name erlang-term
  :dependencies (alexandria asdf ieee-floats nibbles zlib) :source
  (("git" "https://github.com/flambard/cl-erlang-term.git")))
 (:ql-project cl-erlang-term :system-file erlang-term-test :system-name
  erlang-term-test :dependencies (asdf erlang-term fiveam nibbles) :source
  (("git" "https://github.com/flambard/cl-erlang-term.git")))
 (:ql-project cl-etcd :system-file cl-etcd :system-name cl-etcd :dependencies
  (alexandria asdf async-process bordeaux-threads cl-base64 cl-json cl-ppcre
   drakma flexi-streams split-sequence str)
  :source (("git" "https://github.com/atgreen/cl-etcd.git")))
 (:ql-project cl-etcd :system-file etcd-test :system-name etcd-test
  :dependencies (asdf cl-etcd cl-toml) :source
  (("git" "https://github.com/atgreen/cl-etcd.git")))
 (:ql-project cl-ev :system-file ev :system-name ev :dependencies
  (cffi trivial-garbage) :source
  (("git" "https://github.com/sbryant/cl-ev.git")))
 (:ql-project cl-events :system-file cl-events :system-name cl-events
  :dependencies (alexandria blackbird iterate log4cl lparallel) :source
  (("git" "https://github.com/deadtrickster/cl-events.git")))
 (:ql-project cl-events :system-file cl-events.test :system-name cl-events.test
  :dependencies (cl-events log4cl mw-equiv prove prove-asdf) :source
  (("git" "https://github.com/deadtrickster/cl-events.git")))
 (:ql-project cl-ewkb :system-file cl-ewkb :system-name cl-ewkb :dependencies
  (flexi-streams ieee-floats) :source
  (("git" "https://github.com/filonenko-mikhail/cl-ewkb.git")))
 (:ql-project cl-ewkb :system-file cl-ewkb :system-name cl-ewkb-tests
  :dependencies (cl-ewkb postmodern) :source
  (("git" "https://github.com/filonenko-mikhail/cl-ewkb.git")))
 (:ql-project cl-factoring :system-file cl-factoring :system-name cl-factoring
  :dependencies (asdf cl-primality iterate) :source
  (("git" "https://github.com/smithzvk/cl-factoring.git")))
 (:ql-project cl-fad :system-file cl-fad :system-name cl-fad :dependencies
  (alexandria asdf bordeaux-threads) :source (("ediware-http" "cl-fad")))
 (:ql-project cl-fad :system-file cl-fad :system-name cl-fad/test :dependencies
  (cl-fad cl-ppcre unit-test) :source (("ediware-http" "cl-fad")))
 (:ql-project cl-fam :system-file cl-fam :system-name cl-fam :dependencies
  (cffi cffi-grovel trivial-garbage) :source
  (("git" "https://github.com/7max/cl-fam.git")))
 (:ql-project cl-fast-ecs :system-file cl-fast-ecs :system-name cl-fast-ecs
  :dependencies (alexandria asdf trivial-garbage) :source
  (("git" "https://gitlab.com/lockie/cl-fast-ecs.git")))
 (:ql-project cl-fast-ecs :system-file cl-fast-ecs :system-name
  cl-fast-ecs/tests :dependencies (cl-fast-ecs cl-mock-basic parachute) :source
  (("git" "https://gitlab.com/lockie/cl-fast-ecs.git")))
 (:ql-project cl-fbclient :system-file cl-fbclient :system-name cl-fbclient
  :dependencies (cffi) :source
  (("git" "https://github.com/klimenko-serj/cl-fbclient.git")))
 (:ql-project cl-fbx :system-file cl-fbx :system-name cl-fbx :dependencies
  (asdf cffi documentation-utils float-features static-vectors
   trivial-extensible-sequences trivial-features trivial-garbage)
  :source (("git" "https://github.com/shirakumo/cl-fbx.git")))
 (:ql-project cl-feedparser :system-file cl-feedparser :system-name
  cl-feedparser :dependencies
  (alexandria anaphora asdf asdf-package-system cl-html5-parser cl-ppcre fset
   fxml local-time net-telent-date plump quri serapeum)
  :source (("git" "https://github.com/ruricolist/cl-feedparser.git")))
 (:ql-project cl-feedparser :system-file cl-feedparser-tests :system-name
  cl-feedparser-tests :dependencies (asdf cl-feedparser fiveam fxml local-time)
  :source (("git" "https://github.com/ruricolist/cl-feedparser.git")))
 (:ql-project cl-feedparser :system-file cl-feedparser :system-name
  cl-feedparser/test :dependencies (cl-feedparser fiveam fxml local-time)
  :source (("git" "https://github.com/ruricolist/cl-feedparser.git")))
 (:ql-project cl-fix :system-file cl-fix :system-name cl-fix :dependencies
  (alexandria arrow-macros asdf bordeaux-threads cl-ppcre local-time log4cl
   parse-number usocket)
  :source (("git" "https://gitlab.com/fix9/cl-fix.git")))
 (:ql-project cl-fix :system-file cl-fix :system-name cl-fix/fix44
  :dependencies (cl-fix) :source
  (("git" "https://gitlab.com/fix9/cl-fix.git")))
 (:ql-project cl-fix :system-file cl-fix :system-name cl-fix/test :dependencies
  (cl-fix fiveam trivial-gray-streams) :source
  (("git" "https://gitlab.com/fix9/cl-fix.git")))
 (:ql-project cl-fixtures :system-file cl-fixtures :system-name cl-fixtures
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/libre-man/cl-fixtures.git")))
 (:ql-project cl-fixtures :system-file cl-fixtures-test :system-name
  cl-fixtures-test :dependencies
  (asdf cl-fixtures incf-cl prove prove-asdf rutils) :source
  (("git" "https://github.com/libre-man/cl-fixtures.git")))
 (:ql-project cl-flac :system-file cl-flac :system-name cl-flac :dependencies
  (asdf cffi documentation-utils trivial-features trivial-garbage) :source
  (("git" "https://github.com/Shirakumo/cl-flac.git")))
 (:ql-project cl-flat-tree :system-file flat-tree :system-name flat-tree
  :dependencies (asdf) :source
  (("git" "https://github.com/noffle/cl-flat-tree.git")))
 (:ql-project cl-flow :system-file cl-flow :system-name cl-flow :dependencies
  (alexandria asdf cl-muth) :source
  (("tagged-git" "https://github.com/borodust/cl-flow.git" "stable")))
 (:ql-project cl-flow :system-file cl-flow :system-name cl-flow/tests
  :dependencies (alexandria cl-flow cl-muth fiveam simple-flow-dispatcher)
  :source (("tagged-git" "https://github.com/borodust/cl-flow.git" "stable")))
 (:ql-project cl-flowd :system-file cl-flowd :system-name cl-flowd
  :dependencies (cl-annot) :source
  (("git" "https://github.com/mmaul/cl-flowd.git")))
 (:ql-project cl-fluent-logger :system-file cl-fluent-logger :system-name
  cl-fluent-logger :dependencies
  (alexandria asdf bordeaux-threads cl-messagepack jonathan local-time pack
   usocket)
  :source (("git" "https://github.com/fukamachi/cl-fluent-logger.git")))
 (:ql-project cl-fluidinfo :system-file cl-fluiddb :system-name cl-fluiddb
  :dependencies (bordeaux-threads cl-json drakma flexi-streams split-sequence)
  :source (("git" "https://github.com/hdurer/cl-fluiddb.git")))
 (:ql-project cl-fluidinfo :system-file cl-fluiddb-test :system-name
  cl-fluiddb-test :dependencies (cl-fluiddb lift) :source
  (("git" "https://github.com/hdurer/cl-fluiddb.git")))
 (:ql-project cl-fluidinfo :system-file cl-fluidinfo :system-name cl-fluidinfo
  :dependencies (cl-fluiddb) :source
  (("git" "https://github.com/hdurer/cl-fluiddb.git")))
 (:ql-project cl-fond :system-file cl-fond :system-name cl-fond :dependencies
  (alexandria asdf cffi cl-opengl documentation-utils trivial-features
   trivial-garbage)
  :source (("git" "https://github.com/Shirakumo/cl-fond.git")))
 (:ql-project cl-form-types :system-file cl-form-types :system-name
  cl-form-types :dependencies
  (agutil alexandria anaphora arrows asdf cl-environments
   introspect-environment optima)
  :source (("git" "https://github.com/alex-gutev/cl-form-types.git")))
 (:ql-project cl-form-types :system-file cl-form-types :system-name
  cl-form-types/test :dependencies (cl-form-types fiveam) :source
  (("git" "https://github.com/alex-gutev/cl-form-types.git")))
 (:ql-project cl-forms :system-file cl-forms :system-name cl-forms
  :dependencies
  (alexandria asdf cl-ppcre clavier fmt hunchentoot ironclad str uuid) :source
  (("git" "https://github.com/mmontone/cl-forms.git")))
 (:ql-project cl-forms :system-file cl-forms.djula :system-name cl-forms.djula
  :dependencies (asdf cl-forms cl-forms.who djula) :source
  (("git" "https://github.com/mmontone/cl-forms.git")))
 (:ql-project cl-forms :system-file cl-forms.peppol :system-name
  cl-forms.peppol :dependencies (asdf cl-forms peppol) :source
  (("git" "https://github.com/mmontone/cl-forms.git")))
 (:ql-project cl-forms :system-file cl-forms.test :system-name cl-forms.test
  :dependencies (asdf cl-forms fiveam) :source
  (("git" "https://github.com/mmontone/cl-forms.git")))
 (:ql-project cl-forms :system-file cl-forms.who :system-name cl-forms.who
  :dependencies (asdf cl-forms cl-who) :source
  (("git" "https://github.com/mmontone/cl-forms.git")))
 (:ql-project cl-forms :system-file cl-forms.who.bootstrap :system-name
  cl-forms.who.bootstrap :dependencies (asdf cl-forms.who) :source
  (("git" "https://github.com/mmontone/cl-forms.git")))
 (:ql-project cl-freeimage :system-file cl-freeimage :system-name cl-freeimage
  :dependencies (cffi) :source
  (("git" "https://github.com/BradWBeer/cl-freeimage.git")))
 (:ql-project cl-freetype2 :system-file cl-freetype2 :system-name cl-freetype2
  :dependencies (alexandria asdf cffi cffi-grovel trivial-garbage) :source
  (("git" "https://github.com/rpav/cl-freetype2.git")))
 (:ql-project cl-freetype2 :system-file cl-freetype2-tests :system-name
  cl-freetype2-tests :dependencies (asdf cl-freetype2 fiveam) :source
  (("git" "https://github.com/rpav/cl-freetype2.git")))
 (:ql-project cl-fsnotify :system-file cl-fsnotify :system-name cl-fsnotify
  :dependencies (cffi cffi-grovel) :source
  (("git" "https://github.com/howeyc/cl-fsnotify.git")))
 (:ql-project cl-ftp :system-file cl-ftp :system-name cl-ftp :dependencies
  (split-sequence usocket) :source
  (("https" "https://web.kepibu.org/code/lisp/cl-ftp/cl-ftp.tar.gz")))
 (:ql-project cl-ftp :system-file ftp :system-name ftp :dependencies (cl-ftp)
  :source (("https" "https://web.kepibu.org/code/lisp/cl-ftp/cl-ftp.tar.gz")))
 (:ql-project cl-fuse :system-file cl-fuse :system-name cl-fuse :dependencies
  (asdf bordeaux-threads cffi cffi-grovel cl-utilities iterate
   trivial-backtrace trivial-utf-8)
  :source (("git" "https://github.com/fb08af68/cl-fuse.git")))
 (:ql-project cl-fuse-meta-fs :system-file cl-fuse-meta-fs :system-name
  cl-fuse-meta-fs :dependencies (asdf bordeaux-threads cl-fuse iterate pcall)
  :source (("git" "https://github.com/fb08af68/cl-fuse-meta-fs.git")))
 (:ql-project cl-fuzz :system-file cl-fuzz :system-name cl-fuzz :dependencies
  (alexandria asdf) :source (("git" "https://github.com/ndantam/cl-fuzz.git")))
 (:ql-project cl-fxml :system-file cl-fxml :system-name cl-fxml :dependencies
  (agnostic-lizard alexandria asdf named-readtables) :source
  (("git" "https://github.com/Goheeca/cl-fxml.git")))
 (:ql-project cl-gamepad :system-file cl-gamepad :system-name cl-gamepad
  :dependencies (asdf cffi documentation-utils trivial-features) :source
  (("git" "https://github.com/Shirakumo/cl-gamepad.git")))
 (:ql-project cl-gap-buffer :system-file cl-gap-buffer :system-name
  cl-gap-buffer :dependencies (asdf) :source
  (("git" "https://github.com/stylewarning/cl-gap-buffer.git")))
 (:ql-project cl-gbm :system-file cl-gbm :system-name cl-gbm :dependencies
  (asdf cffi) :source (("git" "https://github.com/malcolmstill/cl-gbm.git")))
 (:ql-project cl-gcrypt :system-file cl-gcrypt :system-name cl-gcrypt
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/gorozhin/cl-gcrypt.git")))
 (:ql-project cl-gcrypt :system-file cl-gcrypt-test :system-name cl-gcrypt-test
  :dependencies (alexandria asdf babel cffi cl-gcrypt fiveam) :source
  (("git" "https://github.com/gorozhin/cl-gcrypt.git")))
 (:ql-project cl-gd :system-file cl-gd :system-name cl-gd :dependencies
  (asdf uffi) :source (("git" "https://github.com/edicl/cl-gd.git")))
 (:ql-project cl-gd :system-file cl-gd-test :system-name cl-gd-test
  :dependencies (asdf cl-gd) :source
  (("git" "https://github.com/edicl/cl-gd.git")))
 (:ql-project cl-gdata :system-file cl-gdata :system-name cl-gdata
  :dependencies
  (alexandria cl-fad cl-json cl-ppcre closer-mop cxml drakma flexi-streams
   gzip-stream local-time parse-number split-sequence string-case trivial-utf-8
   url-rewrite xpath)
  :source (("git" "https://github.com/lokedhs/cl-gdata.git") nil))
 (:ql-project cl-gearman :system-file cl-gearman :system-name cl-gearman
  :dependencies (alexandria asdf babel split-sequence usocket) :source
  (("git" "https://github.com/taksatou/cl-gearman.git")))
 (:ql-project cl-gearman :system-file cl-gearman-test :system-name
  cl-gearman-test :dependencies (asdf cl-gearman cl-test-more) :source
  (("git" "https://github.com/taksatou/cl-gearman.git")))
 (:ql-project cl-gendoc :system-file cl-gendoc :system-name cl-gendoc
  :dependencies (3bmd 3bmd-ext-code-blocks asdf cl-who) :source
  (("git" "https://github.com/rpav/cl-gendoc.git")))
 (:ql-project cl-gendoc :system-file cl-gendoc :system-name cl-gendoc-docs
  :dependencies (cl-gendoc) :source
  (("git" "https://github.com/rpav/cl-gendoc.git")))
 (:ql-project cl-gene-searcher :system-file cl-gene-searcher :system-name
  cl-gene-searcher :dependencies (clsql-sqlite3) :source
  (("git" "https://github.com/TheDarkTrumpet/cl-gene-searcher.git")))
 (:ql-project cl-general-accumulator :system-file general-accumulator
  :system-name general-accumulator :dependencies (asdf) :source
  (("git" "https://github.com/tlikonen/cl-general-accumulator.git")))
 (:ql-project cl-generator :system-file cl-generator :system-name cl-generator
  :dependencies (asdf cl-cont) :source
  (("git" "https://github.com/ukari/cl-generator.git")))
 (:ql-project cl-generator :system-file cl-generator-test :system-name
  cl-generator-test :dependencies (asdf cl-generator lisp-unit) :source
  (("git" "https://github.com/ukari/cl-generator.git")))
 (:ql-project cl-geocode :system-file cl-geocode :system-name cl-geocode
  :dependencies (acl-compat asdf aserve cl-ppcre) :source
  (("git" "https://github.com/e40/cl-geocode.git")))
 (:ql-project cl-geoip :system-file cl-geoip :system-name cl-geoip
  :dependencies (cffi) :source
  (("git" "https://github.com/dasuxullebt/cl-geoip.git")))
 (:ql-project cl-geometry :system-file cl-geometry :system-name cl-geometry
  :dependencies (iterate trees) :source
  (("git" "https://github.com/vydd/cl-geometry.git")))
 (:ql-project cl-geometry :system-file cl-geometry-tests :system-name
  cl-geometry-tests :dependencies (cl-geometry iterate vecto) :source
  (("git" "https://github.com/vydd/cl-geometry.git")))
 (:ql-project cl-geos :system-file cl-geos :system-name cl-geos :dependencies
  (asdf cffi trivial-garbage uiop xarray) :source
  (("git" "https://github.com/daewok/cl-geos.git")))
 (:ql-project cl-geos :system-file cl-geos :system-name cl-geos/test
  :dependencies (cl-geos fiveam) :source
  (("git" "https://github.com/daewok/cl-geos.git")))
 (:ql-project cl-getopt :system-file cl-getopt :system-name cl-getopt
  :dependencies (asdf cffi cffi-grovel) :source
  (("git" "https://github.com/ghollisjr/cl-getopt.git")))
 (:ql-project cl-getx :system-file cl-getx :system-name cl-getx :dependencies
  (asdf) :source (("git" "https://gitlab.com/Harag/cl-getx.git")))
 (:ql-project cl-gimei :system-file cl-gimei :system-name cl-gimei
  :dependencies (alexandria asdf cl-yaml) :source
  (("git" "https://github.com/cxxxr/cl-gimei.git")))
 (:ql-project cl-gimei :system-file cl-gimei :system-name cl-gimei/test
  :dependencies (cl-gimei rove) :source
  (("git" "https://github.com/cxxxr/cl-gimei.git")))
 (:ql-project cl-gists :system-file cl-gists :system-name cl-gists
  :dependencies
  (alexandria alexandria+ asdf babel dexador local-time quri yason) :source
  (("git" "https://github.com/Symbolics/cl-gists.git")))
 (:ql-project cl-gists :system-file cl-gists :system-name cl-gists/test
  :dependencies (cl-gists closer-mop clunit2) :source
  (("git" "https://github.com/Symbolics/cl-gists.git")))
 (:ql-project cl-git :system-file cl-git :system-name cl-git :dependencies
  (alexandria anaphora asdf cffi cffi-grovel cl-fad closer-mop flexi-streams
   local-time trivial-garbage uiop)
  :source (("git" "https://git.sr.ht/~rsl/cl-git")))
 (:ql-project cl-git :system-file cl-git :system-name cl-git/tests
  :dependencies
  (alexandria asdf cl-fad cl-git fiveam flexi-streams inferior-shell local-time
   unix-options)
  :source (("git" "https://git.sr.ht/~rsl/cl-git")))
 (:ql-project cl-github-v3 :system-file cl-github-v3 :system-name cl-github-v3
  :dependencies (alexandria asdf cl-ppcre drakma yason) :source
  (("git" "https://github.com/hanshuebner/cl-github-v3.git")))
 (:ql-project cl-glfw :system-file cl-glfw :system-name cl-glfw :dependencies
  (cffi cl-glfw-types) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-ftgl :system-name cl-glfw-ftgl
  :dependencies (cffi) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-glu :system-name cl-glfw-glu
  :dependencies (cffi cl-glfw-types) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-3dfx_multisample :system-name
  cl-glfw-opengl-3dfx_multisample :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-3dfx_tbuffer :system-name
  cl-glfw-opengl-3dfx_tbuffer :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-3dfx_texture_compression_fxt1
  :system-name cl-glfw-opengl-3dfx_texture_compression_fxt1 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-amd_blend_minmax_factor
  :system-name cl-glfw-opengl-amd_blend_minmax_factor :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-amd_depth_clamp_separate
  :system-name cl-glfw-opengl-amd_depth_clamp_separate :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-amd_draw_buffers_blend
  :system-name cl-glfw-opengl-amd_draw_buffers_blend :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-amd_multi_draw_indirect
  :system-name cl-glfw-opengl-amd_multi_draw_indirect :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-amd_name_gen_delete
  :system-name cl-glfw-opengl-amd_name_gen_delete :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-amd_performance_monitor
  :system-name cl-glfw-opengl-amd_performance_monitor :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-amd_sample_positions
  :system-name cl-glfw-opengl-amd_sample_positions :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-amd_seamless_cubemap_per_texture :system-name
  cl-glfw-opengl-amd_seamless_cubemap_per_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-amd_vertex_shader_tesselator
  :system-name cl-glfw-opengl-amd_vertex_shader_tesselator :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_aux_depth_stencil
  :system-name cl-glfw-opengl-apple_aux_depth_stencil :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_client_storage
  :system-name cl-glfw-opengl-apple_client_storage :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_element_array
  :system-name cl-glfw-opengl-apple_element_array :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_fence :system-name
  cl-glfw-opengl-apple_fence :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_float_pixels
  :system-name cl-glfw-opengl-apple_float_pixels :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_flush_buffer_range
  :system-name cl-glfw-opengl-apple_flush_buffer_range :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_object_purgeable
  :system-name cl-glfw-opengl-apple_object_purgeable :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_rgb_422 :system-name
  cl-glfw-opengl-apple_rgb_422 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_row_bytes :system-name
  cl-glfw-opengl-apple_row_bytes :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_specular_vector
  :system-name cl-glfw-opengl-apple_specular_vector :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_texture_range
  :system-name cl-glfw-opengl-apple_texture_range :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_transform_hint
  :system-name cl-glfw-opengl-apple_transform_hint :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_vertex_array_object
  :system-name cl-glfw-opengl-apple_vertex_array_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_vertex_array_range
  :system-name cl-glfw-opengl-apple_vertex_array_range :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-apple_vertex_program_evaluators :system-name
  cl-glfw-opengl-apple_vertex_program_evaluators :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-apple_ycbcr_422 :system-name
  cl-glfw-opengl-apple_ycbcr_422 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_blend_func_extended
  :system-name cl-glfw-opengl-arb_blend_func_extended :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_color_buffer_float
  :system-name cl-glfw-opengl-arb_color_buffer_float :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_copy_buffer :system-name
  cl-glfw-opengl-arb_copy_buffer :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_depth_buffer_float
  :system-name cl-glfw-opengl-arb_depth_buffer_float :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_depth_clamp :system-name
  cl-glfw-opengl-arb_depth_clamp :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_depth_texture
  :system-name cl-glfw-opengl-arb_depth_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_draw_buffers :system-name
  cl-glfw-opengl-arb_draw_buffers :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_draw_buffers_blend
  :system-name cl-glfw-opengl-arb_draw_buffers_blend :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_draw_elements_base_vertex
  :system-name cl-glfw-opengl-arb_draw_elements_base_vertex :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_draw_indirect
  :system-name cl-glfw-opengl-arb_draw_indirect :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_draw_instanced
  :system-name cl-glfw-opengl-arb_draw_instanced :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_es2_compatibility
  :system-name cl-glfw-opengl-arb_es2_compatibility :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_fragment_program
  :system-name cl-glfw-opengl-arb_fragment_program :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_fragment_shader
  :system-name cl-glfw-opengl-arb_fragment_shader :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_framebuffer_object
  :system-name cl-glfw-opengl-arb_framebuffer_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-arb_framebuffer_object_deprecated :system-name
  cl-glfw-opengl-arb_framebuffer_object_deprecated :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_framebuffer_srgb
  :system-name cl-glfw-opengl-arb_framebuffer_srgb :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_geometry_shader4
  :system-name cl-glfw-opengl-arb_geometry_shader4 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_get_program_binary
  :system-name cl-glfw-opengl-arb_get_program_binary :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_gpu_shader5 :system-name
  cl-glfw-opengl-arb_gpu_shader5 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_gpu_shader_fp64
  :system-name cl-glfw-opengl-arb_gpu_shader_fp64 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_half_float_pixel
  :system-name cl-glfw-opengl-arb_half_float_pixel :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_half_float_vertex
  :system-name cl-glfw-opengl-arb_half_float_vertex :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_imaging :system-name
  cl-glfw-opengl-arb_imaging :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_imaging_deprecated
  :system-name cl-glfw-opengl-arb_imaging_deprecated :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_instanced_arrays
  :system-name cl-glfw-opengl-arb_instanced_arrays :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_map_buffer_range
  :system-name cl-glfw-opengl-arb_map_buffer_range :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_matrix_palette
  :system-name cl-glfw-opengl-arb_matrix_palette :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_multisample :system-name
  cl-glfw-opengl-arb_multisample :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_multitexture :system-name
  cl-glfw-opengl-arb_multitexture :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_occlusion_query
  :system-name cl-glfw-opengl-arb_occlusion_query :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_occlusion_query2
  :system-name cl-glfw-opengl-arb_occlusion_query2 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_pixel_buffer_object
  :system-name cl-glfw-opengl-arb_pixel_buffer_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_point_parameters
  :system-name cl-glfw-opengl-arb_point_parameters :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_point_sprite :system-name
  cl-glfw-opengl-arb_point_sprite :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_provoking_vertex
  :system-name cl-glfw-opengl-arb_provoking_vertex :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_robustness :system-name
  cl-glfw-opengl-arb_robustness :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_sample_shading
  :system-name cl-glfw-opengl-arb_sample_shading :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_sampler_objects
  :system-name cl-glfw-opengl-arb_sampler_objects :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_seamless_cube_map
  :system-name cl-glfw-opengl-arb_seamless_cube_map :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_separate_shader_objects
  :system-name cl-glfw-opengl-arb_separate_shader_objects :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_shader_objects
  :system-name cl-glfw-opengl-arb_shader_objects :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_shader_subroutine
  :system-name cl-glfw-opengl-arb_shader_subroutine :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_shading_language_100
  :system-name cl-glfw-opengl-arb_shading_language_100 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_shading_language_include
  :system-name cl-glfw-opengl-arb_shading_language_include :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_shadow :system-name
  cl-glfw-opengl-arb_shadow :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_shadow_ambient
  :system-name cl-glfw-opengl-arb_shadow_ambient :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_tessellation_shader
  :system-name cl-glfw-opengl-arb_tessellation_shader :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_border_clamp
  :system-name cl-glfw-opengl-arb_texture_border_clamp :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_buffer_object
  :system-name cl-glfw-opengl-arb_texture_buffer_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-arb_texture_buffer_object_rgb32 :system-name
  cl-glfw-opengl-arb_texture_buffer_object_rgb32 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_compression
  :system-name cl-glfw-opengl-arb_texture_compression :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_compression_bptc
  :system-name cl-glfw-opengl-arb_texture_compression_bptc :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_compression_rgtc
  :system-name cl-glfw-opengl-arb_texture_compression_rgtc :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_cube_map
  :system-name cl-glfw-opengl-arb_texture_cube_map :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_cube_map_array
  :system-name cl-glfw-opengl-arb_texture_cube_map_array :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_env_combine
  :system-name cl-glfw-opengl-arb_texture_env_combine :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_env_dot3
  :system-name cl-glfw-opengl-arb_texture_env_dot3 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_float
  :system-name cl-glfw-opengl-arb_texture_float :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_gather
  :system-name cl-glfw-opengl-arb_texture_gather :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_mirrored_repeat
  :system-name cl-glfw-opengl-arb_texture_mirrored_repeat :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_multisample
  :system-name cl-glfw-opengl-arb_texture_multisample :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_rectangle
  :system-name cl-glfw-opengl-arb_texture_rectangle :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_rg :system-name
  cl-glfw-opengl-arb_texture_rg :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_rgb10_a2ui
  :system-name cl-glfw-opengl-arb_texture_rgb10_a2ui :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_texture_swizzle
  :system-name cl-glfw-opengl-arb_texture_swizzle :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_timer_query :system-name
  cl-glfw-opengl-arb_timer_query :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_transform_feedback2
  :system-name cl-glfw-opengl-arb_transform_feedback2 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_transpose_matrix
  :system-name cl-glfw-opengl-arb_transpose_matrix :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_uniform_buffer_object
  :system-name cl-glfw-opengl-arb_uniform_buffer_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_vertex_array_bgra
  :system-name cl-glfw-opengl-arb_vertex_array_bgra :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_vertex_array_object
  :system-name cl-glfw-opengl-arb_vertex_array_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_vertex_attrib_64bit
  :system-name cl-glfw-opengl-arb_vertex_attrib_64bit :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_vertex_blend :system-name
  cl-glfw-opengl-arb_vertex_blend :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_vertex_buffer_object
  :system-name cl-glfw-opengl-arb_vertex_buffer_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_vertex_program
  :system-name cl-glfw-opengl-arb_vertex_program :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_vertex_shader
  :system-name cl-glfw-opengl-arb_vertex_shader :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-arb_vertex_type_2_10_10_10_rev :system-name
  cl-glfw-opengl-arb_vertex_type_2_10_10_10_rev :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_viewport_array
  :system-name cl-glfw-opengl-arb_viewport_array :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-arb_window_pos :system-name
  cl-glfw-opengl-arb_window_pos :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_draw_buffers :system-name
  cl-glfw-opengl-ati_draw_buffers :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_element_array
  :system-name cl-glfw-opengl-ati_element_array :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_envmap_bumpmap
  :system-name cl-glfw-opengl-ati_envmap_bumpmap :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_fragment_shader
  :system-name cl-glfw-opengl-ati_fragment_shader :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_map_object_buffer
  :system-name cl-glfw-opengl-ati_map_object_buffer :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_meminfo :system-name
  cl-glfw-opengl-ati_meminfo :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_pixel_format_float
  :system-name cl-glfw-opengl-ati_pixel_format_float :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_pn_triangles :system-name
  cl-glfw-opengl-ati_pn_triangles :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_separate_stencil
  :system-name cl-glfw-opengl-ati_separate_stencil :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_text_fragment_shader
  :system-name cl-glfw-opengl-ati_text_fragment_shader :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_texture_env_combine3
  :system-name cl-glfw-opengl-ati_texture_env_combine3 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_texture_float
  :system-name cl-glfw-opengl-ati_texture_float :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_texture_mirror_once
  :system-name cl-glfw-opengl-ati_texture_mirror_once :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_vertex_array_object
  :system-name cl-glfw-opengl-ati_vertex_array_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-ati_vertex_attrib_array_object :system-name
  cl-glfw-opengl-ati_vertex_attrib_array_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ati_vertex_streams
  :system-name cl-glfw-opengl-ati_vertex_streams :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-core :system-name
  cl-glfw-opengl-core :dependencies (cffi cl-glfw-types) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_422_pixels :system-name
  cl-glfw-opengl-ext_422_pixels :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_abgr :system-name
  cl-glfw-opengl-ext_abgr :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_bgra :system-name
  cl-glfw-opengl-ext_bgra :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_bindable_uniform
  :system-name cl-glfw-opengl-ext_bindable_uniform :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_blend_color :system-name
  cl-glfw-opengl-ext_blend_color :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_blend_equation_separate
  :system-name cl-glfw-opengl-ext_blend_equation_separate :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_blend_func_separate
  :system-name cl-glfw-opengl-ext_blend_func_separate :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_blend_minmax :system-name
  cl-glfw-opengl-ext_blend_minmax :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_blend_subtract
  :system-name cl-glfw-opengl-ext_blend_subtract :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_clip_volume_hint
  :system-name cl-glfw-opengl-ext_clip_volume_hint :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_cmyka :system-name
  cl-glfw-opengl-ext_cmyka :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_color_subtable
  :system-name cl-glfw-opengl-ext_color_subtable :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_compiled_vertex_array
  :system-name cl-glfw-opengl-ext_compiled_vertex_array :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_convolution :system-name
  cl-glfw-opengl-ext_convolution :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_coordinate_frame
  :system-name cl-glfw-opengl-ext_coordinate_frame :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_copy_texture :system-name
  cl-glfw-opengl-ext_copy_texture :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_cull_vertex :system-name
  cl-glfw-opengl-ext_cull_vertex :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_depth_bounds_test
  :system-name cl-glfw-opengl-ext_depth_bounds_test :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_direct_state_access
  :system-name cl-glfw-opengl-ext_direct_state_access :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_draw_buffers2
  :system-name cl-glfw-opengl-ext_draw_buffers2 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_draw_instanced
  :system-name cl-glfw-opengl-ext_draw_instanced :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_draw_range_elements
  :system-name cl-glfw-opengl-ext_draw_range_elements :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_fog_coord :system-name
  cl-glfw-opengl-ext_fog_coord :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_framebuffer_blit
  :system-name cl-glfw-opengl-ext_framebuffer_blit :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_framebuffer_multisample
  :system-name cl-glfw-opengl-ext_framebuffer_multisample :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_framebuffer_object
  :system-name cl-glfw-opengl-ext_framebuffer_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_framebuffer_srgb
  :system-name cl-glfw-opengl-ext_framebuffer_srgb :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_geometry_shader4
  :system-name cl-glfw-opengl-ext_geometry_shader4 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_gpu_program_parameters
  :system-name cl-glfw-opengl-ext_gpu_program_parameters :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_gpu_shader4 :system-name
  cl-glfw-opengl-ext_gpu_shader4 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_histogram :system-name
  cl-glfw-opengl-ext_histogram :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_index_array_formats
  :system-name cl-glfw-opengl-ext_index_array_formats :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_index_func :system-name
  cl-glfw-opengl-ext_index_func :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_index_material
  :system-name cl-glfw-opengl-ext_index_material :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_light_texture
  :system-name cl-glfw-opengl-ext_light_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_multi_draw_arrays
  :system-name cl-glfw-opengl-ext_multi_draw_arrays :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_multisample :system-name
  cl-glfw-opengl-ext_multisample :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_packed_depth_stencil
  :system-name cl-glfw-opengl-ext_packed_depth_stencil :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_packed_float :system-name
  cl-glfw-opengl-ext_packed_float :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_packed_pixels
  :system-name cl-glfw-opengl-ext_packed_pixels :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_paletted_texture
  :system-name cl-glfw-opengl-ext_paletted_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_pixel_buffer_object
  :system-name cl-glfw-opengl-ext_pixel_buffer_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_pixel_transform
  :system-name cl-glfw-opengl-ext_pixel_transform :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_point_parameters
  :system-name cl-glfw-opengl-ext_point_parameters :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_polygon_offset
  :system-name cl-glfw-opengl-ext_polygon_offset :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_provoking_vertex
  :system-name cl-glfw-opengl-ext_provoking_vertex :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_secondary_color
  :system-name cl-glfw-opengl-ext_secondary_color :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_separate_shader_objects
  :system-name cl-glfw-opengl-ext_separate_shader_objects :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_separate_specular_color
  :system-name cl-glfw-opengl-ext_separate_specular_color :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_shader_image_load_store
  :system-name cl-glfw-opengl-ext_shader_image_load_store :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_stencil_clear_tag
  :system-name cl-glfw-opengl-ext_stencil_clear_tag :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_stencil_two_side
  :system-name cl-glfw-opengl-ext_stencil_two_side :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_stencil_wrap :system-name
  cl-glfw-opengl-ext_stencil_wrap :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_subtexture :system-name
  cl-glfw-opengl-ext_subtexture :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture :system-name
  cl-glfw-opengl-ext_texture :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture3d :system-name
  cl-glfw-opengl-ext_texture3d :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_array
  :system-name cl-glfw-opengl-ext_texture_array :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_buffer_object
  :system-name cl-glfw-opengl-ext_texture_buffer_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_compression_latc
  :system-name cl-glfw-opengl-ext_texture_compression_latc :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_compression_rgtc
  :system-name cl-glfw-opengl-ext_texture_compression_rgtc :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_compression_s3tc
  :system-name cl-glfw-opengl-ext_texture_compression_s3tc :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_cube_map
  :system-name cl-glfw-opengl-ext_texture_cube_map :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_env_combine
  :system-name cl-glfw-opengl-ext_texture_env_combine :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_env_dot3
  :system-name cl-glfw-opengl-ext_texture_env_dot3 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-ext_texture_filter_anisotropic :system-name
  cl-glfw-opengl-ext_texture_filter_anisotropic :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_integer
  :system-name cl-glfw-opengl-ext_texture_integer :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_lod_bias
  :system-name cl-glfw-opengl-ext_texture_lod_bias :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_mirror_clamp
  :system-name cl-glfw-opengl-ext_texture_mirror_clamp :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_object
  :system-name cl-glfw-opengl-ext_texture_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_perturb_normal
  :system-name cl-glfw-opengl-ext_texture_perturb_normal :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_shared_exponent
  :system-name cl-glfw-opengl-ext_texture_shared_exponent :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_snorm
  :system-name cl-glfw-opengl-ext_texture_snorm :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_srgb :system-name
  cl-glfw-opengl-ext_texture_srgb :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_srgb_decode
  :system-name cl-glfw-opengl-ext_texture_srgb_decode :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_texture_swizzle
  :system-name cl-glfw-opengl-ext_texture_swizzle :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_timer_query :system-name
  cl-glfw-opengl-ext_timer_query :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_transform_feedback
  :system-name cl-glfw-opengl-ext_transform_feedback :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_vertex_array :system-name
  cl-glfw-opengl-ext_vertex_array :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_vertex_array_bgra
  :system-name cl-glfw-opengl-ext_vertex_array_bgra :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_vertex_attrib_64bit
  :system-name cl-glfw-opengl-ext_vertex_attrib_64bit :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_vertex_shader
  :system-name cl-glfw-opengl-ext_vertex_shader :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ext_vertex_weighting
  :system-name cl-glfw-opengl-ext_vertex_weighting :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-gremedy_frame_terminator
  :system-name cl-glfw-opengl-gremedy_frame_terminator :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-gremedy_string_marker
  :system-name cl-glfw-opengl-gremedy_string_marker :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-hp_convolution_border_modes
  :system-name cl-glfw-opengl-hp_convolution_border_modes :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-hp_image_transform
  :system-name cl-glfw-opengl-hp_image_transform :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-hp_occlusion_test
  :system-name cl-glfw-opengl-hp_occlusion_test :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-hp_texture_lighting
  :system-name cl-glfw-opengl-hp_texture_lighting :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ibm_cull_vertex :system-name
  cl-glfw-opengl-ibm_cull_vertex :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ibm_multimode_draw_arrays
  :system-name cl-glfw-opengl-ibm_multimode_draw_arrays :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ibm_rasterpos_clip
  :system-name cl-glfw-opengl-ibm_rasterpos_clip :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ibm_texture_mirrored_repeat
  :system-name cl-glfw-opengl-ibm_texture_mirrored_repeat :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ibm_vertex_array_lists
  :system-name cl-glfw-opengl-ibm_vertex_array_lists :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ingr_blend_func_separate
  :system-name cl-glfw-opengl-ingr_blend_func_separate :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ingr_color_clamp :system-name
  cl-glfw-opengl-ingr_color_clamp :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-ingr_interlace_read
  :system-name cl-glfw-opengl-ingr_interlace_read :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-intel_parallel_arrays
  :system-name cl-glfw-opengl-intel_parallel_arrays :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-mesa_pack_invert :system-name
  cl-glfw-opengl-mesa_pack_invert :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-mesa_packed_depth_stencil
  :system-name cl-glfw-opengl-mesa_packed_depth_stencil :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-mesa_program_debug
  :system-name cl-glfw-opengl-mesa_program_debug :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-mesa_resize_buffers
  :system-name cl-glfw-opengl-mesa_resize_buffers :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-mesa_shader_debug
  :system-name cl-glfw-opengl-mesa_shader_debug :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-mesa_trace :system-name
  cl-glfw-opengl-mesa_trace :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-mesa_window_pos :system-name
  cl-glfw-opengl-mesa_window_pos :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-mesa_ycbcr_texture
  :system-name cl-glfw-opengl-mesa_ycbcr_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-mesax_texture_stack
  :system-name cl-glfw-opengl-mesax_texture_stack :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_conditional_render
  :system-name cl-glfw-opengl-nv_conditional_render :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_copy_depth_to_color
  :system-name cl-glfw-opengl-nv_copy_depth_to_color :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_copy_image :system-name
  cl-glfw-opengl-nv_copy_image :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_depth_buffer_float
  :system-name cl-glfw-opengl-nv_depth_buffer_float :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_depth_clamp :system-name
  cl-glfw-opengl-nv_depth_clamp :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_evaluators :system-name
  cl-glfw-opengl-nv_evaluators :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_explicit_multisample
  :system-name cl-glfw-opengl-nv_explicit_multisample :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_fence :system-name
  cl-glfw-opengl-nv_fence :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_float_buffer :system-name
  cl-glfw-opengl-nv_float_buffer :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_fog_distance :system-name
  cl-glfw-opengl-nv_fog_distance :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_fragment_program
  :system-name cl-glfw-opengl-nv_fragment_program :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_fragment_program2
  :system-name cl-glfw-opengl-nv_fragment_program2 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-nv_framebuffer_multisample_coverage :system-name
  cl-glfw-opengl-nv_framebuffer_multisample_coverage :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_geometry_program4
  :system-name cl-glfw-opengl-nv_geometry_program4 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_gpu_program4 :system-name
  cl-glfw-opengl-nv_gpu_program4 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_gpu_program5 :system-name
  cl-glfw-opengl-nv_gpu_program5 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_gpu_shader5 :system-name
  cl-glfw-opengl-nv_gpu_shader5 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_half_float :system-name
  cl-glfw-opengl-nv_half_float :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_light_max_exponent
  :system-name cl-glfw-opengl-nv_light_max_exponent :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_multisample_coverage
  :system-name cl-glfw-opengl-nv_multisample_coverage :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_multisample_filter_hint
  :system-name cl-glfw-opengl-nv_multisample_filter_hint :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_occlusion_query
  :system-name cl-glfw-opengl-nv_occlusion_query :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_packed_depth_stencil
  :system-name cl-glfw-opengl-nv_packed_depth_stencil :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_parameter_buffer_object
  :system-name cl-glfw-opengl-nv_parameter_buffer_object :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_pixel_data_range
  :system-name cl-glfw-opengl-nv_pixel_data_range :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_point_sprite :system-name
  cl-glfw-opengl-nv_point_sprite :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_present_video :system-name
  cl-glfw-opengl-nv_present_video :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_primitive_restart
  :system-name cl-glfw-opengl-nv_primitive_restart :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_register_combiners
  :system-name cl-glfw-opengl-nv_register_combiners :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_register_combiners2
  :system-name cl-glfw-opengl-nv_register_combiners2 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_shader_buffer_load
  :system-name cl-glfw-opengl-nv_shader_buffer_load :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_shader_buffer_store
  :system-name cl-glfw-opengl-nv_shader_buffer_store :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_tessellation_program5
  :system-name cl-glfw-opengl-nv_tessellation_program5 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texgen_emboss :system-name
  cl-glfw-opengl-nv_texgen_emboss :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texgen_reflection
  :system-name cl-glfw-opengl-nv_texgen_reflection :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texture_barrier
  :system-name cl-glfw-opengl-nv_texture_barrier :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texture_env_combine4
  :system-name cl-glfw-opengl-nv_texture_env_combine4 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texture_expand_normal
  :system-name cl-glfw-opengl-nv_texture_expand_normal :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texture_multisample
  :system-name cl-glfw-opengl-nv_texture_multisample :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texture_rectangle
  :system-name cl-glfw-opengl-nv_texture_rectangle :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texture_shader
  :system-name cl-glfw-opengl-nv_texture_shader :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texture_shader2
  :system-name cl-glfw-opengl-nv_texture_shader2 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_texture_shader3
  :system-name cl-glfw-opengl-nv_texture_shader3 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_transform_feedback
  :system-name cl-glfw-opengl-nv_transform_feedback :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_transform_feedback2
  :system-name cl-glfw-opengl-nv_transform_feedback2 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_vertex_array_range
  :system-name cl-glfw-opengl-nv_vertex_array_range :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_vertex_array_range2
  :system-name cl-glfw-opengl-nv_vertex_array_range2 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-nv_vertex_attrib_integer_64bit :system-name
  cl-glfw-opengl-nv_vertex_attrib_integer_64bit :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file
  cl-glfw-opengl-nv_vertex_buffer_unified_memory :system-name
  cl-glfw-opengl-nv_vertex_buffer_unified_memory :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_vertex_program
  :system-name cl-glfw-opengl-nv_vertex_program :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_vertex_program2_option
  :system-name cl-glfw-opengl-nv_vertex_program2_option :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_vertex_program3
  :system-name cl-glfw-opengl-nv_vertex_program3 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-nv_vertex_program4
  :system-name cl-glfw-opengl-nv_vertex_program4 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-oes_read_format :system-name
  cl-glfw-opengl-oes_read_format :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-oml_interlace :system-name
  cl-glfw-opengl-oml_interlace :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-oml_resample :system-name
  cl-glfw-opengl-oml_resample :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-oml_subsample :system-name
  cl-glfw-opengl-oml_subsample :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-pgi_misc_hints :system-name
  cl-glfw-opengl-pgi_misc_hints :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-pgi_vertex_hints :system-name
  cl-glfw-opengl-pgi_vertex_hints :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-rend_screen_coordinates
  :system-name cl-glfw-opengl-rend_screen_coordinates :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-s3_s3tc :system-name
  cl-glfw-opengl-s3_s3tc :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgi_color_table :system-name
  cl-glfw-opengl-sgi_color_table :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgi_depth_pass_instrument
  :system-name cl-glfw-opengl-sgi_depth_pass_instrument :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_detail_texture
  :system-name cl-glfw-opengl-sgis_detail_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_fog_function
  :system-name cl-glfw-opengl-sgis_fog_function :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_multisample :system-name
  cl-glfw-opengl-sgis_multisample :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_pixel_texture
  :system-name cl-glfw-opengl-sgis_pixel_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_point_parameters
  :system-name cl-glfw-opengl-sgis_point_parameters :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_sharpen_texture
  :system-name cl-glfw-opengl-sgis_sharpen_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_texture4d :system-name
  cl-glfw-opengl-sgis_texture4d :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_texture_color_mask
  :system-name cl-glfw-opengl-sgis_texture_color_mask :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_texture_filter4
  :system-name cl-glfw-opengl-sgis_texture_filter4 :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgis_texture_select
  :system-name cl-glfw-opengl-sgis_texture_select :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_async :system-name
  cl-glfw-opengl-sgix_async :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_depth_texture
  :system-name cl-glfw-opengl-sgix_depth_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_flush_raster
  :system-name cl-glfw-opengl-sgix_flush_raster :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_fog_scale :system-name
  cl-glfw-opengl-sgix_fog_scale :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_fragment_lighting
  :system-name cl-glfw-opengl-sgix_fragment_lighting :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_framezoom :system-name
  cl-glfw-opengl-sgix_framezoom :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_igloo_interface
  :system-name cl-glfw-opengl-sgix_igloo_interface :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_instruments :system-name
  cl-glfw-opengl-sgix_instruments :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_line_quality_hint
  :system-name cl-glfw-opengl-sgix_line_quality_hint :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_list_priority
  :system-name cl-glfw-opengl-sgix_list_priority :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_pixel_texture
  :system-name cl-glfw-opengl-sgix_pixel_texture :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_polynomial_ffd
  :system-name cl-glfw-opengl-sgix_polynomial_ffd :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_reference_plane
  :system-name cl-glfw-opengl-sgix_reference_plane :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_resample :system-name
  cl-glfw-opengl-sgix_resample :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_scalebias_hint
  :system-name cl-glfw-opengl-sgix_scalebias_hint :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_shadow :system-name
  cl-glfw-opengl-sgix_shadow :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_shadow_ambient
  :system-name cl-glfw-opengl-sgix_shadow_ambient :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_slim :system-name
  cl-glfw-opengl-sgix_slim :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_sprite :system-name
  cl-glfw-opengl-sgix_sprite :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_tag_sample_buffer
  :system-name cl-glfw-opengl-sgix_tag_sample_buffer :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_texture_coordinate_clamp
  :system-name cl-glfw-opengl-sgix_texture_coordinate_clamp :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_texture_lod_bias
  :system-name cl-glfw-opengl-sgix_texture_lod_bias :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_texture_multi_buffer
  :system-name cl-glfw-opengl-sgix_texture_multi_buffer :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sgix_ycrcba :system-name
  cl-glfw-opengl-sgix_ycrcba :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sun_convolution_border_modes
  :system-name cl-glfw-opengl-sun_convolution_border_modes :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sun_global_alpha :system-name
  cl-glfw-opengl-sun_global_alpha :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sun_mesh_array :system-name
  cl-glfw-opengl-sun_mesh_array :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sun_slice_accum :system-name
  cl-glfw-opengl-sun_slice_accum :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sun_triangle_list
  :system-name cl-glfw-opengl-sun_triangle_list :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sun_vertex :system-name
  cl-glfw-opengl-sun_vertex :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-sunx_constant_data
  :system-name cl-glfw-opengl-sunx_constant_data :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-version_1_0 :system-name
  cl-glfw-opengl-version_1_0 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-version_1_1 :system-name
  cl-glfw-opengl-version_1_1 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-version_1_2 :system-name
  cl-glfw-opengl-version_1_2 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-version_1_3 :system-name
  cl-glfw-opengl-version_1_3 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-version_1_4 :system-name
  cl-glfw-opengl-version_1_4 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-version_1_5 :system-name
  cl-glfw-opengl-version_1_5 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-version_2_0 :system-name
  cl-glfw-opengl-version_2_0 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-version_2_1 :system-name
  cl-glfw-opengl-version_2_1 :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-win_phong_shading
  :system-name cl-glfw-opengl-win_phong_shading :dependencies
  (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-opengl-win_specular_fog :system-name
  cl-glfw-opengl-win_specular_fog :dependencies (cl-glfw-opengl-core) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw :system-file cl-glfw-types :system-name cl-glfw-types
  :dependencies (cffi) :source
  (("git" "https://github.com/jimrthy/cl-glfw.git")))
 (:ql-project cl-glfw3 :system-file cl-glfw3 :system-name cl-glfw3
  :dependencies (alexandria asdf cffi) :source
  (("git" "https://github.com/AlexCharlton/cl-glfw3.git")))
 (:ql-project cl-glfw3 :system-file cl-glfw3-examples :system-name
  cl-glfw3-examples :dependencies (asdf cl-glfw3 cl-opengl trivial-main-thread)
  :source (("git" "https://github.com/AlexCharlton/cl-glfw3.git")))
 (:ql-project cl-glib :system-file cl-gio :system-name cl-gio :dependencies
  (asdf cl-gobject-introspection-wrapper) :source
  (("git" "https://github.com/bohonghuang/cl-glib.git")))
 (:ql-project cl-glib :system-file cl-glib :system-name cl-glib :dependencies
  (asdf bordeaux-threads cl-gobject-introspection-wrapper) :source
  (("git" "https://github.com/bohonghuang/cl-glib.git")))
 (:ql-project cl-glib :system-file cl-gobject :system-name cl-gobject
  :dependencies (asdf cl-gobject-introspection-wrapper) :source
  (("git" "https://github.com/bohonghuang/cl-glib.git")))
 (:ql-project cl-gltf :system-file cl-gltf :system-name cl-gltf :dependencies
  (asdf cffi com.inuoe.jzon documentation-utils mmap nibbles qbase64
   static-vectors trivial-extensible-sequences)
  :source (("git" "https://github.com/shirakumo/cl-gltf.git")))
 (:ql-project cl-gobject-introspection :system-file cl-gobject-introspection
  :system-name cl-gobject-introspection :dependencies
  (alexandria asdf cffi iterate trivial-garbage) :source
  (("git" "https://github.com/andy128k/cl-gobject-introspection.git")))
 (:ql-project cl-gobject-introspection :system-file
  cl-gobject-introspection-test :system-name cl-gobject-introspection-test
  :dependencies (asdf cl-gobject-introspection fiveam iterate) :source
  (("git" "https://github.com/andy128k/cl-gobject-introspection.git")))
 (:ql-project cl-gobject-introspection-wrapper :system-file
  cl-gobject-introspection-wrapper :system-name
  cl-gobject-introspection-wrapper :dependencies
  (alexandria asdf cl-gobject-introspection cl-ppcre) :source
  (("git"
    "https://github.com/bohonghuang/cl-gobject-introspection-wrapper.git")))
 (:ql-project cl-gopher :system-file cl-gopher :system-name cl-gopher
  :dependencies (asdf bordeaux-threads drakma flexi-streams quri usocket)
  :source (("git" "https://github.com/knusbaum/cl-gopher.git")))
 (:ql-project cl-gpio :system-file cl-gpio :system-name cl-gpio :dependencies
  (asdf cffi documentation-utils) :source
  (("git" "https://github.com/Shinmera/cl-gpio.git")))
 (:ql-project cl-graph :system-file cl-graph :system-name cl-graph
  :dependencies
  (asdf asdf-system-connections cl-containers metabang-bind metatilities-base)
  :source (("git" "https://github.com/gwkkwg/cl-graph") nil))
 (:ql-project cl-graph :system-file cl-graph+hu.dwim.graphviz :system-name
  cl-graph+hu.dwim.graphviz :dependencies (asdf cl-graph hu.dwim.graphviz)
  :source (("git" "https://github.com/gwkkwg/cl-graph") nil))
 (:ql-project cl-graph :system-file cl-graph :system-name
  cl-graph/with-cl-mathstats :dependencies (cl-graph cl-mathstats) :source
  (("git" "https://github.com/gwkkwg/cl-graph") nil))
 (:ql-project cl-graph :system-file cl-graph :system-name
  cl-graph/with-dynamic-classes :dependencies (cl-graph dynamic-classes)
  :source (("git" "https://github.com/gwkkwg/cl-graph") nil))
 (:ql-project cl-graph :system-file cl-graph :system-name
  cl-graph/with-metacopy :dependencies (cl-graph metacopy) :source
  (("git" "https://github.com/gwkkwg/cl-graph") nil))
 (:ql-project cl-graph :system-file cl-graph :system-name
  cl-graph/with-moptilities :dependencies (cl-graph moptilities) :source
  (("git" "https://github.com/gwkkwg/cl-graph") nil))
 (:ql-project cl-gravatar :system-file gravatar :system-name gravatar
  :dependencies (babel cl-json drakma md5 puri) :source
  (("git" "https://github.com/sellout/cl-gravatar.git")))
 (:ql-project cl-graylog :system-file graylog :system-name graylog
  :dependencies
  (asdf babel cl-json local-time salza2 trivial-backtrace usocket) :source
  (("git" "https://github.com/mmontone/cl-graylog.git")))
 (:ql-project cl-graylog :system-file graylog-log5 :system-name graylog-log5
  :dependencies (asdf graylog log5) :source
  (("git" "https://github.com/mmontone/cl-graylog.git")))
 (:ql-project cl-grip :system-file cl-grip :system-name cl-grip :dependencies
  (asdf cl-strings local-time trivial-types) :source
  (("git" "https://github.com/tychoish/cl-grip.git")))
 (:ql-project cl-grnm :system-file cl-grnm :system-name cl-grnm :dependencies
  (asdf) :source (("git" "https://github.com/rigetticomputing/cl-grnm.git")))
 (:ql-project cl-groupby :system-file groupby :system-name groupby
  :dependencies nil :source (("git" "https://github.com/wlbr/cl-groupby.git")))
 (:ql-project cl-growl :system-file cl-growl :system-name cl-growl
  :dependencies (flexi-streams ironclad trivial-utf-8 usocket) :source
  (("git" "https://github.com/nklein/cl-growl.git")))
 (:ql-project cl-gserver :system-file sento :system-name sento :dependencies
  (alexandria asdf atomics binding-arrows blackbird bordeaux-threads jpl-queues
   log4cl str timer-wheel)
  :source (("git" "https://github.com/mdbergmann/cl-gserver.git")))
 (:ql-project cl-gserver :system-file sento :system-name sento/high-speed-queue
  :dependencies (lparallel sento) :source
  (("git" "https://github.com/mdbergmann/cl-gserver.git")))
 (:ql-project cl-gserver :system-file sento :system-name
  sento/high-speed-queue-tests :dependencies (cl-mock fiveam lparallel sento)
  :source (("git" "https://github.com/mdbergmann/cl-gserver.git")))
 (:ql-project cl-gserver :system-file sento :system-name sento/tests
  :dependencies (cl-mock fiveam lparallel sento) :source
  (("git" "https://github.com/mdbergmann/cl-gserver.git")))
 (:ql-project cl-gss :system-file cl-gss :system-name cl-gss :dependencies
  (asdf cffi cffi-grovel trivial-garbage trivial-utf-8) :source
  (("git" "https://github.com/lokedhs/cl-gss.git")))
 (:ql-project cl-gtk2 :system-file cl-gtk2-gdk :system-name cl-gtk2-gdk
  :dependencies (asdf cffi cl-gtk2-glib cl-gtk2-pango) :source
  (("git" "https://github.com/dmitryvk/cl-gtk2.git")))
 (:ql-project cl-gtk2 :system-file cl-gtk2-glib :system-name cl-gtk2-glib
  :dependencies (asdf bordeaux-threads cffi closer-mop iterate trivial-garbage)
  :source (("git" "https://github.com/dmitryvk/cl-gtk2.git")))
 (:ql-project cl-gtk2 :system-file cl-gtk2-pango :system-name cl-gtk2-pango
  :dependencies (asdf cl-gtk2-glib iterate) :source
  (("git" "https://github.com/dmitryvk/cl-gtk2.git")))
 (:ql-project cl-hamcrest :system-file hamcrest :system-name hamcrest
  :dependencies
  (40ants-asdf-system alexandria asdf cl-ppcre iterate split-sequence) :source
  (("git" "https://github.com/40ants/cl-hamcrest.git")))
 (:ql-project cl-hamcrest :system-file hamcrest-tests :system-name
  hamcrest-tests :dependencies (alexandria asdf cl-ppcre prove rove) :source
  (("git" "https://github.com/40ants/cl-hamcrest.git")))
 (:ql-project cl-haml :system-file cl-haml :system-name cl-haml :dependencies
  (asdf cl-who) :source (("git" "https://github.com/Unspeakable/cl-haml.git")))
 (:ql-project cl-haml :system-file cl-haml :system-name cl-haml-test
  :dependencies (cl-haml cl-test-more) :source
  (("git" "https://github.com/Unspeakable/cl-haml.git")))
 (:ql-project cl-hamt :system-file cl-hamt :system-name cl-hamt :dependencies
  (asdf cl-murmurhash) :source
  (("git" "https://github.com/danshapero/cl-hamt.git")))
 (:ql-project cl-hamt :system-file cl-hamt-examples :system-name
  cl-hamt-examples :dependencies (asdf cl-hamt cl-ppcre drakma) :source
  (("git" "https://github.com/danshapero/cl-hamt.git")))
 (:ql-project cl-hamt :system-file cl-hamt-test :system-name cl-hamt-test
  :dependencies (asdf cl-hamt fiveam) :source
  (("git" "https://github.com/danshapero/cl-hamt.git")))
 (:ql-project cl-hash-table-destructuring :system-file
  cl-hash-table-destructuring :system-name cl-hash-table-destructuring
  :dependencies (prove-asdf) :source
  (("git"
    "https://github.com/andrey-tikhonov/cl-hash-table-destructuring.git")))
 (:ql-project cl-hash-table-destructuring :system-file
  cl-hash-table-destructuring :system-name cl-hash-table-destructuring-test
  :dependencies (cl-hash-table-destructuring prove prove-asdf) :source
  (("git"
    "https://github.com/andrey-tikhonov/cl-hash-table-destructuring.git")))
 (:ql-project cl-hash-util :system-file cl-hash-util :system-name cl-hash-util
  :dependencies (asdf) :source
  (("git" "https://github.com/orthecreedence/cl-hash-util.git")))
 (:ql-project cl-hash-util :system-file cl-hash-util-test :system-name
  cl-hash-util-test :dependencies (asdf cl-hash-util fiveam) :source
  (("git" "https://github.com/orthecreedence/cl-hash-util.git")))
 (:ql-project cl-heap :system-file cl-heap :system-name cl-heap :dependencies
  nil :source
  (("https"
    "https://common-lisp.net/project/cl-heap/releases/cl-heap_latest.tar.gz")))
 (:ql-project cl-heap :system-file cl-heap-tests :system-name cl-heap-tests
  :dependencies (cl-heap xlunit) :source
  (("https"
    "https://common-lisp.net/project/cl-heap/releases/cl-heap_latest.tar.gz")))
 (:ql-project cl-heredoc :system-file cl-heredoc :system-name cl-heredoc
  :dependencies (asdf) :source
  (("git" "https://github.com/e-user/cl-heredoc.git")))
 (:ql-project cl-heredoc :system-file cl-heredoc-test :system-name
  cl-heredoc-test :dependencies (asdf cl-heredoc stefil) :source
  (("git" "https://github.com/e-user/cl-heredoc.git")))
 (:ql-project cl-html-diff :system-file cl-html-diff :system-name cl-html-diff
  :dependencies (cl-difflib) :source
  (("git" "https://github.com/wiseman/cl-html-diff.git")))
 (:ql-project cl-html-parse :system-file cl-html-parse :system-name
  cl-html-parse :dependencies (asdf) :source
  (("git" "https://github.com/gwkkwg/cl-html-parse.git") nil))
 (:ql-project cl-html-readme :system-file cl-html-readme :system-name
  cl-html-readme :dependencies (asdf) :source
  (("branched-git" "https://github.com/Frechmatz/cl-html-readme.git"
    "quicklisp-current-release")))
 (:ql-project cl-html-readme :system-file cl-html-readme :system-name
  cl-html-readme/doc :dependencies (docparser) :source
  (("branched-git" "https://github.com/Frechmatz/cl-html-readme.git"
    "quicklisp-current-release")))
 (:ql-project cl-html-readme :system-file cl-html-readme :system-name
  cl-html-readme/test :dependencies (lisp-unit) :source
  (("branched-git" "https://github.com/Frechmatz/cl-html-readme.git"
    "quicklisp-current-release")))
 (:ql-project cl-html5-parser :system-file cl-html5-parser :system-name
  cl-html5-parser :dependencies (asdf cl-ppcre flexi-streams string-case)
  :source (("git" "https://github.com/rotatef/cl-html5-parser.git")))
 (:ql-project cl-html5-parser :system-file cl-html5-parser-cxml :system-name
  cl-html5-parser-cxml :dependencies (asdf cl-html5-parser cxml) :source
  (("git" "https://github.com/rotatef/cl-html5-parser.git")))
 (:ql-project cl-html5-parser :system-file cl-html5-parser-tests :system-name
  cl-html5-parser-tests :dependencies
  (asdf cl-html5-parser json-streams split-sequence stefil) :source
  (("git" "https://github.com/rotatef/cl-html5-parser.git")))
 (:ql-project cl-htmlprag :system-file cl-htmlprag :system-name cl-htmlprag
  :dependencies (alexandria optima parse-number) :source
  (("git" "https://github.com/heegaiximephoomeeghahyaiseekh/cl-htmlprag.git")))
 (:ql-project cl-httpsqs :system-file cl-httpsqs :system-name cl-httpsqs
  :dependencies (asdf drakma) :source
  (("git" "https://github.com/Liutos/cl-httpsqs.git")))
 (:ql-project cl-hue :system-file cl-hue :system-name cl-hue :dependencies
  (alexandria drakma yason) :source
  (("git" "https://github.com/jd/cl-hue.git")))
 (:ql-project cl-i18n :system-file cl-i18n :system-name cl-i18n :dependencies
  (alexandria asdf babel cl-ppcre-unicode) :source
  (("git" "https://notabug.org/cage/cl-i18n.git")))
 (:ql-project cl-iconv :system-file iconv :system-name iconv :dependencies
  (cffi cffi-grovel) :source (("git" "https://github.com/quek/cl-iconv.git")))
 (:ql-project cl-id3 :system-file cl-id3 :system-name cl-id3 :dependencies
  (asdf) :source (("git" "https://github.com/oyvinht/cl-id3.git")))
 (:ql-project cl-incognia :system-file cl-incognia :system-name cl-incognia
  :dependencies (asdf dexador jonathan) :source
  (("git" "https://github.com/inloco/cl-incognia.git")))
 (:ql-project cl-incognia :system-file cl-incognia :system-name
  cl-incognia/tests :dependencies (cl-incognia rove) :source
  (("git" "https://github.com/inloco/cl-incognia.git")))
 (:ql-project cl-indentify :system-file cl-indentify :system-name cl-indentify
  :dependencies (alexandria asdf trivial-gray-streams uiop) :source
  (("git" "https://github.com/yitzchak/cl-indentify.git")))
 (:ql-project cl-indentify :system-file cl-indentify :system-name
  cl-indentify/cli :dependencies (cl-indentify command-line-arguments) :source
  (("git" "https://github.com/yitzchak/cl-indentify.git")))
 (:ql-project cl-indentify :system-file cl-indentify :system-name
  cl-indentify/tests :dependencies (cl-indentify rove trivial-escapes) :source
  (("git" "https://github.com/yitzchak/cl-indentify.git")))
 (:ql-project cl-inflector :system-file cl-inflector :system-name cl-inflector
  :dependencies (alexandria cl-ppcre) :source
  (("git" "https://github.com/AccelerationNet/cl-inflector.git")))
 (:ql-project cl-inflector :system-file cl-inflector :system-name
  cl-inflector-test :dependencies (cl-inflector lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/cl-inflector.git")))
 (:ql-project cl-influxdb :system-file cl-influxdb :system-name cl-influxdb
  :dependencies
  (asdf cl-annot cl-json do-urlencode drakma flexi-streams usocket) :source
  (("git" "https://github.com/mmaul/cl-influxdb.git")))
 (:ql-project cl-info :system-file cl-info :system-name cl-info :dependencies
  (40ants-doc asdf docs-config) :source
  (("git" "https://github.com/40ants/cl-info.git")))
 (:ql-project cl-info :system-file cl-info-test :system-name cl-info-test
  :dependencies (asdf cl-info hamcrest rove) :source
  (("git" "https://github.com/40ants/cl-info.git")))
 (:ql-project cl-ini :system-file cl-ini :system-name cl-ini :dependencies
  (asdf str) :source (("git" "https://github.com/compufox/cl-ini.git")))
 (:ql-project cl-ini :system-file cl-ini-test :system-name cl-ini-test
  :dependencies (asdf cl-ini prove) :source
  (("git" "https://github.com/compufox/cl-ini.git")))
 (:ql-project cl-inotify :system-file cl-inotify :system-name cl-inotify
  :dependencies
  (asdf binary-types cffi cffi-grovel iolib iolib.asdf iolib.base iolib.conf
   osicat trivial-utf-8)
  :source (("git" "https://github.com/Ferada/cl-inotify.git")))
 (:ql-project cl-inotify :system-file cl-inotify-tests :system-name
  cl-inotify-tests :dependencies (asdf cl-inotify fiveam) :source
  (("git" "https://github.com/Ferada/cl-inotify.git")))
 (:ql-project cl-intbytes :system-file cl-intbytes :system-name cl-intbytes
  :dependencies (fast-io) :source
  (("git" "https://github.com/EuAndreh/cl-intbytes.git")))
 (:ql-project cl-intbytes :system-file cl-intbytes-test :system-name
  cl-intbytes-test :dependencies (cl-intbytes prove prove-asdf) :source
  (("git" "https://github.com/EuAndreh/cl-intbytes.git")))
 (:ql-project cl-interpol :system-file cl-interpol :system-name cl-interpol
  :dependencies (asdf cl-unicode named-readtables) :source
  (("ediware-http" "cl-interpol")))
 (:ql-project cl-interpol :system-file cl-interpol :system-name
  cl-interpol/test :dependencies (cl-interpol flexi-streams) :source
  (("ediware-http" "cl-interpol")))
 (:ql-project cl-interval :system-file cl-interval :system-name cl-interval
  :dependencies (asdf) :source
  (("git" "https://github.com/rpav/cl-interval.git")))
 (:ql-project cl-interval :system-file cl-interval-docs :system-name
  cl-interval-docs :dependencies (asdf cl-gendoc cl-interval) :source
  (("git" "https://github.com/rpav/cl-interval.git")))
 (:ql-project cl-ipfs-api2 :system-file cl-ipfs-api2 :system-name cl-ipfs-api2
  :dependencies (arnesi asdf drakma uiop yason) :source
  (("git" "https://github.com/JadedCtrl/cl-ipfs-api2.git")))
 (:ql-project cl-irc :system-file cl-irc :system-name cl-irc :dependencies
  (flexi-streams split-sequence usocket) :source
  (("https"
    "https://common-lisp.net/project/cl-irc/releases/cl-irc_latest.tar.gz")))
 (:ql-project cl-irc :system-file cl-irc-test :system-name cl-irc-test
  :dependencies (cl-irc rt split-sequence) :source
  (("https"
    "https://common-lisp.net/project/cl-irc/releases/cl-irc_latest.tar.gz")))
 (:ql-project cl-irregsexp :system-file cl-irregsexp :system-name cl-irregsexp
  :dependencies (alexandria) :source
  (("git" "https://gitlab.common-lisp.net/cl-irregsexp/cl-irregsexp.git")))
 (:ql-project cl-isaac :system-file cl-isaac :system-name cl-isaac
  :dependencies (asdf) :source
  (("git" "https://github.com/thephoeron/cl-isaac.git")))
 (:ql-project cl-isaac :system-file cl-isaac :system-name cl-isaac/test
  :dependencies (cl-isaac parachute trivial-features) :source
  (("git" "https://github.com/thephoeron/cl-isaac.git")))
 (:ql-project cl-isolated :system-file isolated :system-name isolated
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/kanru/cl-isolated.git")))
 (:ql-project cl-iterative :system-file cl-iterative :system-name cl-iterative
  :dependencies (alexandria optima) :source
  (("git" "https://github.com/mobius-eng/cl-iterative.git")))
 (:ql-project cl-iterative :system-file cl-iterative-tests :system-name
  cl-iterative-tests :dependencies (cl-iterative fiveam) :source
  (("git" "https://github.com/mobius-eng/cl-iterative.git")))
 (:ql-project cl-itertools :system-file cl-itertools :system-name cl-itertools
  :dependencies (alexandria cl-coroutine iterate) :source
  (("git" "https://github.com/mabragor/cl-itertools.git")))
 (:ql-project cl-itertools :system-file cl-itertools :system-name
  cl-itertools-tests :dependencies (cl-itertools fiveam iterate) :source
  (("git" "https://github.com/mabragor/cl-itertools.git")))
 (:ql-project cl-ixf :system-file ixf :system-name ixf :dependencies
  (alexandria asdf babel cl-ppcre ieee-floats local-time md5 split-sequence)
  :source (("git" "https://github.com/dimitri/cl-ixf.git")))
 (:ql-project cl-jingle :system-file jingle :system-name jingle :dependencies
  (asdf cl-reexport clack find-port jonathan lack lack-app-directory
   lack-middleware-mount lack-middleware-static local-time myway ningle quri
   str)
  :source (("git" "https://github.com/dnaeon/cl-jingle.git")))
 (:ql-project cl-jingle :system-file jingle.demo :system-name jingle.demo
  :dependencies
  (asdf babel cl-ascii-table clack-handler-hunchentoot clingon dexador jingle
   jonathan lack-middleware-accesslog local-time quri)
  :source (("git" "https://github.com/dnaeon/cl-jingle.git")))
 (:ql-project cl-jingle :system-file jingle.demo.test :system-name
  jingle.demo.test :dependencies (asdf jingle.demo rove) :source
  (("git" "https://github.com/dnaeon/cl-jingle.git")))
 (:ql-project cl-jingle :system-file jingle.test :system-name jingle.test
  :dependencies (asdf jingle rove) :source
  (("git" "https://github.com/dnaeon/cl-jingle.git")))
 (:ql-project cl-jpeg :system-file cl-jpeg :system-name cl-jpeg :dependencies
  (asdf) :source (("git" "https://github.com/sharplispers/cl-jpeg.git")))
 (:ql-project cl-jpl-util :system-file jpl-util :system-name jpl-util
  :dependencies nil :source
  (("git" "https://github.com/hawkir/cl-jpl-util.git")))
 (:ql-project cl-jschema :system-file cl-jschema :system-name cl-jschema
  :dependencies (alexandria asdf cl-ppcre com.inuoe.jzon puri) :source
  (("latest-github-release" "https://github.com/MauDagos/cl-jschema.git")))
 (:ql-project cl-jschema :system-file cl-jschema :system-name cl-jschema/tests
  :dependencies (cl-jschema fiveam) :source
  (("latest-github-release" "https://github.com/MauDagos/cl-jschema.git")))
 (:ql-project cl-json :system-file cl-json :system-name cl-json :dependencies
  (asdf) :source (("git" "https://github.com/sharplispers/cl-json.git")))
 (:ql-project cl-json :system-file cl-json :system-name cl-json/test
  :dependencies (cl-json fiveam) :source
  (("git" "https://github.com/sharplispers/cl-json.git")))
 (:ql-project cl-json-helper :system-file cl-json-helper :system-name
  cl-json-helper :dependencies (asdf cl-json) :source
  (("git" "https://github.com/stablecross/cl-json-helper.git")))
 (:ql-project cl-json-pointer :system-file cl-json-pointer :system-name
  cl-json-pointer :dependencies (alexandria asdf closer-mop st-json) :source
  (("git" "https://github.com/y2q-actionman/cl-json-pointer.git")))
 (:ql-project cl-json-pointer :system-file cl-json-pointer :system-name
  cl-json-pointer/core :dependencies (alexandria closer-mop) :source
  (("git" "https://github.com/y2q-actionman/cl-json-pointer.git")))
 (:ql-project cl-json-pointer :system-file cl-json-pointer :system-name
  cl-json-pointer/st-json-support :dependencies (alexandria closer-mop st-json)
  :source (("git" "https://github.com/y2q-actionman/cl-json-pointer.git")))
 (:ql-project cl-json-pointer :system-file cl-json-pointer :system-name
  cl-json-pointer/synonyms :dependencies (cl-json-pointer) :source
  (("git" "https://github.com/y2q-actionman/cl-json-pointer.git")))
 (:ql-project cl-json-schema :system-file cl-json-schema :system-name
  cl-json-schema :dependencies (alexandria asdf cl-ppcre trivial-do yason)
  :source (("git" "https://github.com/notmgsk/cl-json-schema.git")))
 (:ql-project cl-json-schema :system-file cl-json-schema-tests :system-name
  cl-json-schema-tests :dependencies (asdf cl-json-schema cl-ppcre fiasco)
  :source (("git" "https://github.com/notmgsk/cl-json-schema.git")))
 (:ql-project cl-jsonl :system-file cl-jsonl :system-name cl-jsonl
  :dependencies (asdf gtwiwtg yason) :source
  (("git" "https://github.com/plandes/cl-jsonl.git")))
 (:ql-project cl-jsonl :system-file cl-jsonl :system-name cl-jsonl/tests
  :dependencies (access arrows cl-jsonl fiveam) :source
  (("git" "https://github.com/plandes/cl-jsonl.git")))
 (:ql-project cl-jsx :system-file cl-jsx :system-name cl-jsx :dependencies
  (cl-who esrap named-readtables) :source
  (("git" "https://github.com/mmontone/cl-jsx.git")))
 (:ql-project cl-jsx :system-file cl-jsx-test :system-name cl-jsx-test
  :dependencies (cl-jsx prove prove-asdf) :source
  (("git" "https://github.com/mmontone/cl-jsx.git")))
 (:ql-project cl-junit-xml :system-file cl-junit-xml :system-name cl-junit-xml
  :dependencies (alexandria cxml iterate) :source
  (("git" "https://github.com/AccelerationNet/cl-junit-xml.git")))
 (:ql-project cl-junit-xml :system-file cl-junit-xml.lisp-unit :system-name
  cl-junit-xml.lisp-unit :dependencies
  (alexandria cl-junit-xml cl-ppcre iterate lisp-unit) :source
  (("git" "https://github.com/AccelerationNet/cl-junit-xml.git")))
 (:ql-project cl-junit-xml :system-file cl-junit-xml.lisp-unit2 :system-name
  cl-junit-xml.lisp-unit2 :dependencies
  (alexandria cl-junit-xml cl-ppcre iterate lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/cl-junit-xml.git")))
 (:ql-project cl-junit-xml :system-file cl-junit-xml :system-name
  cl-junit-xml.test :dependencies (cl-junit-xml lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/cl-junit-xml.git")))
 (:ql-project cl-just-getopt-parser :system-file just-getopt-parser
  :system-name just-getopt-parser :dependencies (asdf) :source
  (("git" "https://github.com/tlikonen/cl-just-getopt-parser.git")))
 (:ql-project cl-jwk :system-file cl-jwk :system-name cl-jwk :dependencies
  (alexandria asdf binascii cl-reexport dexador ironclad jonathan jose) :source
  (("git" "https://github.com/dnaeon/cl-jwk.git")))
 (:ql-project cl-jwk :system-file cl-jwk.test :system-name cl-jwk.test
  :dependencies (asdf cl-jwk rove) :source
  (("git" "https://github.com/dnaeon/cl-jwk.git")))
 (:ql-project cl-k8055 :system-file cl-k8055 :system-name cl-k8055
  :dependencies (asdf cffi cl-ppcre documentation-utils trivial-features)
  :source (("git" "https://github.com/Shinmera/cl-k8055.git")))
 (:ql-project cl-kanren :system-file cl-kanren :system-name cl-kanren
  :dependencies (alexandria asdf) :source
  (("git" "https://notabug.org/cage/cl-kanren.git")))
 (:ql-project cl-kanren :system-file cl-kanren-test :system-name cl-kanren-test
  :dependencies (alexandria asdf cl-kanren clunit) :source
  (("git" "https://notabug.org/cage/cl-kanren.git")))
 (:ql-project cl-kanren-trs :system-file kanren-trs :system-name kanren-trs
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/cl-kanren-trs/cl-kanren-trs.git")
   nil))
 (:ql-project cl-kanren-trs :system-file kanren-trs-test :system-name
  kanren-trs-test :dependencies (kanren-trs) :source
  (("git" "https://gitlab.common-lisp.net/cl-kanren-trs/cl-kanren-trs.git")
   nil))
 (:ql-project cl-kaputt :system-file kaputt :system-name kaputt :dependencies
  (alexandria asdf) :source
  (("git" "https://github.com/michipili/cl-kaputt.git")))
 (:ql-project cl-kaputt :system-file kaputt :system-name kaputt/example
  :dependencies (kaputt) :source
  (("git" "https://github.com/michipili/cl-kaputt.git")))
 (:ql-project cl-kaputt :system-file kaputt :system-name kaputt/testsuite
  :dependencies (kaputt) :source
  (("git" "https://github.com/michipili/cl-kaputt.git")))
 (:ql-project cl-keycloak :system-file cl-keycloak :system-name cl-keycloak
  :dependencies (asdf drakma flexi-streams yason) :source
  (("git" "https://github.com/ikbenlike/cl-keycloak.git")))
 (:ql-project cl-kraken :system-file cl-kraken :system-name cl-kraken
  :dependencies (asdf cl-base64 dexador ironclad jsown quri) :source
  (("git" "https://github.com/jonatack/cl-kraken.git")))
 (:ql-project cl-kraken :system-file cl-kraken :system-name cl-kraken/tests
  :dependencies (rove) :source
  (("git" "https://github.com/jonatack/cl-kraken.git")))
 (:ql-project cl-ksuid :system-file cl-ksuid :system-name cl-ksuid
  :dependencies (babel ironclad prove prove-asdf) :source
  (("git" "https://gitlab.com/bob.denver.co/cl-ksuid.git")))
 (:ql-project cl-ksuid :system-file cl-ksuid :system-name cl-ksuid-test
  :dependencies (cl-ksuid prove prove-asdf) :source
  (("git" "https://gitlab.com/bob.denver.co/cl-ksuid.git")))
 (:ql-project cl-ktx :system-file cl-ktx :system-name cl-ktx :dependencies
  (asdf binary-structures cl-opengl documentation-utils trivial-features)
  :source (("git" "https://github.com/shinmera/cl-ktx.git")))
 (:ql-project cl-kyoto-cabinet :system-file cl-kyoto-cabinet :system-name
  cl-kyoto-cabinet :dependencies (asdf cffi) :source
  (("git" "https://github.com/kraison/cl-kyoto-cabinet.git")))
 (:ql-project cl-l10n :system-file cl-l10n :system-name cl-l10n :dependencies
  (alexandria asdf cl-fad cl-l10n-cldr cl-ppcre closer-mop cxml flexi-streams
   iterate local-time metabang-bind)
  :source (("git" "https://gitlab.common-lisp.net/cl-l10n/cl-l10n.git")))
 (:ql-project cl-l10n :system-file cl-l10n :system-name cl-l10n/test
  :dependencies (cl-l10n hu.dwim.stefil parse-number) :source
  (("git" "https://gitlab.common-lisp.net/cl-l10n/cl-l10n.git")))
 (:ql-project cl-l10n-cldr :system-file cl-l10n-cldr :system-name cl-l10n-cldr
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/cl-l10n/cl-l10n-cldr.git")))
 (:ql-project cl-lambdacalc :system-file cl-lambdacalc :system-name
  cl-lambdacalc :dependencies (asdf cl-ppcre) :source
  (("git" "https://github.com/scottmcleodjr/cl-lambdacalc.git")))
 (:ql-project cl-lambdacalc :system-file cl-lambdacalc-test :system-name
  cl-lambdacalc-test :dependencies (asdf cl-lambdacalc lisp-unit) :source
  (("git" "https://github.com/scottmcleodjr/cl-lambdacalc.git")))
 (:ql-project cl-langutils :system-file langutils :system-name langutils
  :dependencies (s-xml-rpc stdutils) :source
  (("git" "https://github.com/eslick/cl-langutils.git")))
 (:ql-project cl-las :system-file cl-las :system-name cl-las :dependencies
  (asdf binary-io) :source (("git" "https://github.com/mgi/cl-las.git")))
 (:ql-project cl-lastfm :system-file cl-lastfm :system-name cl-lastfm
  :dependencies (cxml-stp drakma trivial-utf-8 url-rewrite) :source
  (("https" "https://github.com/nlamirault/cl-lastfm/archive/0.2.1.tar.gz")
   nil))
 (:ql-project cl-lastfm :system-file cl-lastfm-test :system-name cl-lastfm-test
  :dependencies (cl-lastfm lisp-unit) :source
  (("https" "https://github.com/nlamirault/cl-lastfm/archive/0.2.1.tar.gz")
   nil))
 (:ql-project cl-launch :system-file cl-launch :system-name cl-launch
  :dependencies (asdf) :source
  (("https"
    "https://common-lisp.net/project/xcvb/cl-launch/cl-launch.tar.gz")))
 (:ql-project cl-ledger :system-file cl-ledger :system-name cl-ledger
  :dependencies (asdf cambl cl-ppcre local-time periods-series) :source
  (("git" "https://github.com/ledger/cl-ledger.git")))
 (:ql-project cl-lex :system-file cl-lex :system-name cl-lex :dependencies
  (cl-ppcre) :source (("git" "https://github.com/djr7C4/cl-lex.git")))
 (:ql-project cl-lexer :system-file cl-lexer :system-name cl-lexer
  :dependencies (asdf regex) :source
  (("git" "https://github.com/starseeker/cl-lexer.git")))
 (:ql-project cl-lib-helper :system-file lib-helper :system-name lib-helper
  :dependencies (alexandria asdf cl-containers cl-ppcre closer-mop iterate)
  :source (("git" "https://github.com/albuspiroglu/cl-lib-helper.git")))
 (:ql-project cl-lib-helper :system-file lib-helper-test-system :system-name
  lib-helper-test-system :dependencies (asdf) :source
  (("git" "https://github.com/albuspiroglu/cl-lib-helper.git")))
 (:ql-project cl-lib-helper :system-file lib-helper :system-name
  lib-helper/test :dependencies (fiveam lib-helper) :source
  (("git" "https://github.com/albuspiroglu/cl-lib-helper.git")))
 (:ql-project cl-liballegro :system-file cl-liballegro :system-name
  cl-liballegro :dependencies
  (asdf cffi cffi-libffi float-features trivial-garbage trivial-gray-streams
   trivial-main-thread)
  :source (("git" "https://github.com/resttime/cl-liballegro.git")))
 (:ql-project cl-liballegro-nuklear :system-file cl-liballegro-nuklear
  :system-name cl-liballegro-nuklear :dependencies
  (asdf cffi cffi-libffi cl-liballegro trivial-features) :source
  (("git" "https://gitlab.com/lockie/cl-liballegro-nuklear.git")))
 (:ql-project cl-libevent2 :system-file cl-libevent2 :system-name cl-libevent2
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/orthecreedence/cl-libevent2.git")))
 (:ql-project cl-libevent2 :system-file cl-libevent2-ssl :system-name
  cl-libevent2-ssl :dependencies (asdf cffi cl-libevent2) :source
  (("git" "https://github.com/orthecreedence/cl-libevent2.git")))
 (:ql-project cl-libiio :system-file cl-libiio :system-name cl-libiio
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/mihaiolteanu/cl-libiio.git")))
 (:ql-project cl-libinput :system-file cl-libinput :system-name cl-libinput
  :dependencies (asdf cffi osicat) :source
  (("git" "https://github.com/malcolmstill/cl-libinput.git")))
 (:ql-project cl-libpuzzle :system-file cl-libpuzzle :system-name cl-libpuzzle
  :dependencies (cffi) :source
  (("git" "https://github.com/pocket7878/cl-libpuzzle.git")))
 (:ql-project cl-libpuzzle :system-file cl-libpuzzle-test :system-name
  cl-libpuzzle-test :dependencies (cl-libpuzzle cl-test-more) :source
  (("git" "https://github.com/pocket7878/cl-libpuzzle.git")))
 (:ql-project cl-libssh2 :system-file libssh2 :system-name libssh2
  :dependencies
  (babel cffi cffi-grovel cl-fad hu.dwim.logger split-sequence
   trivial-gray-streams usocket)
  :source (("git" "https://github.com/alxchk/cl-libssh2.git")))
 (:ql-project cl-libssh2 :system-file libssh2.test :system-name libssh2.test
  :dependencies (hu.dwim.stefil libssh2) :source
  (("git" "https://github.com/alxchk/cl-libssh2.git")))
 (:ql-project cl-libsvm :system-file cl-liblinear :system-name cl-liblinear
  :dependencies (asdf cffi trivial-garbage) :source
  (("git" "https://github.com/melisgl/cl-libsvm.git")))
 (:ql-project cl-libsvm :system-file cl-libsvm :system-name cl-libsvm
  :dependencies (asdf cffi trivial-garbage) :source
  (("git" "https://github.com/melisgl/cl-libsvm.git")))
 (:ql-project cl-libsvm-format :system-file cl-libsvm-format :system-name
  cl-libsvm-format :dependencies (alexandria asdf) :source
  (("git" "https://github.com/masatoi/cl-libsvm-format.git")))
 (:ql-project cl-libsvm-format :system-file cl-libsvm-format-test :system-name
  cl-libsvm-format-test :dependencies (asdf cl-libsvm-format prove prove-asdf)
  :source (("git" "https://github.com/masatoi/cl-libsvm-format.git")))
 (:ql-project cl-libusb :system-file cl-libusb :system-name cl-libusb
  :dependencies (asdf libusb-ffi trivial-garbage) :source
  (("git" "https://github.com/soemraws/cl-libusb.git")))
 (:ql-project cl-libusb :system-file libusb-ffi :system-name libusb-ffi
  :dependencies (asdf cffi cffi-grovel static-vectors) :source
  (("git" "https://github.com/soemraws/cl-libusb.git")))
 (:ql-project cl-libuv :system-file cl-libuv :system-name cl-libuv
  :dependencies (alexandria asdf cffi cffi-grovel) :source
  (("git" "https://github.com/orthecreedence/cl-libuv.git")))
 (:ql-project cl-libuv :system-file cl-libuv-config :system-name
  cl-libuv-config :dependencies (asdf cffi-grovel) :source
  (("git" "https://github.com/orthecreedence/cl-libuv.git")))
 (:ql-project cl-libxml2 :system-file cl-libxml2 :system-name cl-libxml2
  :dependencies
  (alexandria cffi flexi-streams garbage-pools iterate metabang-bind puri)
  :source (("git" "https://github.com/archimag/cl-libxml2.git") nil))
 (:ql-project cl-libxml2 :system-file cl-libxml2 :system-name cl-libxml2-test
  :dependencies (cl-libxml2 lift) :source
  (("git" "https://github.com/archimag/cl-libxml2.git") nil))
 (:ql-project cl-libxml2 :system-file xfactory :system-name xfactory
  :dependencies (cl-libxml2) :source
  (("git" "https://github.com/archimag/cl-libxml2.git") nil))
 (:ql-project cl-libxml2 :system-file xfactory :system-name xfactory-test
  :dependencies (lift xfactory) :source
  (("git" "https://github.com/archimag/cl-libxml2.git") nil))
 (:ql-project cl-libxml2 :system-file xoverlay :system-name xoverlay
  :dependencies (cl-libxml2) :source
  (("git" "https://github.com/archimag/cl-libxml2.git") nil))
 (:ql-project cl-libyaml :system-file cl-libyaml :system-name cl-libyaml
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/eudoxia0/cl-libyaml.git")))
 (:ql-project cl-libyaml :system-file cl-libyaml-test :system-name
  cl-libyaml-test :dependencies (asdf cl-libyaml fiveam) :source
  (("git" "https://github.com/eudoxia0/cl-libyaml.git")))
 (:ql-project cl-locale :system-file cl-locale :system-name cl-locale
  :dependencies (anaphora arnesi cl-annot cl-syntax cl-syntax-annot) :source
  (("git" "https://github.com/fukamachi/cl-locale.git")))
 (:ql-project cl-locale :system-file cl-locale-syntax :system-name
  cl-locale-syntax :dependencies (cl-locale cl-syntax) :source
  (("git" "https://github.com/fukamachi/cl-locale.git")))
 (:ql-project cl-locale :system-file cl-locale-test :system-name cl-locale-test
  :dependencies (cl-locale cl-syntax flexi-streams prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/cl-locale.git")))
 (:ql-project cl-locatives :system-file cl-locatives :system-name cl-locatives
  :dependencies (asdf) :source
  (("git" "https://github.com/stylewarning/cl-locatives.git")))
 (:ql-project cl-log :system-file cl-log :system-name cl-log :dependencies nil
  :source (("https" "https://www.nicklevine.org/cl-log/cl-log-latest.tar.gz")))
 (:ql-project cl-log :system-file cl-log-test :system-name cl-log-test
  :dependencies (cl-log eos) :source
  (("https" "https://www.nicklevine.org/cl-log/cl-log-latest.tar.gz")))
 (:ql-project cl-logic :system-file cl-logic :system-name cl-logic
  :dependencies (alexandria quine-mccluskey) :source
  (("git" "https://github.com/jollheef/cl-logic.git")))
 (:ql-project cl-logic :system-file cl-logic :system-name quine-mccluskey
  :dependencies nil :source
  (("git" "https://github.com/jollheef/cl-logic.git")))
 (:ql-project cl-ltsv :system-file cl-ltsv :system-name cl-ltsv :dependencies
  nil :source (("git" "https://github.com/taksatou/cl-ltsv.git")))
 (:ql-project cl-ltsv :system-file cl-ltsv-test :system-name cl-ltsv-test
  :dependencies (cl-ltsv cl-test-more) :source
  (("git" "https://github.com/taksatou/cl-ltsv.git")))
 (:ql-project cl-lzlib :system-file lzlib :system-name lzlib :dependencies
  (asdf cffi cl-octet-streams lparallel trivial-gray-streams) :source
  (("git" "https://codeberg.org/glv/cl-lzlib.git")))
 (:ql-project cl-lzlib :system-file lzlib-tests :system-name lzlib-tests
  :dependencies (asdf cl-octet-streams fiveam lzlib uiop) :source
  (("git" "https://codeberg.org/glv/cl-lzlib.git")))
 (:ql-project cl-lzma :system-file cl-lzma :system-name cl-lzma :dependencies
  (asdf cffi cl-autowrap fast-io static-vectors) :source
  (("git" "https://github.com/phoe/cl-lzma.git")))
 (:ql-project cl-m4 :system-file cl-m4 :system-name cl-m4 :dependencies
  (alexandria cffi cffi-grovel cl-fad cl-ppcre external-program graylex)
  :source (("git" "https://github.com/e-user/cl-m4.git")))
 (:ql-project cl-m4 :system-file cl-m4-test :system-name cl-m4-test
  :dependencies (cl-heredoc cl-m4 hu.dwim.stefil) :source
  (("git" "https://github.com/e-user/cl-m4.git")))
 (:ql-project cl-mango :system-file cl-mango :system-name cl-mango
  :dependencies (asdf drakma json-mop yason) :source
  (("git" "https://github.com/cmoore/cl-mango.git")))
 (:ql-project cl-markdown :system-file cl-markdown :system-name cl-markdown
  :dependencies
  (anaphora asdf cl-containers cl-ppcre dynamic-classes metabang-bind
   metatilities-base)
  :source
  (("git" "https://gitlab.common-lisp.net/cl-markdown/cl-markdown.git") nil))
 (:ql-project cl-markdown :system-file cl-markdown-comparisons :system-name
  cl-markdown-comparisons :dependencies
  (asdf cl-html-diff cl-markdown html-encode lift lml2 trivial-shell) :source
  (("git" "https://gitlab.common-lisp.net/cl-markdown/cl-markdown.git") nil))
 (:ql-project cl-markdown :system-file cl-markdown-test :system-name
  cl-markdown-test :dependencies (asdf cl-markdown lift trivial-shell) :source
  (("git" "https://gitlab.common-lisp.net/cl-markdown/cl-markdown.git") nil))
 (:ql-project cl-markless :system-file cl-markless :system-name cl-markless
  :dependencies (asdf documentation-utils trivial-indent) :source
  (("git" "https://github.com/Shirakumo/cl-markless.git")))
 (:ql-project cl-markless :system-file cl-markless-epub :system-name
  cl-markless-epub :dependencies
  (asdf babel cl-markless-plump trivial-gray-streams trivial-indent
   trivial-mimes uiop zip)
  :source (("git" "https://github.com/Shirakumo/cl-markless.git")))
 (:ql-project cl-markless :system-file cl-markless-latex :system-name
  cl-markless-latex :dependencies (asdf cl-markless) :source
  (("git" "https://github.com/Shirakumo/cl-markless.git")))
 (:ql-project cl-markless :system-file cl-markless-markdown :system-name
  cl-markless-markdown :dependencies
  (3bmd 3bmd-ext-code-blocks asdf cl-markless) :source
  (("git" "https://github.com/Shirakumo/cl-markless.git")))
 (:ql-project cl-markless :system-file cl-markless-plump :system-name
  cl-markless-plump :dependencies (asdf cl-markless plump-dom) :source
  (("git" "https://github.com/Shirakumo/cl-markless.git")))
 (:ql-project cl-markless :system-file cl-markless-standalone :system-name
  cl-markless-standalone :dependencies
  (asdf cl-markless cl-markless-epub cl-markless-latex cl-markless-markdown
   cl-markless-plump command-line-arguments)
  :source (("git" "https://github.com/Shirakumo/cl-markless.git")))
 (:ql-project cl-markless :system-file cl-markless-test :system-name
  cl-markless-test :dependencies (asdf cl-markless parachute) :source
  (("git" "https://github.com/Shirakumo/cl-markless.git")))
 (:ql-project cl-marklogic :system-file cl-marklogic :system-name cl-marklogic
  :dependencies (alexandria asdf drakma fiveam local-time) :source
  (("git" "https://github.com/opsresearch/cl-marklogic.git")))
 (:ql-project cl-marklogic :system-file ml-dsl :system-name ml-dsl
  :dependencies (asdf cl-marklogic) :source
  (("git" "https://github.com/opsresearch/cl-marklogic.git")))
 (:ql-project cl-marklogic :system-file ml-optimizer :system-name ml-optimizer
  :dependencies (asdf cl-json cl-marklogic cl-opsresearch hunchentoot) :source
  (("git" "https://github.com/opsresearch/cl-marklogic.git")))
 (:ql-project cl-marklogic :system-file ml-test :system-name ml-test
  :dependencies (asdf cl-marklogic fiveam ml-optimizer) :source
  (("git" "https://github.com/opsresearch/cl-marklogic.git")))
 (:ql-project cl-markup :system-file cl-markup :system-name cl-markup
  :dependencies nil :source
  (("git" "https://github.com/arielnetworks/cl-markup.git")))
 (:ql-project cl-markup :system-file cl-markup-test :system-name cl-markup-test
  :dependencies (cl-markup cl-test-more) :source
  (("git" "https://github.com/arielnetworks/cl-markup.git")))
 (:ql-project cl-marshal :system-file marshal :system-name marshal
  :dependencies (asdf) :source
  (("git" "https://github.com/wlbr/cl-marshal.git")))
 (:ql-project cl-marshal :system-file marshal-tests :system-name marshal-tests
  :dependencies (asdf marshal xlunit) :source
  (("git" "https://github.com/wlbr/cl-marshal.git")))
 (:ql-project cl-match :system-file cl-match :system-name cl-match
  :dependencies (standard-cl) :source
  (("git" "https://github.com/tonyg/cl-match.git") nil))
 (:ql-project cl-match :system-file cl-match-test :system-name cl-match-test
  :dependencies (cl-match pcl-unit-test) :source
  (("git" "https://github.com/tonyg/cl-match.git") nil))
 (:ql-project cl-match :system-file pcl-unit-test :system-name pcl-unit-test
  :dependencies (standard-cl) :source
  (("git" "https://github.com/tonyg/cl-match.git") nil))
 (:ql-project cl-match :system-file standard-cl :system-name standard-cl
  :dependencies nil :source
  (("git" "https://github.com/tonyg/cl-match.git") nil))
 (:ql-project cl-mathstats :system-file cl-mathstats :system-name cl-mathstats
  :dependencies (asdf cl-containers metatilities-base) :source
  (("git" "https://github.com/gwkkwg/cl-mathstats.git") nil))
 (:ql-project cl-mathstats :system-file cl-mathstats-test :system-name
  cl-mathstats-test :dependencies (asdf cl-mathstats lift) :source
  (("git" "https://github.com/gwkkwg/cl-mathstats.git") nil))
 (:ql-project cl-maxminddb :system-file cl-maxminddb :system-name cl-maxminddb
  :dependencies
  (asdf babel cffi cffi-libffi ieee-floats iterate metabang-bind mmap) :source
  (("git" "https://github.com/turtle-bazon/cl-maxminddb.git")))
 (:ql-project cl-maxsat :system-file cl-maxsat :system-name cl-maxsat
  :dependencies (alexandria asdf cl-sat iterate trivia) :source
  (("git" "https://github.com/cl-model-languages/cl-maxsat.git")))
 (:ql-project cl-maxsat :system-file cl-maxsat.test :system-name cl-maxsat.test
  :dependencies (asdf cl-maxsat fiveam) :source
  (("git" "https://github.com/cl-model-languages/cl-maxsat.git")))
 (:ql-project cl-mdb :system-file cl-mdb :system-name cl-mdb :dependencies
  (asdf cffi) :source (("git" "https://gitee.com/bobwxc/cl-mdb.git")))
 (:ql-project cl-mecab :system-file cl-mecab :system-name cl-mecab
  :dependencies (asdf cffi split-sequence) :source
  (("git" "https://github.com/carrotflakes/cl-mecab.git")))
 (:ql-project cl-mecab :system-file cl-mecab-test :system-name cl-mecab-test
  :dependencies (asdf cl-mecab prove prove-asdf) :source
  (("git" "https://github.com/carrotflakes/cl-mecab.git")))
 (:ql-project cl-mechanize :system-file cl-mechanize :system-name cl-mechanize
  :dependencies (asdf cl-ppcre closure-html cxml-stp drakma puri) :source
  (("git" "https://github.com/joachifm/cl-mechanize.git")))
 (:ql-project cl-mediawiki :system-file cl-mediawiki :system-name cl-mediawiki
  :dependencies (alexandria cxml drakma) :source
  (("git" "https://github.com/AccelerationNet/cl-mediawiki.git")))
 (:ql-project cl-mediawiki :system-file cl-mediawiki-test :system-name
  cl-mediawiki-test :dependencies (cl-mediawiki lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/cl-mediawiki.git")))
 (:ql-project cl-megolm :system-file cl-megolm :system-name cl-megolm
  :dependencies
  (alexandria asdf cffi claw-olm ironclad jonathan lisp-unit s-base64 str)
  :source (("git" "https://github.com/K1D77A/cl-megolm.git")))
 (:ql-project cl-megolm :system-file cl-megolm :system-name cl-megolm/tests
  :dependencies (cl-megolm lisp-unit s-base64) :source
  (("git" "https://github.com/K1D77A/cl-megolm.git")))
 (:ql-project cl-memcached :system-file cl-memcached :system-name cl-memcached
  :dependencies (babel pooler split-sequence usocket) :source
  (("git" "https://github.com/quasi/cl-memcached.git")))
 (:ql-project cl-messagepack :system-file cl-messagepack :system-name
  cl-messagepack :dependencies (asdf babel closer-mop flexi-streams) :source
  (("git" "https://github.com/mbrezu/cl-messagepack.git")))
 (:ql-project cl-messagepack :system-file cl-messagepack-tests :system-name
  cl-messagepack-tests :dependencies (asdf cl-json cl-messagepack fiveam)
  :source (("git" "https://github.com/mbrezu/cl-messagepack.git")))
 (:ql-project cl-messagepack-rpc :system-file cl-messagepack-rpc :system-name
  cl-messagepack-rpc :dependencies
  (alexandria cffi cl-async cl-libuv cl-messagepack flexi-streams
   trivial-backtrace)
  :source (("git" "https://github.com/adolenc/cl-messagepack-rpc.git")))
 (:ql-project cl-messagepack-rpc :system-file cl-messagepack-rpc-tests
  :system-name cl-messagepack-rpc-tests :dependencies
  (cl-messagepack-rpc fiveam) :source
  (("git" "https://github.com/adolenc/cl-messagepack-rpc.git")))
 (:ql-project cl-migrations :system-file cl-migrations :system-name
  cl-migrations :dependencies (clsql) :source
  (("https"
    "https://common-lisp.net/project/cl-migrations/cl-migrations-latest.tgz")))
 (:ql-project cl-migratum :system-file cl-migratum :system-name cl-migratum
  :dependencies (asdf cl-ascii-table cl-reexport local-time log4cl) :source
  (("git" "https://github.com/dnaeon/cl-migratum.git")))
 (:ql-project cl-migratum :system-file cl-migratum.cli :system-name
  cl-migratum.cli :dependencies
  (asdf cl-migratum cl-migratum.driver.dbi cl-migratum.driver.rdbms-postgresql
   cl-migratum.provider.local-path clingon)
  :source (("git" "https://github.com/dnaeon/cl-migratum.git")))
 (:ql-project cl-migratum :system-file cl-migratum.driver.dbi :system-name
  cl-migratum.driver.dbi :dependencies
  (asdf cl-dbi cl-migratum cl-migratum.driver.mixins cl-ppcre log4cl) :source
  (("git" "https://github.com/dnaeon/cl-migratum.git")))
 (:ql-project cl-migratum :system-file cl-migratum.driver.mixins :system-name
  cl-migratum.driver.mixins :dependencies (asdf cl-migratum) :source
  (("git" "https://github.com/dnaeon/cl-migratum.git")))
 (:ql-project cl-migratum :system-file cl-migratum.driver.postmodern-postgresql
  :system-name cl-migratum.driver.postmodern-postgresql :dependencies
  (asdf cl-migratum cl-migratum.driver.mixins hu.dwim.logger log4cl postmodern
   str)
  :source (("git" "https://github.com/dnaeon/cl-migratum.git")))
 (:ql-project cl-migratum :system-file cl-migratum.driver.rdbms-postgresql
  :system-name cl-migratum.driver.rdbms-postgresql :dependencies
  (asdf cl-migratum cl-migratum.driver.mixins cl-ppcre hu.dwim.logger
   hu.dwim.rdbms.postgresql log4cl)
  :source (("git" "https://github.com/dnaeon/cl-migratum.git")))
 (:ql-project cl-migratum :system-file cl-migratum.provider.local-path
  :system-name cl-migratum.provider.local-path :dependencies
  (asdf cl-migratum cl-ppcre log4cl) :source
  (("git" "https://github.com/dnaeon/cl-migratum.git")))
 (:ql-project cl-migratum :system-file cl-migratum.test :system-name
  cl-migratum.test :dependencies
  (asdf cl-migratum cl-migratum.driver.dbi
   cl-migratum.driver.postmodern-postgresql cl-migratum.driver.rdbms-postgresql
   cl-migratum.provider.local-path dbd-sqlite3 rove tmpdir)
  :source (("git" "https://github.com/dnaeon/cl-migratum.git")))
 (:ql-project cl-mime :system-file cl-mime :system-name cl-mime :dependencies
  (asdf cl-base64 cl-ppcre cl-qprint) :source
  (("git" "https://github.com/hanshuebner/cl-mime.git") nil))
 (:ql-project cl-mime :system-file cl-mime-test :system-name cl-mime-test
  :dependencies (asdf cl-mime rove) :source
  (("git" "https://github.com/hanshuebner/cl-mime.git") nil))
 (:ql-project cl-mime-from-string :system-file cl-mime-from-string :system-name
  cl-mime-from-string :dependencies (asdf) :source
  (("git" "https://github.com/K1D77A/cl-mime-from-string.git")))
 (:ql-project cl-mimeparse :system-file cl-mimeparse :system-name cl-mimeparse
  :dependencies (asdf cl-ppcre parse-number) :source
  (("git" "https://github.com/mmontone/cl-mimeparse.git")))
 (:ql-project cl-mimeparse :system-file cl-mimeparse-tests :system-name
  cl-mimeparse-tests :dependencies (asdf cl-mimeparse rt) :source
  (("git" "https://github.com/mmontone/cl-mimeparse.git")))
 (:ql-project cl-minify-css :system-file cl-minify-css :system-name
  cl-minify-css :dependencies (asdf) :source
  (("git" "https://github.com/noloop/cl-minify-css.git")))
 (:ql-project cl-minify-css :system-file cl-minify-css-test :system-name
  cl-minify-css-test :dependencies
  (asdf assert-p cacau cacau-asdf cl-minify-css) :source
  (("git" "https://github.com/noloop/cl-minify-css.git")))
 (:ql-project cl-mixed :system-file cl-mixed :system-name cl-mixed
  :dependencies
  (alexandria asdf cffi documentation-utils static-vectors trivial-features)
  :source (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-aaudio :system-name
  cl-mixed-aaudio :dependencies (asdf cffi cl-mixed) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-alsa :system-name cl-mixed-alsa
  :dependencies (asdf cffi cl-mixed) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-coreaudio :system-name
  cl-mixed-coreaudio :dependencies
  (asdf bordeaux-threads cffi cl-mixed float-features) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-examples :system-name
  cl-mixed-examples :dependencies
  (asdf cl-mixed cl-mixed-mpg123 cl-mixed-out123 cl-mixed-pulse cl-mixed-wav)
  :source (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-flac :system-name cl-mixed-flac
  :dependencies (asdf cl-flac cl-mixed) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-jack :system-name cl-mixed-jack
  :dependencies (asdf cffi cl-mixed) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-mpg123 :system-name
  cl-mixed-mpg123 :dependencies (asdf cl-mixed cl-mpg123) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-mpt :system-name cl-mixed-mpt
  :dependencies (asdf cl-mixed static-vectors) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-nxau :system-name cl-mixed-nxau
  :dependencies (asdf cffi cl-mixed) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-opus :system-name cl-mixed-opus
  :dependencies (asdf cl-mixed cl-opus) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-oss :system-name cl-mixed-oss
  :dependencies (asdf cffi cl-mixed) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-out123 :system-name
  cl-mixed-out123 :dependencies (asdf cl-mixed cl-out123) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-pulse :system-name cl-mixed-pulse
  :dependencies (asdf cffi cl-mixed) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-sdl2 :system-name cl-mixed-sdl2
  :dependencies (asdf cl-mixed sdl2) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-vorbis :system-name
  cl-mixed-vorbis :dependencies (asdf cl-mixed cl-vorbis) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-wasapi :system-name
  cl-mixed-wasapi :dependencies (asdf cffi cl-mixed com-on) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-wav :system-name cl-mixed-wav
  :dependencies (asdf cl-mixed) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-winmm :system-name cl-mixed-winmm
  :dependencies (asdf cffi cl-mixed) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mixed :system-file cl-mixed-xaudio2 :system-name
  cl-mixed-xaudio2 :dependencies (asdf cffi cl-mixed com-on) :source
  (("git" "https://github.com/Shirakumo/cl-mixed.git")))
 (:ql-project cl-mlep :system-file mlep :system-name mlep :dependencies (asdf)
  :source (("git" "https://github.com/fzalkow/cl-mlep.git")))
 (:ql-project cl-mlep :system-file mlep-add :system-name mlep-add :dependencies
  (asdf cffi lla mlep num-utils) :source
  (("git" "https://github.com/fzalkow/cl-mlep.git")))
 (:ql-project cl-mock :system-file cl-mock :system-name cl-mock :dependencies
  (asdf cl-mock-basic trivia) :source
  (("git" "https://github.com/Ferada/cl-mock.git")))
 (:ql-project cl-mock :system-file cl-mock-basic :system-name cl-mock-basic
  :dependencies (alexandria asdf bordeaux-threads closer-mop) :source
  (("git" "https://github.com/Ferada/cl-mock.git")))
 (:ql-project cl-mock :system-file cl-mock-tests :system-name cl-mock-tests
  :dependencies (asdf cl-mock cl-mock-tests-basic) :source
  (("git" "https://github.com/Ferada/cl-mock.git")))
 (:ql-project cl-mock :system-file cl-mock-tests-basic :system-name
  cl-mock-tests-basic :dependencies (asdf cl-mock-basic fiveam) :source
  (("git" "https://github.com/Ferada/cl-mock.git")))
 (:ql-project cl-modio :system-file cl-modio :system-name cl-modio
  :dependencies
  (alexandria asdf cl-ppcre com.inuoe.jzon documentation-utils drakma
   language-codes uiop zippy)
  :source (("git" "https://github.com/shinmera/cl-modio.git")))
 (:ql-project cl-modlisp :system-file modlisp :system-name modlisp
  :dependencies (kmrcl) :source (("kmr-git" "cl-modlisp")))
 (:ql-project cl-monad-macros :system-file cl-monad-macros :system-name
  cl-monad-macros :dependencies nil :source
  (("svn" "https://svn.common-lisp.net/cl-monad-macros/trunk") nil))
 (:ql-project cl-moneris :system-file cl-moneris :system-name cl-moneris
  :dependencies (asdf drakma s-xml) :source
  (("git" "https://github.com/vsedach/cl-moneris.git")))
 (:ql-project cl-moneris :system-file cl-moneris-test :system-name
  cl-moneris-test :dependencies (asdf cl-moneris fiveam) :source
  (("git" "https://github.com/vsedach/cl-moneris.git")))
 (:ql-project cl-mongo :system-file cl-mongo :system-name cl-mongo
  :dependencies
  (babel bordeaux-threads documentation-template lisp-unit parenscript
   split-sequence usocket uuid)
  :source (("git" "https://github.com/fons/cl-mongo.git")))
 (:ql-project cl-mongo-id :system-file cl-mongo-id :system-name cl-mongo-id
  :dependencies (asdf bordeaux-threads local-time md5 secure-random) :source
  (("git" "https://github.com/orthecreedence/cl-mongo-id.git")))
 (:ql-project cl-monitors :system-file cl-monitors :system-name cl-monitors
  :dependencies
  (asdf cffi documentation-utils trivial-features trivial-garbage) :source
  (("git" "https://github.com/Shirakumo/cl-monitors.git")))
 (:ql-project cl-mop :system-file cl-mop :system-name cl-mop :dependencies nil
  :source (("git" "https://github.com/Inaimathi/cl-mop.git")))
 (:ql-project cl-morse :system-file cl-morse :system-name cl-morse
  :dependencies (asdf cl-ppcre) :source
  (("latest-github-release" "https://github.com/em7/cl-morse.git")))
 (:ql-project cl-morse :system-file cl-morse :system-name cl-morse/tests
  :dependencies (cl-morse fiveam) :source
  (("latest-github-release" "https://github.com/em7/cl-morse.git")))
 (:ql-project cl-moss :system-file cl-moss :system-name cl-moss :dependencies
  (usocket) :source (("git" "https://github.com/wsgac/cl-moss.git")))
 (:ql-project cl-mount-info :system-file cl-mount-info :system-name
  cl-mount-info :dependencies (alexandria asdf cffi cl-ppcre) :source
  (("git" "https://notabug.org/cage/cl-mount-info.git")))
 (:ql-project cl-mpg123 :system-file cl-mpg123 :system-name cl-mpg123
  :dependencies
  (asdf cffi documentation-utils trivial-features trivial-garbage) :source
  (("git" "https://github.com/Shirakumo/cl-mpg123.git")))
 (:ql-project cl-mpg123 :system-file cl-mpg123-example :system-name
  cl-mpg123-example :dependencies (asdf cl-mpg123 cl-out123 verbose) :source
  (("git" "https://github.com/Shirakumo/cl-mpg123.git")))
 (:ql-project cl-mpi :system-file cl-mpi :system-name cl-mpi :dependencies
  (alexandria asdf cffi cl-mpi-asdf-integration static-vectors uiop) :source
  (("git" "https://github.com/marcoheisig/cl-mpi.git")))
 (:ql-project cl-mpi :system-file cl-mpi-asdf-integration :system-name
  cl-mpi-asdf-integration :dependencies (asdf cffi-grovel cffi-toolchain)
  :source (("git" "https://github.com/marcoheisig/cl-mpi.git")))
 (:ql-project cl-mpi :system-file cl-mpi-examples :system-name cl-mpi-examples
  :dependencies (asdf cl-mpi cl-mpi-asdf-integration uiop) :source
  (("git" "https://github.com/marcoheisig/cl-mpi.git")))
 (:ql-project cl-mpi :system-file cl-mpi-extensions :system-name
  cl-mpi-extensions :dependencies (asdf cffi cl-conspack cl-mpi) :source
  (("git" "https://github.com/marcoheisig/cl-mpi.git")))
 (:ql-project cl-mpi :system-file cl-mpi-test-suite :system-name
  cl-mpi-test-suite :dependencies (asdf cffi cl-mpi fiveam) :source
  (("git" "https://github.com/marcoheisig/cl-mpi.git")))
 (:ql-project cl-mssql :system-file mssql :system-name mssql :dependencies
  (asdf cffi garbage-pools iterate parse-number) :source
  (("git" "https://github.com/archimag/cl-mssql.git") nil))
 (:ql-project cl-mtgnet :system-file cl-mtgnet :system-name cl-mtgnet
  :dependencies (asdf blackbird cl-json cl-netstring+ trivial-utf-8) :source
  (("git" "https://github.com/mtstickney/cl-mtgnet.git")))
 (:ql-project cl-mtgnet :system-file cl-mtgnet-async :system-name
  cl-mtgnet-async :dependencies (asdf cl-async cl-mtgnet) :source
  (("git" "https://github.com/mtstickney/cl-mtgnet.git")))
 (:ql-project cl-mtgnet :system-file cl-mtgnet-sync :system-name cl-mtgnet-sync
  :dependencies (asdf cl-mtgnet usocket) :source
  (("git" "https://github.com/mtstickney/cl-mtgnet.git")))
 (:ql-project cl-murmurhash :system-file cl-murmurhash :system-name
  cl-murmurhash :dependencies (asdf babel) :source
  (("git" "https://github.com/ruricolist/cl-murmurhash.git")))
 (:ql-project cl-murmurhash :system-file cl-murmurhash :system-name
  cl-murmurhash/test :dependencies (cl-murmurhash fiveam) :source
  (("git" "https://github.com/ruricolist/cl-murmurhash.git")))
 (:ql-project cl-mustache :system-file cl-mustache :system-name cl-mustache
  :dependencies (asdf uiop) :source
  (("git" "https://github.com/kanru/cl-mustache.git")))
 (:ql-project cl-mustache :system-file cl-mustache-test :system-name
  cl-mustache-test :dependencies (asdf cl-mustache prove prove-asdf) :source
  (("git" "https://github.com/kanru/cl-mustache.git")))
 (:ql-project cl-muth :system-file cl-muth :system-name cl-muth :dependencies
  (alexandria asdf bodge-heap bodge-queue bordeaux-threads trivial-features)
  :source (("tagged-git" "https://github.com/borodust/cl-muth.git" "stable")))
 (:ql-project cl-muth :system-file cl-muth :system-name cl-muth/tests
  :dependencies (alexandria bordeaux-threads cl-muth fiveam) :source
  (("tagged-git" "https://github.com/borodust/cl-muth.git" "stable")))
 (:ql-project cl-mw :system-file cl-mw :system-name cl-mw :dependencies
  (alexandria cffi cl-ppcre hu.dwim.serializer iolib) :source
  (("git" "https://github.com/psilord/cl-mw.git")))
 (:ql-project cl-mw :system-file cl-mw.examples.argument-processing
  :system-name cl-mw.examples.argument-processing :dependencies (cl-mw) :source
  (("git" "https://github.com/psilord/cl-mw.git")))
 (:ql-project cl-mw :system-file cl-mw.examples.hello-world :system-name
  cl-mw.examples.hello-world :dependencies (cl-mw) :source
  (("git" "https://github.com/psilord/cl-mw.git")))
 (:ql-project cl-mw :system-file cl-mw.examples.higher-order :system-name
  cl-mw.examples.higher-order :dependencies (cl-mw) :source
  (("git" "https://github.com/psilord/cl-mw.git")))
 (:ql-project cl-mw :system-file cl-mw.examples.monte-carlo-pi :system-name
  cl-mw.examples.monte-carlo-pi :dependencies (cl-mw) :source
  (("git" "https://github.com/psilord/cl-mw.git")))
 (:ql-project cl-mw :system-file cl-mw.examples.ping :system-name
  cl-mw.examples.ping :dependencies (cl-mw) :source
  (("git" "https://github.com/psilord/cl-mw.git")))
 (:ql-project cl-mw :system-file cl-mw.examples.with-task-policy :system-name
  cl-mw.examples.with-task-policy :dependencies (cl-mw) :source
  (("git" "https://github.com/psilord/cl-mw.git")))
 (:ql-project cl-myriam :system-file cl-myriam :system-name cl-myriam
  :dependencies
  (asdf babel bordeaux-threads cl-conspack cl-ppcre lparallel pzmq serapeum
   sha3 str usocket uuid)
  :source (("git" "https://codeberg.org/arisunz/cl-myriam.git")))
 (:ql-project cl-mysql :system-file cl-mysql :system-name cl-mysql
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/hackinghat/cl-mysql.git")))
 (:ql-project cl-mysql :system-file cl-mysql-test :system-name cl-mysql-test
  :dependencies (asdf cl-mysql stefil) :source
  (("git" "https://github.com/hackinghat/cl-mysql.git")))
 (:ql-project cl-naive-store :system-file cl-naive-store :system-name
  cl-naive-store :dependencies
  (asdf cl-naive-store.definitions cl-naive-store.document-types
   cl-naive-store.naive-core cl-naive-store.naive-documents
   cl-naive-store.naive-indexed cl-naive-store.naive-merkle)
  :source (("git" "https://gitlab.com/Harag/cl-naive-store.git")))
 (:ql-project cl-naive-store :system-file cl-naive-store.definitions
  :system-name cl-naive-store.definitions :dependencies
  (asdf cl-naive-store.document-types cl-naive-store.naive-core) :source
  (("git" "https://gitlab.com/Harag/cl-naive-store.git")))
 (:ql-project cl-naive-store :system-file cl-naive-store.document-types
  :system-name cl-naive-store.document-types :dependencies
  (asdf cl-naive-store.naive-core) :source
  (("git" "https://gitlab.com/Harag/cl-naive-store.git")))
 (:ql-project cl-naive-store :system-file cl-naive-store.naive-core
  :system-name cl-naive-store.naive-core :dependencies
  (asdf bordeaux-threads cl-cpus cl-fad cl-getx cl-murmurhash ironclad
   local-time lparallel split-sequence uuid)
  :source (("git" "https://gitlab.com/Harag/cl-naive-store.git")))
 (:ql-project cl-naive-store :system-file cl-naive-store.naive-documents
  :system-name cl-naive-store.naive-documents :dependencies
  (asdf cl-naive-store.document-types cl-naive-store.naive-core
   cl-naive-store.naive-indexed)
  :source (("git" "https://gitlab.com/Harag/cl-naive-store.git")))
 (:ql-project cl-naive-store :system-file cl-naive-store.naive-indexed
  :system-name cl-naive-store.naive-indexed :dependencies
  (asdf cl-naive-store.naive-core) :source
  (("git" "https://gitlab.com/Harag/cl-naive-store.git")))
 (:ql-project cl-naive-store :system-file cl-naive-store.naive-merkle
  :system-name cl-naive-store.naive-merkle :dependencies
  (asdf cl-naive-store.naive-documents) :source
  (("git" "https://gitlab.com/Harag/cl-naive-store.git")))
 (:ql-project cl-naive-store :system-file cl-naive-store.test :system-name
  cl-naive-store.test :dependencies (alexandria asdf cl-naive-store) :source
  (("git" "https://gitlab.com/Harag/cl-naive-store.git")))
 (:ql-project cl-ncurses :system-file cl-ncurses :system-name cl-ncurses
  :dependencies (uffi) :source
  (("https"
    "https://common-lisp.net/project/cl-ncurses/files/cl-ncurses_latest-version.tgz")))
 (:ql-project cl-neo4j :system-file cl-neo4j :system-name cl-neo4j
  :dependencies
  (alexandria anaphora babel cl-json cl-ppcre drakma split-sequence) :source
  (("branched-git" "https://github.com/kraison/cl-neo4j.git" "release")))
 (:ql-project cl-neo4j :system-file cl-neo4j :system-name cl-neo4j.tests
  :dependencies (cl-neo4j fiveam) :source
  (("branched-git" "https://github.com/kraison/cl-neo4j.git" "release")))
 (:ql-project cl-neovim :system-file cl-neovim :system-name cl-neovim
  :dependencies (asdf babel cl-messagepack-rpc form-fiddle split-sequence vom)
  :source (("git" "https://github.com/adolenc/cl-neovim.git")))
 (:ql-project cl-netpbm :system-file cl-netpbm :system-name cl-netpbm
  :dependencies (asdf) :source
  (("mercurial" "https://hg.stevelosh.com/cl-netpbm")))
 (:ql-project cl-netpbm :system-file cl-netpbm :system-name cl-netpbm/test
  :dependencies (1am cl-netpbm external-program) :source
  (("mercurial" "https://hg.stevelosh.com/cl-netpbm")))
 (:ql-project cl-netstring-plus :system-file cl-netstring+ :system-name
  cl-netstring+ :dependencies (flexi-streams trivial-utf-8) :source
  (("git" "https://github.com/mtstickney/cl-netstring-plus.git")))
 (:ql-project cl-netstrings :system-file cl-netstrings :system-name
  cl-netstrings :dependencies (arnesi iterate) :source
  (("git" "https://github.com/RyanHope/cl-netstrings.git")))
 (:ql-project cl-notebook :system-file cl-notebook :system-name cl-notebook
  :dependencies
  (alexandria anaphora asdf cl-css cl-fad cl-who closer-mop fact-base house
   parenscript prove-asdf qlot quri)
  :source (("git" "https://github.com/inaimathi/cl-notebook.git")))
 (:ql-project cl-notebook :system-file cl-notebook :system-name
  cl-notebook/test :dependencies (cl-notebook prove-asdf test-utils) :source
  (("git" "https://github.com/inaimathi/cl-notebook.git")))
 (:ql-project cl-nst :system-file asdf-nst :system-name asdf-nst :dependencies
  (asdf) :source (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file comp-set :system-name comp-set :dependencies
  (asdf) :source (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file mnst-relay :system-name mnst-relay
  :dependencies (asdf asdf-nst nst nst-selftest-utils) :source
  (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file nst :system-name nst :dependencies
  (asdf closer-mop org-sampler) :source
  (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file nst-manual-tests :system-name
  nst-manual-tests :dependencies (asdf asdf-nst nst nst-selftest-utils) :source
  (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file nst-meta-tests :system-name nst-meta-tests
  :dependencies (asdf asdf-nst nst nst-selftest-utils) :source
  (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file nst-mop-utils :system-name nst-mop-utils
  :dependencies (asdf closer-mop nst) :source
  (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file nst-selftest-utils :system-name
  nst-selftest-utils :dependencies (asdf nst) :source
  (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file nst-simple-tests :system-name
  nst-simple-tests :dependencies (asdf asdf-nst nst nst-selftest-utils) :source
  (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file nst-test :system-name nst-test :dependencies
  (asdf asdf-nst nst nst-meta-tests nst-simple-tests) :source
  (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-nst :system-file nst-test-jenkins :system-name
  nst-test-jenkins :dependencies (asdf asdf-nst nst nst-test) :source
  (("git" "https://github.com/jphmrst/cl-nst.git")))
 (:ql-project cl-ntp-client :system-file cl-ntp-client :system-name
  cl-ntp-client :dependencies (alexandria asdf usocket) :source
  (("git" "https://github.com/varjagg/cl-ntp-client.git")))
 (:ql-project cl-ntriples :system-file cl-ntriples :system-name cl-ntriples
  :dependencies (alexandria asdf) :source
  (("mercurial" "https://bitbucket.org/vityok/cl-ntriples")))
 (:ql-project cl-nxt :system-file nxt :system-name nxt :dependencies
  (babel cffi static-vectors) :source
  (("git" "https://github.com/woudshoo/cl-nxt.git")))
 (:ql-project cl-nxt :system-file nxt-proxy :system-name nxt-proxy
  :dependencies (nxt usocket) :source
  (("git" "https://github.com/woudshoo/cl-nxt.git")))
 (:ql-project cl-oauth :system-file cl-oauth :system-name cl-oauth
  :dependencies
  (alexandria anaphora babel cl-base64 closer-mop drakma f-underscore
   hunchentoot ironclad puri split-sequence trivial-garbage)
  :source (("git" "https://github.com/skypher/cl-oauth.git")))
 (:ql-project cl-oauth :system-file cl-oauth :system-name cl-oauth.tests
  :dependencies (cl-oauth fiveam) :source
  (("git" "https://github.com/skypher/cl-oauth.git")))
 (:ql-project cl-oclapi :system-file cl-oclapi :system-name cl-oclapi
  :dependencies (alexandria asdf cffi cl-annot cl-reexport) :source
  (("git" "https://github.com/gos-k/cl-oclapi.git")))
 (:ql-project cl-oclapi :system-file cl-oclapi-test :system-name cl-oclapi-test
  :dependencies (asdf cl-annot cl-oclapi prove prove-asdf) :source
  (("git" "https://github.com/gos-k/cl-oclapi.git")))
 (:ql-project cl-octet-streams :system-file cl-octet-streams :system-name
  cl-octet-streams :dependencies (asdf trivial-gray-streams) :source
  (("git" "https://codeberg.org/glv/cl-octet-streams.git")))
 (:ql-project cl-octet-streams :system-file cl-octet-streams :system-name
  cl-octet-streams/tests :dependencies (cl-octet-streams fiveam) :source
  (("git" "https://codeberg.org/glv/cl-octet-streams.git")))
 (:ql-project cl-ode :system-file cl-ode :system-name cl-ode :dependencies
  (cffi) :source (("git" "https://github.com/BradWBeer/cl-ode.git")))
 (:ql-project cl-odesk :system-file odesk :system-name odesk :dependencies
  (alexandria cl-ppcre drakma iterate md5 split-sequence) :source
  (("git" "https://github.com/dym/cl-odesk.git")))
 (:ql-project cl-ohm :system-file cl-ohm :system-name cl-ohm :dependencies
  (alexandria asdf cl-redis closer-mop) :source
  (("git" "https://github.com/rudolfochrist/cl-ohm.git")))
 (:ql-project cl-ohm :system-file cl-ohm :system-name cl-ohm/test :dependencies
  (cl-ohm fiveam) :source
  (("git" "https://github.com/rudolfochrist/cl-ohm.git")))
 (:ql-project cl-oju :system-file cl-oju :system-name cl-oju :dependencies
  (1am asdf) :source (("git" "https://github.com/eigenhombre/cl-oju.git")))
 (:ql-project cl-oju :system-file cl-oju :system-name cl-oju/test :dependencies
  (1am cl-oju) :source (("git" "https://github.com/eigenhombre/cl-oju.git")))
 (:ql-project cl-olefs :system-file cl-olefs :system-name cl-olefs
  :dependencies nil :source (("git" "http://logand.com/git/cl-olefs.git")))
 (:ql-project cl-one-time-passwords :system-file cl-one-time-passwords
  :system-name cl-one-time-passwords :dependencies (ironclad) :source
  (("git" "https://github.com/bhyde/cl-one-time-passwords.git")))
 (:ql-project cl-one-time-passwords :system-file cl-one-time-passwords-test
  :system-name cl-one-time-passwords-test :dependencies
  (cl-one-time-passwords fiveam) :source
  (("git" "https://github.com/bhyde/cl-one-time-passwords.git")))
 (:ql-project cl-online-learning :system-file cl-online-learning :system-name
  cl-online-learning :dependencies (asdf cl-libsvm-format cl-store) :source
  (("git" "https://github.com/masatoi/cl-online-learning.git")))
 (:ql-project cl-online-learning :system-file cl-online-learning-test
  :system-name cl-online-learning-test :dependencies
  (asdf cl-online-learning prove prove-asdf) :source
  (("git" "https://github.com/masatoi/cl-online-learning.git")))
 (:ql-project cl-openal :system-file cl-alc :system-name cl-alc :dependencies
  (asdf cffi cl-openal) :source
  (("git" "https://github.com/zkat/cl-openal.git")))
 (:ql-project cl-openal :system-file cl-alut :system-name cl-alut :dependencies
  (asdf cffi cl-openal) :source
  (("git" "https://github.com/zkat/cl-openal.git")))
 (:ql-project cl-openal :system-file cl-openal :system-name cl-openal
  :dependencies (alexandria asdf cffi) :source
  (("git" "https://github.com/zkat/cl-openal.git")))
 (:ql-project cl-openal :system-file cl-openal-examples :system-name
  cl-openal-examples :dependencies (asdf cffi cl-alc cl-alut cl-openal) :source
  (("git" "https://github.com/zkat/cl-openal.git")))
 (:ql-project cl-openapi-parser :system-file openapi-parser :system-name
  openapi-parser :dependencies
  (alexandria asdf cl-change-case cl-package-locks cl-yaml closer-mop esrap str
   trivia trivial-types)
  :source (("git" "https://github.com/pokepay/cl-openapi-parser.git")))
 (:ql-project cl-openapi-parser :system-file openapi-parser :system-name
  openapi-parser-tests :dependencies (openapi-parser rove) :source
  (("git" "https://github.com/pokepay/cl-openapi-parser.git")))
 (:ql-project cl-opencl :system-file cl-opencl :system-name cl-opencl
  :dependencies (asdf cffi cffi-grovel) :source
  (("git" "https://github.com/ghollisjr/cl-opencl.git")))
 (:ql-project cl-opencl-utils :system-file cl-opencl-utils :system-name
  cl-opencl-utils :dependencies (asdf cl-opencl) :source
  (("git" "https://github.com/ghollisjr/cl-opencl-utils.git")))
 (:ql-project cl-opengl :system-file cl-glu :system-name cl-glu :dependencies
  (asdf cffi cl-opengl) :source
  (("git" "https://github.com/3b/cl-opengl.git")))
 (:ql-project cl-opengl :system-file cl-glut :system-name cl-glut :dependencies
  (alexandria asdf cffi cl-opengl) :source
  (("git" "https://github.com/3b/cl-opengl.git")))
 (:ql-project cl-opengl :system-file cl-glut-examples :system-name
  cl-glut-examples :dependencies (asdf cffi cl-glu cl-glut cl-opengl) :source
  (("git" "https://github.com/3b/cl-opengl.git")))
 (:ql-project cl-opengl :system-file cl-opengl :system-name cl-opengl
  :dependencies (alexandria asdf cffi float-features) :source
  (("git" "https://github.com/3b/cl-opengl.git")))
 (:ql-project cl-opengl :system-file cl-opengl :system-name cl-opengl/es2
  :dependencies (alexandria cffi float-features) :source
  (("git" "https://github.com/3b/cl-opengl.git")))
 (:ql-project cl-opensearch-query-builder :system-file
  cl-opensearch-query-builder :system-name cl-opensearch-query-builder
  :dependencies (asdf com.inuoe.jzon) :source
  (("git"
    "https://github.com/ChristopherBilg/cl-opensearch-query-builder.git")))
 (:ql-project cl-openstack-client :system-file cl-openstack-client :system-name
  cl-openstack-client :dependencies
  (alexandria asdf cl-json drakma local-time uri-template) :source
  (("git" "https://opendev.org/x/cl-openstack-client.git")))
 (:ql-project cl-openstack-client :system-file cl-openstack-client-test
  :system-name cl-openstack-client-test :dependencies
  (asdf chunga cl-openstack-client cl-ppcre drakma fiveam flexi-streams
   local-time trivial-gray-streams)
  :source (("git" "https://opendev.org/x/cl-openstack-client.git")))
 (:ql-project cl-opsresearch :system-file cl-opsresearch :system-name
  cl-opsresearch :dependencies (cffi) :source
  (("git" "https://github.com/opsresearch/cl-opsresearch.git")))
 (:ql-project cl-opsresearch :system-file or-cluster :system-name or-cluster
  :dependencies (cl-opsresearch drakma hunchentoot) :source
  (("git" "https://github.com/opsresearch/cl-opsresearch.git")))
 (:ql-project cl-opsresearch :system-file or-fann :system-name or-fann
  :dependencies (cffi cl-opsresearch) :source
  (("git" "https://github.com/opsresearch/cl-opsresearch.git")))
 (:ql-project cl-opsresearch :system-file or-glpk :system-name or-glpk
  :dependencies (cffi cl-opsresearch) :source
  (("git" "https://github.com/opsresearch/cl-opsresearch.git")))
 (:ql-project cl-opsresearch :system-file or-gsl :system-name or-gsl
  :dependencies (cffi cl-opsresearch) :source
  (("git" "https://github.com/opsresearch/cl-opsresearch.git")))
 (:ql-project cl-opsresearch :system-file or-test :system-name or-test
  :dependencies (cl-opsresearch fiveam or-fann or-glpk or-gsl) :source
  (("git" "https://github.com/opsresearch/cl-opsresearch.git")))
 (:ql-project cl-opus :system-file cl-opus :system-name cl-opus :dependencies
  (asdf cffi documentation-utils static-vectors trivial-features
   trivial-garbage)
  :source (("git" "https://github.com/Shirakumo/cl-opus.git")))
 (:ql-project cl-org-mode :system-file cl-org-mode :system-name cl-org-mode
  :dependencies (alexandria closer-mop) :source
  (("git" "https://gitlab.common-lisp.net/cl-org-mode/cl-org-mode.git")))
 (:ql-project cl-out123 :system-file cl-out123 :system-name cl-out123
  :dependencies
  (asdf bordeaux-threads cffi documentation-utils trivial-features
   trivial-garbage)
  :source (("git" "https://github.com/Shirakumo/cl-out123.git")))
 (:ql-project cl-pack :system-file cl-pack :system-name cl-pack :dependencies
  (asdf ieee-floats) :source
  (("git" "https://github.com/dballard/cl-pack.git")))
 (:ql-project cl-pack :system-file cl-pack :system-name cl-pack-test
  :dependencies (cl-pack) :source
  (("git" "https://github.com/dballard/cl-pack.git")))
 (:ql-project cl-package-locks :system-file cl-package-locks :system-name
  cl-package-locks :dependencies nil :source
  (("git" "https://github.com/elliottjohnson/cl-package-locks.git")))
 (:ql-project cl-pango :system-file cl-pango :system-name cl-pango
  :dependencies (cffi cl-cairo2 xmls) :source
  (("git" "https://github.com/BradWBeer/cl-pango.git")))
 (:ql-project cl-parallel :system-file cl-parallel :system-name cl-parallel
  :dependencies (bordeaux-threads) :source
  (("git" "https://github.com/nahiluhmot/cl-parallel.git")))
 (:ql-project cl-parser-combinators :system-file parser-combinators
  :system-name parser-combinators :dependencies (alexandria iterate) :source
  (("git" "https://github.com/Ramarren/cl-parser-combinators.git")))
 (:ql-project cl-parser-combinators :system-file parser-combinators-cl-ppcre
  :system-name parser-combinators-cl-ppcre :dependencies
  (alexandria cl-ppcre iterate parser-combinators) :source
  (("git" "https://github.com/Ramarren/cl-parser-combinators.git")))
 (:ql-project cl-parser-combinators :system-file parser-combinators-debug
  :system-name parser-combinators-debug :dependencies
  (cl-containers parser-combinators) :source
  (("git" "https://github.com/Ramarren/cl-parser-combinators.git")))
 (:ql-project cl-parser-combinators :system-file parser-combinators-tests
  :system-name parser-combinators-tests :dependencies
  (alexandria hu.dwim.stefil infix iterate parser-combinators) :source
  (("git" "https://github.com/Ramarren/cl-parser-combinators.git")))
 (:ql-project cl-pass :system-file cl-pass :system-name cl-pass :dependencies
  (asdf ironclad split-sequence trivial-utf-8) :source
  (("git" "https://github.com/eudoxia0/cl-pass.git")))
 (:ql-project cl-pass :system-file cl-pass-test :system-name cl-pass-test
  :dependencies (asdf cl-pass fiveam) :source
  (("git" "https://github.com/eudoxia0/cl-pass.git")))
 (:ql-project cl-pattern :system-file cl-pattern :system-name cl-pattern
  :dependencies (alexandria cl-annot cl-syntax cl-syntax-annot) :source
  (("git" "https://github.com/arielnetworks/cl-pattern.git")))
 (:ql-project cl-pattern :system-file cl-pattern-benchmark :system-name
  cl-pattern-benchmark :dependencies (cl-pattern) :source
  (("git" "https://github.com/arielnetworks/cl-pattern.git")))
 (:ql-project cl-patterns :system-file cl-patterns :system-name cl-patterns
  :dependencies
  (alexandria asdf bordeaux-threads closer-mop dissect local-time mutility
   named-readtables)
  :source (("git" "https://github.com/defaultxr/cl-patterns.git")))
 (:ql-project cl-patterns :system-file cl-patterns :system-name
  cl-patterns/debug :dependencies (cl-patterns) :source
  (("git" "https://github.com/defaultxr/cl-patterns.git")))
 (:ql-project cl-patterns :system-file cl-patterns :system-name
  cl-patterns/generic-cl :dependencies (cl-patterns generic-cl) :source
  (("git" "https://github.com/defaultxr/cl-patterns.git")))
 (:ql-project cl-patterns :system-file cl-patterns :system-name
  cl-patterns/midifile :dependencies (cl-patterns midi) :source
  (("git" "https://github.com/defaultxr/cl-patterns.git")))
 (:ql-project cl-patterns :system-file cl-patterns :system-name
  cl-patterns/supercollider :dependencies (cl-collider cl-patterns) :source
  (("git" "https://github.com/defaultxr/cl-patterns.git")))
 (:ql-project cl-patterns :system-file cl-patterns :system-name
  cl-patterns/tests :dependencies (cl-patterns cl-ppcre fiveam mutility)
  :source (("git" "https://github.com/defaultxr/cl-patterns.git")))
 (:ql-project cl-paymill :system-file cl-paymill :system-name cl-paymill
  :dependencies (cl+ssl drakma st-json) :source
  (("git" "https://github.com/a0-prw/cl-paymill.git")))
 (:ql-project cl-paypal :system-file cl-paypal :system-name cl-paypal
  :dependencies (cl-ppcre drakma hunchentoot) :source
  (("git" "https://github.com/standin000/cl-paypal.git")))
 (:ql-project cl-pcg :system-file cl-pcg :system-name cl-pcg :dependencies
  (asdf) :source (("mercurial" "https://hg.stevelosh.com/cl-pcg")))
 (:ql-project cl-pcg :system-file cl-pcg.test :system-name cl-pcg.test
  :dependencies (1am asdf cl-pcg) :source
  (("mercurial" "https://hg.stevelosh.com/cl-pcg")))
 (:ql-project cl-pdf :system-file cl-pdf :system-name cl-pdf :dependencies
  (asdf iterate uiop zpb-ttf) :source
  (("git" "https://github.com/mbattyani/cl-pdf.git")))
 (:ql-project cl-pdf :system-file cl-pdf-parser :system-name cl-pdf-parser
  :dependencies (asdf cl-pdf) :source
  (("git" "https://github.com/mbattyani/cl-pdf.git")))
 (:ql-project cl-peppol :system-file peppol :system-name peppol :dependencies
  (asdf cxml xpath) :source
  (("git" "https://github.com/mmontone/cl-peppol.git")))
 (:ql-project cl-performance-tuning-helper :system-file
  cl-performance-tuning-helper :system-name cl-performance-tuning-helper
  :dependencies nil :source
  (("git" "https://github.com/ichimal/cl-performance-tuning-helper.git")))
 (:ql-project cl-performance-tuning-helper :system-file
  cl-performance-tuning-helper-test :system-name
  cl-performance-tuning-helper-test :dependencies
  (cl-performance-tuning-helper rt) :source
  (("git" "https://github.com/ichimal/cl-performance-tuning-helper.git")))
 (:ql-project cl-permutation :system-file cl-permutation :system-name
  cl-permutation :dependencies
  (alexandria asdf bordeaux-fft cl-algebraic-data-type cl-cont closer-mop
   iterate priority-queue uiop)
  :source (("git" "https://github.com/tarballs-are-good/cl-permutation.git")))
 (:ql-project cl-permutation :system-file cl-permutation-examples :system-name
  cl-permutation-examples :dependencies (alexandria asdf cl-permutation)
  :source (("git" "https://github.com/tarballs-are-good/cl-permutation.git")))
 (:ql-project cl-permutation :system-file cl-permutation-tests :system-name
  cl-permutation-tests :dependencies
  (asdf cl-permutation cl-permutation-examples fiasco) :source
  (("git" "https://github.com/tarballs-are-good/cl-permutation.git")))
 (:ql-project cl-photo :system-file cl-photo :system-name cl-photo
  :dependencies (kmrcl) :source (("kmr-git" "cl-photo")))
 (:ql-project cl-photo :system-file cl-photo-tests :system-name cl-photo-tests
  :dependencies (cl-photo rt) :source (("kmr-git" "cl-photo")))
 (:ql-project cl-pixman :system-file pixman :system-name pixman :dependencies
  (alexandria cffi trivial-garbage) :source
  (("git" "https://github.com/ReinUsesLisp/cl-pixman.git")))
 (:ql-project cl-plplot :system-file cl-plplot :system-name cl-plplot
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/HazenBabcock/cl-plplot.git")))
 (:ql-project cl-plplot :system-file cl-plplot :system-name plplot-examples
  :dependencies (cl-plplot png) :source
  (("git" "https://github.com/HazenBabcock/cl-plplot.git")))
 (:ql-project cl-plumbing :system-file cl-plumbing :system-name cl-plumbing
  :dependencies (asdf bordeaux-threads iterate trivial-gray-streams) :source
  (("git" "https://github.com/smithzvk/cl-plumbing.git")))
 (:ql-project cl-plumbing :system-file cl-plumbing-test :system-name
  cl-plumbing-test :dependencies (asdf cl-plumbing iterate stefil) :source
  (("git" "https://github.com/smithzvk/cl-plumbing.git")))
 (:ql-project cl-plus-ssl-osx-fix :system-file cl-plus-ssl-osx-fix :system-name
  cl-plus-ssl-osx-fix :dependencies (40ants-asdf-system asdf cl+ssl) :source
  (("git" "https://github.com/40ants/cl-plus-ssl-osx-fix.git")))
 (:ql-project cl-plus-ssl-osx-fix :system-file cl-plus-ssl-osx-fix-ci
  :system-name cl-plus-ssl-osx-fix-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/cl-plus-ssl-osx-fix.git")))
 (:ql-project cl-plus-ssl-osx-fix :system-file cl-plus-ssl-osx-fix-docs
  :system-name cl-plus-ssl-osx-fix-docs :dependencies
  (40ants-doc asdf cl-plus-ssl-osx-fix docs-config named-readtables
   pythonic-string-reader)
  :source (("git" "https://github.com/40ants/cl-plus-ssl-osx-fix.git")))
 (:ql-project cl-plus-ssl-osx-fix :system-file cl-plus-ssl-osx-fix-tests
  :system-name cl-plus-ssl-osx-fix-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/cl-plus-ssl-osx-fix.git")))
 (:ql-project cl-ply :system-file cl-ply :system-name cl-ply :dependencies
  (cl-pattern cl-ppcre) :source
  (("git" "https://github.com/takagi/cl-ply.git")))
 (:ql-project cl-ply :system-file cl-ply-test :system-name cl-ply-test
  :dependencies (cl-ply prove prove-asdf) :source
  (("git" "https://github.com/takagi/cl-ply.git")))
 (:ql-project cl-png :system-file bmp-test :system-name bmp-test :dependencies
  (asdf png) :source (("git" "https://github.com/sharplispers/cl-png.git")))
 (:ql-project cl-png :system-file image-test :system-name image-test
  :dependencies (asdf png) :source
  (("git" "https://github.com/sharplispers/cl-png.git")))
 (:ql-project cl-png :system-file ops-test :system-name ops-test :dependencies
  (asdf png) :source (("git" "https://github.com/sharplispers/cl-png.git")))
 (:ql-project cl-png :system-file png :system-name png :dependencies
  (asdf cffi cffi-grovel) :source
  (("git" "https://github.com/sharplispers/cl-png.git")))
 (:ql-project cl-png :system-file png-test :system-name png-test :dependencies
  (asdf png) :source (("git" "https://github.com/sharplispers/cl-png.git")))
 (:ql-project cl-poker-eval :system-file cl-poker-eval :system-name
  cl-poker-eval :dependencies nil :source
  (("git" "https://github.com/jperson/cl-poker-eval.git")))
 (:ql-project cl-pop :system-file cl-pop :system-name cl-pop :dependencies
  (cl-ppcre usocket) :source
  (("https" "https://common-lisp.net/project/cl-pop/cl-pop.tar.gz")))
 (:ql-project cl-portaudio :system-file cl-portaudio :system-name cl-portaudio
  :dependencies (asdf cffi ffa) :source
  (("git" "https://github.com/filonenko-mikhail/cl-portaudio.git")))
 (:ql-project cl-portaudio :system-file cl-portaudio :system-name
  cl-portaudio/doc :dependencies (atdoc cl-portaudio) :source
  (("git" "https://github.com/filonenko-mikhail/cl-portaudio.git")))
 (:ql-project cl-portaudio :system-file cl-portaudio :system-name
  cl-portaudio/tests :dependencies (cl-portaudio) :source
  (("git" "https://github.com/filonenko-mikhail/cl-portaudio.git")))
 (:ql-project cl-portmanteau :system-file portmanteau :system-name portmanteau
  :dependencies (asdf vom) :source
  (("git" "https://github.com/traut/cl-portmanteau.git")))
 (:ql-project cl-portmanteau :system-file portmanteau-tests :system-name
  portmanteau-tests :dependencies (asdf fiveam portmanteau) :source
  (("git" "https://github.com/traut/cl-portmanteau.git")))
 (:ql-project cl-postgres-datetime :system-file cl-postgres-datetime
  :system-name cl-postgres-datetime :dependencies
  (asdf cl-postgres local-time simple-date) :source
  (("git" "https://github.com/chaitanyagupta/cl-postgres-datetime.git")))
 (:ql-project cl-postgres-plus-uuid :system-file cl-postgres-plus-uuid
  :system-name cl-postgres-plus-uuid :dependencies (asdf cl-postgres uuid)
  :source
  (("git" "https://github.com/michaeljforster/cl-postgres-plus-uuid.git")))
 (:ql-project cl-ppcre :system-file cl-ppcre :system-name cl-ppcre
  :dependencies (asdf) :source (("ediware-http" "cl-ppcre")))
 (:ql-project cl-ppcre :system-file cl-ppcre-unicode :system-name
  cl-ppcre-unicode :dependencies (asdf cl-ppcre cl-unicode) :source
  (("ediware-http" "cl-ppcre")))
 (:ql-project cl-ppcre :system-file cl-ppcre-unicode :system-name
  cl-ppcre-unicode/test :dependencies (cl-ppcre cl-ppcre-unicode flexi-streams)
  :source (("ediware-http" "cl-ppcre")))
 (:ql-project cl-ppcre :system-file cl-ppcre :system-name cl-ppcre/test
  :dependencies (cl-ppcre flexi-streams) :source (("ediware-http" "cl-ppcre")))
 (:ql-project cl-prevalence :system-file cl-prevalence :system-name
  cl-prevalence :dependencies (asdf moptilities s-sysdeps s-xml) :source
  (("git" "https://github.com/40ants/cl-prevalence.git")))
 (:ql-project cl-prevalence :system-file cl-prevalence-test :system-name
  cl-prevalence-test :dependencies (asdf cl-prevalence find-port fiveam)
  :source (("git" "https://github.com/40ants/cl-prevalence.git")))
 (:ql-project cl-primality :system-file cl-primality :system-name cl-primality
  :dependencies (iterate) :source
  (("git" "https://github.com/smithzvk/cl-primality.git")))
 (:ql-project cl-primality :system-file cl-primality-test :system-name
  cl-primality-test :dependencies (cl-primality iterate stefil) :source
  (("git" "https://github.com/smithzvk/cl-primality.git")))
 (:ql-project cl-prime-maker :system-file cl-prime-maker :system-name
  cl-prime-maker :dependencies nil :source
  (("git" "https://github.com/nakrakiiya/cl-prime-maker.git")))
 (:ql-project cl-progress-bar :system-file cl-progress-bar :system-name
  cl-progress-bar :dependencies
  (asdf bordeaux-threads documentation-utils-extensions) :source
  (("git" "https://github.com/sirherrbatka/cl-progress-bar.git")))
 (:ql-project cl-project :system-file cl-project :system-name cl-project
  :dependencies (asdf cl-emb cl-ppcre local-time prove uiop) :source
  (("git" "https://github.com/fukamachi/cl-project.git")))
 (:ql-project cl-project :system-file cl-project-test :system-name
  cl-project-test :dependencies
  (asdf caveman2 cl-project prove prove-asdf uiop) :source
  (("git" "https://github.com/fukamachi/cl-project.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2 :system-name cl-prolog2
  :dependencies
  (alexandria asdf external-program trivia trivia.quasiquote trivial-garbage)
  :source (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.bprolog :system-name
  cl-prolog2.bprolog :dependencies (asdf cl-prolog2) :source
  (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.bprolog.test :system-name
  cl-prolog2.bprolog.test :dependencies
  (asdf cl-prolog2.bprolog cl-prolog2.test) :source
  (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.gprolog :system-name
  cl-prolog2.gprolog :dependencies (asdf cl-prolog2) :source
  (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.gprolog.test :system-name
  cl-prolog2.gprolog.test :dependencies
  (asdf cl-prolog2.gprolog cl-prolog2.test) :source
  (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.swi :system-name
  cl-prolog2.swi :dependencies (asdf cl-prolog2) :source
  (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.swi.test :system-name
  cl-prolog2.swi.test :dependencies (asdf cl-prolog2.swi cl-prolog2.test)
  :source (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.test :system-name
  cl-prolog2.test :dependencies (asdf cl-prolog2 fiveam iterate) :source
  (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.xsb :system-name
  cl-prolog2.xsb :dependencies (asdf cl-prolog2) :source
  (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.xsb.test :system-name
  cl-prolog2.xsb.test :dependencies (asdf cl-prolog2.test cl-prolog2.xsb)
  :source (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.yap :system-name
  cl-prolog2.yap :dependencies (asdf cl-prolog2) :source
  (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-prolog2 :system-file cl-prolog2.yap.test :system-name
  cl-prolog2.yap.test :dependencies (asdf cl-prolog2.test cl-prolog2.yap)
  :source (("git" "https://github.com/cl-model-languages/cl-prolog2.git")))
 (:ql-project cl-protobufs :system-file cl-protobufs.asdf :system-name
  cl-protobufs.asdf :dependencies (asdf) :source
  (("git" "https://github.com/qitab/cl-protobufs.git")))
 (:ql-project cl-pslib :system-file cl-pslib :system-name cl-pslib
  :dependencies (alexandria asdf cffi cl-colors2 cl-ppcre-unicode) :source
  (("git" "https://notabug.org/cage/cl-pslib.git")))
 (:ql-project cl-pslib-barcode :system-file cl-pslib-barcode :system-name
  cl-pslib-barcode :dependencies
  (alexandria asdf cffi cl-colors2 cl-ppcre-unicode cl-pslib) :source
  (("git" "https://notabug.org/cage/cl-pslib-barcode.git")))
 (:ql-project cl-punch :system-file cl-punch :system-name cl-punch
  :dependencies (asdf cl-syntax) :source
  (("git" "https://github.com/windymelt/cl-punch.git")))
 (:ql-project cl-punch :system-file cl-punch-test :system-name cl-punch-test
  :dependencies (asdf cl-punch prove prove-asdf) :source
  (("git" "https://github.com/windymelt/cl-punch.git")))
 (:ql-project cl-python :system-file clpython :system-name clpython
  :dependencies (asdf cl-fad closer-mop yacc) :source
  (("git" "https://github.com/metawilm/cl-python.git")))
 (:ql-project cl-python :system-file clpython :system-name clpython/basic
  :dependencies (closer-mop) :source
  (("git" "https://github.com/metawilm/cl-python.git")))
 (:ql-project cl-python :system-file clpython :system-name clpython/compiler
  :dependencies (cl-fad closer-mop yacc) :source
  (("git" "https://github.com/metawilm/cl-python.git")))
 (:ql-project cl-python :system-file clpython :system-name clpython/contrib
  :dependencies (cl-fad closer-mop yacc) :source
  (("git" "https://github.com/metawilm/cl-python.git")))
 (:ql-project cl-python :system-file clpython :system-name clpython/lib
  :dependencies (cl-fad closer-mop yacc) :source
  (("git" "https://github.com/metawilm/cl-python.git")))
 (:ql-project cl-python :system-file clpython :system-name clpython/parser
  :dependencies (closer-mop yacc) :source
  (("git" "https://github.com/metawilm/cl-python.git")))
 (:ql-project cl-python :system-file clpython :system-name clpython/runtime
  :dependencies (cl-fad closer-mop) :source
  (("git" "https://github.com/metawilm/cl-python.git")))
 (:ql-project cl-python :system-file clpython :system-name clpython/test
  :dependencies (clpython ptester) :source
  (("git" "https://github.com/metawilm/cl-python.git")))
 (:ql-project cl-qprint :system-file cl-qprint :system-name cl-qprint
  :dependencies (flexi-streams) :source
  (("git" "https://github.com/eugeneia/cl-qprint.git")))
 (:ql-project cl-qrencode :system-file cl-qrencode :system-name cl-qrencode
  :dependencies (asdf zpng) :source
  (("git" "https://github.com/jnjcc/cl-qrencode.git")))
 (:ql-project cl-qrencode :system-file cl-qrencode-test :system-name
  cl-qrencode-test :dependencies (asdf cl-qrencode lisp-unit) :source
  (("git" "https://github.com/jnjcc/cl-qrencode.git")))
 (:ql-project cl-quickcheck :system-file cl-quickcheck :system-name
  cl-quickcheck :dependencies (asdf) :source
  (("git" "https://github.com/mcandre/cl-quickcheck")))
 (:ql-project cl-rabbit :system-file cl-rabbit :system-name cl-rabbit
  :dependencies (alexandria asdf babel cffi cffi-grovel cffi-libffi cl-ppcre)
  :source (("git" "https://github.com/lokedhs/cl-rabbit.git")))
 (:ql-project cl-rabbit :system-file cl-rabbit-tests :system-name
  cl-rabbit-tests :dependencies (asdf cl-rabbit fiveam) :source
  (("git" "https://github.com/lokedhs/cl-rabbit.git")))
 (:ql-project cl-rail :system-file rail :system-name rail :dependencies nil
  :source (("git" "https://github.com/marad/cl-rail.git")))
 (:ql-project cl-rail :system-file rail :system-name rail-test :dependencies
  (fiasco rail) :source (("git" "https://github.com/marad/cl-rail.git")))
 (:ql-project cl-randist :system-file cl-randist :system-name cl-randist
  :dependencies (asdf) :source
  (("git" "https://github.com/lvaruzza/cl-randist.git")))
 (:ql-project cl-random-forest :system-file cl-random-forest :system-name
  cl-random-forest :dependencies
  (alexandria asdf cl-libsvm-format cl-online-learning lparallel) :source
  (("git" "https://github.com/masatoi/cl-random-forest.git")))
 (:ql-project cl-random-forest :system-file cl-random-forest-test :system-name
  cl-random-forest-test :dependencies
  (asdf cl-random-forest prove prove-asdf trivial-garbage uiop) :source
  (("git" "https://github.com/masatoi/cl-random-forest.git")))
 (:ql-project cl-rashell :system-file org.melusina.rashell :system-name
  org.melusina.rashell :dependencies (alexandria asdf cl-ppcre parse-float)
  :source (("git" "https://github.com/melusina-org/cl-rashell.git")))
 (:ql-project cl-rashell :system-file org.melusina.rashell :system-name
  org.melusina.rashell/development :dependencies (org.melusina.atelier) :source
  (("git" "https://github.com/melusina-org/cl-rashell.git")))
 (:ql-project cl-rashell :system-file org.melusina.rashell :system-name
  org.melusina.rashell/testsuite :dependencies
  (org.melusina.confidence org.melusina.rashell) :source
  (("git" "https://github.com/melusina-org/cl-rashell.git")))
 (:ql-project cl-rcfiles :system-file com.dvlsoft.rcfiles :system-name
  com.dvlsoft.rcfiles :dependencies nil :source
  (("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/cl-rcfiles.tar.gz")))
 (:ql-project cl-rdfxml :system-file cl-rdfxml :system-name cl-rdfxml
  :dependencies (cxml puri) :source
  (("git" "https://github.com/tayloj/cl-rdfxml.git")))
 (:ql-project cl-rdkafka :system-file cl-rdkafka :system-name cl-rdkafka
  :dependencies
  (asdf bordeaux-threads cffi cffi-grovel lparallel trivial-garbage) :source
  (("git" "https://github.com/SahilKang/cl-rdkafka.git")))
 (:ql-project cl-rdkafka :system-file cl-rdkafka :system-name cl-rdkafka/test
  :dependencies (1am babel cl-rdkafka) :source
  (("git" "https://github.com/SahilKang/cl-rdkafka.git")))
 (:ql-project cl-readline :system-file cl-readline :system-name cl-readline
  :dependencies (alexandria asdf cffi) :source
  (("git" "https://github.com/vindarel/cl-readline.git")))
 (:ql-project cl-recaptcha :system-file cl-recaptcha :system-name cl-recaptcha
  :dependencies (cl-ppcre drakma flexi-streams jsown) :source
  (("git" "https://github.com/madnificent/cl-recaptcha/")))
 (:ql-project cl-redis :system-file cl-redis :system-name cl-redis
  :dependencies (asdf babel cl-ppcre flexi-streams rutils usocket) :source
  (("git" "https://github.com/vseloved/cl-redis.git")))
 (:ql-project cl-redis :system-file cl-redis :system-name cl-redis-test
  :dependencies (bordeaux-threads cl-redis flexi-streams should-test) :source
  (("git" "https://github.com/vseloved/cl-redis.git")))
 (:ql-project cl-reexport :system-file cl-reexport :system-name cl-reexport
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/takagi/cl-reexport.git")))
 (:ql-project cl-reexport :system-file cl-reexport-test :system-name
  cl-reexport-test :dependencies (asdf cl-reexport prove) :source
  (("git" "https://github.com/takagi/cl-reexport.git")))
 (:ql-project cl-renderdoc :system-file cl-renderdoc :system-name cl-renderdoc
  :dependencies (asdf cl-autowrap) :source
  (("git" "https://github.com/djeis97/cl-renderdoc.git")))
 (:ql-project cl-replica :system-file cl-replica :system-name cl-replica
  :dependencies (asdf) :source
  (("git" "https://github.com/IgSokolov/cl-replica.git")))
 (:ql-project cl-replica :system-file cl-replica :system-name cl-replica/test
  :dependencies (cl-replica) :source
  (("git" "https://github.com/IgSokolov/cl-replica.git")))
 (:ql-project cl-rethinkdb :system-file cl-rethinkdb :system-name cl-rethinkdb
  :dependencies
  (blackbird cl-async cl-base64 cl-hash-util cl-ppcre event-glue fast-io
   jonathan local-time vom)
  :source (("git" "https://github.com/orthecreedence/cl-rethinkdb.git")))
 (:ql-project cl-rethinkdb :system-file cl-rethinkdb-test :system-name
  cl-rethinkdb-test :dependencies
  (blackbird cl-async cl-ppcre cl-rethinkdb fiveam) :source
  (("git" "https://github.com/orthecreedence/cl-rethinkdb.git")))
 (:ql-project cl-rfc2047 :system-file cl-rfc2047 :system-name cl-rfc2047
  :dependencies (babel cl-base64) :source
  (("git" "https://github.com/eugeneia/cl-rfc2047.git")))
 (:ql-project cl-rfc2047 :system-file cl-rfc2047-test :system-name
  cl-rfc2047-test :dependencies (cl-ppcre cl-rfc2047 lift) :source
  (("git" "https://github.com/eugeneia/cl-rfc2047.git")))
 (:ql-project cl-rfc4251 :system-file cl-rfc4251 :system-name cl-rfc4251
  :dependencies (asdf trivial-gray-streams uiop) :source
  (("git" "https://github.com/dnaeon/cl-rfc4251.git")))
 (:ql-project cl-rfc4251 :system-file cl-rfc4251.test :system-name
  cl-rfc4251.test :dependencies (asdf cl-rfc4251 rove) :source
  (("git" "https://github.com/dnaeon/cl-rfc4251.git")))
 (:ql-project cl-riff :system-file cl-riff :system-name cl-riff :dependencies
  (alexandria asdf) :source
  (("git" "https://github.com/RobBlackwell/cl-riff.git")))
 (:ql-project cl-rlimit :system-file cl-rlimit :system-name cl-rlimit
  :dependencies (cffi cffi-grovel) :source
  (("git" "https://github.com/guicho271828/cl-rlimit.git")))
 (:ql-project cl-rmath :system-file cl-rmath :system-name cl-rmath
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/tpapp/cl-rmath.git")))
 (:ql-project cl-routes :system-file routes :system-name routes :dependencies
  (iterate puri split-sequence) :source
  (("git" "https://github.com/archimag/cl-routes.git")))
 (:ql-project cl-routes :system-file routes :system-name routes-test
  :dependencies (lift routes) :source
  (("git" "https://github.com/archimag/cl-routes.git")))
 (:ql-project cl-rrd :system-file cl-rrd :system-name cl-rrd :dependencies
  (cffi) :source (("git" "https://github.com/hbock/cl-rrd.git")))
 (:ql-project cl-rrt :system-file cl-rrt :system-name cl-rrt :dependencies
  (alexandria anaphora asdf cl-syntax-annot iterate) :source
  (("git" "https://github.com/guicho271828/cl-rrt.git")))
 (:ql-project cl-rrt :system-file cl-rrt.benchmark :system-name
  cl-rrt.benchmark :dependencies
  (asdf cl-rrt cl-rrt.rtree cl-rrt.test fiveam vecto) :source
  (("git" "https://github.com/guicho271828/cl-rrt.git")))
 (:ql-project cl-rrt :system-file cl-rrt.rtree :system-name cl-rrt.rtree
  :dependencies
  (alexandria anaphora asdf cl-rrt cl-syntax-annot iterate spatial-trees
   spatial-trees.nns trivia)
  :source (("git" "https://github.com/guicho271828/cl-rrt.git")))
 (:ql-project cl-rrt :system-file cl-rrt.test :system-name cl-rrt.test
  :dependencies (asdf cl-rrt cl-rrt.rtree fiveam vecto) :source
  (("git" "https://github.com/guicho271828/cl-rrt.git")))
 (:ql-project cl-rss :system-file rss :system-name rss :dependencies
  (asdf aserve kmrcl xmls) :source (("kmr-git" "cl-rss")))
 (:ql-project cl-rsvg2 :system-file cl-rsvg2 :system-name cl-rsvg2
  :dependencies (asdf cffi cl-cairo2 cl-gtk2-glib trivial-gray-streams) :source
  (("git" "https://github.com/roerd/cl-rsvg2.git")))
 (:ql-project cl-rsvg2 :system-file cl-rsvg2-pixbuf :system-name
  cl-rsvg2-pixbuf :dependencies (asdf cl-gtk2-gdk cl-rsvg2) :source
  (("git" "https://github.com/roerd/cl-rsvg2.git")))
 (:ql-project cl-rsvg2 :system-file cl-rsvg2-test :system-name cl-rsvg2-test
  :dependencies (asdf cffi cl-rsvg2 fiveam) :source
  (("git" "https://github.com/roerd/cl-rsvg2.git")))
 (:ql-project cl-rules :system-file cl-rules :system-name cl-rules
  :dependencies (alexandria asdf cl-yaml) :source
  (("git" "https://github.com/Dimercel/cl-rules.git")))
 (:ql-project cl-rules :system-file cl-rules-test :system-name cl-rules-test
  :dependencies (asdf cl-rules prove prove-asdf) :source
  (("git" "https://github.com/Dimercel/cl-rules.git")))
 (:ql-project cl-s3 :system-file cl-s3 :system-name cl-s3 :dependencies
  (ironclad s-base64 s-http-client s-utils s-xml) :source
  (("git" "https://github.com/svenvc/cl-s3.git")))
 (:ql-project cl-sam :system-file cl-sam :system-name cl-sam :dependencies
  (deoxybyte-gzip deoxybyte-systems deoxybyte-unix) :source
  (("git" "https://github.com/keithj/cl-sam.git")))
 (:ql-project cl-sam :system-file cl-sam-test :system-name cl-sam-test
  :dependencies (cl-sam deoxybyte-io lift) :source
  (("git" "https://github.com/keithj/cl-sam.git")))
 (:ql-project cl-sandbox :system-file cl-sandbox :system-name cl-sandbox
  :dependencies (asdf) :source
  (("git" "https://github.com/MatthewRock/cl-sandbox.git")))
 (:ql-project cl-sandbox :system-file cl-sandbox :system-name cl-sandbox/tests
  :dependencies (cl-sandbox fiveam) :source
  (("git" "https://github.com/MatthewRock/cl-sandbox.git")))
 (:ql-project cl-sanitize :system-file sanitize :system-name sanitize
  :dependencies (cl-libxml2) :source
  (("git" "https://github.com/archimag/cl-sanitize.git")))
 (:ql-project cl-sanitize :system-file sanitize :system-name sanitize-test
  :dependencies (eos sanitize) :source
  (("git" "https://github.com/archimag/cl-sanitize.git")))
 (:ql-project cl-sasl :system-file cl-sasl :system-name cl-sasl :dependencies
  (asdf ironclad) :source
  (("latest-github-tag" "https://github.com/legoscia/cl-sasl") nil))
 (:ql-project cl-sat :system-file cl-sat :system-name cl-sat :dependencies
  (alexandria asdf iterate trivia trivial-features) :source
  (("git" "https://github.com/cl-model-languages/cl-sat.git")))
 (:ql-project cl-sat :system-file cl-sat.test :system-name cl-sat.test
  :dependencies (asdf cl-sat fiveam) :source
  (("git" "https://github.com/cl-model-languages/cl-sat.git")))
 (:ql-project cl-sat.glucose :system-file cl-sat.glucose :system-name
  cl-sat.glucose :dependencies
  (alexandria asdf cl-sat iterate trivia trivial-package-manager) :source
  (("git" "https://github.com/cl-model-languages/cl-sat.glucose.git")))
 (:ql-project cl-sat.glucose :system-file cl-sat.glucose.test :system-name
  cl-sat.glucose.test :dependencies (asdf cl-sat.glucose fiveam) :source
  (("git" "https://github.com/cl-model-languages/cl-sat.glucose.git")))
 (:ql-project cl-sat.minisat :system-file cl-sat.minisat :system-name
  cl-sat.minisat :dependencies
  (alexandria asdf cl-sat iterate trivia trivial-package-manager) :source
  (("git" "https://github.com/cl-model-languages/cl-sat.minisat.git")))
 (:ql-project cl-sat.minisat :system-file cl-sat.minisat.test :system-name
  cl-sat.minisat.test :dependencies (asdf cl-sat.minisat fiveam) :source
  (("git" "https://github.com/cl-model-languages/cl-sat.minisat.git")))
 (:ql-project cl-scram :system-file cl-scram :system-name cl-scram
  :dependencies (cl-base64 cl-sasl ironclad secure-random split-sequence)
  :source (("git" "https://github.com/mprelude/cl-scram.git")))
 (:ql-project cl-scribd :system-file cl-scribd :system-name cl-scribd
  :dependencies (cxml drakma ironclad) :source
  (("git" "https://github.com/jsmpereira/cl-scribd.git")))
 (:ql-project cl-scripting :system-file cl-scripting :system-name cl-scripting
  :dependencies (asdf cl-launch fare-utils) :source
  (("git" "https://github.com/fare/cl-scripting.git")))
 (:ql-project cl-scripting :system-file cl-scripting :system-name
  cl-scripting/test :dependencies nil :source
  (("git" "https://github.com/fare/cl-scripting.git")))
 (:ql-project cl-scrobbler :system-file cl-scrobbler :system-name cl-scrobbler
  :dependencies (arnesi cl-store drakma flexi-streams md5 st-json) :source
  (("git" "https://github.com/redline6561/cl-scrobbler.git")))
 (:ql-project cl-scrobbler :system-file cl-scrobbler :system-name
  cl-scrobbler-tests :dependencies (cl-scrobbler fiveam) :source
  (("git" "https://github.com/redline6561/cl-scrobbler.git")))
 (:ql-project cl-scsu :system-file cl-scsu :system-name cl-scsu :dependencies
  (alexandria asdf) :source
  (("git" "https://github.com/y2q-actionman/cl-scsu.git")))
 (:ql-project cl-scsu :system-file cl-scsu-test :system-name cl-scsu-test
  :dependencies (1am alexandria asdf cl-scsu) :source
  (("git" "https://github.com/y2q-actionman/cl-scsu.git")))
 (:ql-project cl-sdl2 :system-file sdl2 :system-name sdl2 :dependencies
  (alexandria asdf cl-autowrap cl-plus-c cl-ppcre trivial-channels
   trivial-features)
  :source (("git" "https://github.com/lispgames/cl-sdl2.git")))
 (:ql-project cl-sdl2 :system-file sdl2 :system-name sdl2/examples
  :dependencies (cl-opengl sdl2) :source
  (("git" "https://github.com/lispgames/cl-sdl2.git")))
 (:ql-project cl-sdl2-image :system-file sdl2-image :system-name sdl2-image
  :dependencies (alexandria asdf cl-autowrap defpackage-plus sdl2) :source
  (("git" "https://github.com/lispgames/cl-sdl2-image.git")))
 (:ql-project cl-sdl2-mixer :system-file sdl2-mixer :system-name sdl2-mixer
  :dependencies (alexandria asdf cl-autowrap sdl2 trivial-garbage) :source
  (("git" "https://github.com/lispgames/cl-sdl2-mixer.git")))
 (:ql-project cl-sdl2-ttf :system-file sdl2-ttf :system-name sdl2-ttf
  :dependencies
  (alexandria asdf cffi-libffi cl-autowrap defpackage-plus sdl2
   trivial-garbage)
  :source (("git" "https://github.com/sharplispers/cl-sdl2-ttf.git")))
 (:ql-project cl-sdl2-ttf :system-file sdl2-ttf-examples :system-name
  sdl2-ttf-examples :dependencies
  (alexandria asdf cl-opengl mathkit sdl2 sdl2-ttf) :source
  (("git" "https://github.com/sharplispers/cl-sdl2-ttf.git")))
 (:ql-project cl-secp256k1 :system-file secp256k1 :system-name secp256k1
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/dvush/cl-secp256k1.git")))
 (:ql-project cl-secp256k1 :system-file secp256k1 :system-name secp256k1/test
  :dependencies (ironclad parachute secp256k1 trivial-benchmark) :source
  (("git" "https://github.com/dvush/cl-secp256k1.git")))
 (:ql-project cl-selenium :system-file selenium :system-name selenium
  :dependencies (cl-ppcre cxml drakma puri split-sequence) :source
  (("git" "https://github.com/html/cl-selenium.git") nil))
 (:ql-project cl-selenium-webdriver :system-file cl-selenium :system-name
  cl-selenium :dependencies
  (alexandria asdf cl-json dexador quri split-sequence) :source
  (("git" "https://github.com/TatriX/cl-selenium-webdriver.git")))
 (:ql-project cl-selenium-webdriver :system-file cl-selenium-test :system-name
  cl-selenium-test :dependencies (asdf cl-selenium prove prove-asdf) :source
  (("git" "https://github.com/TatriX/cl-selenium-webdriver.git")))
 (:ql-project cl-semver :system-file cl-semver :system-name cl-semver
  :dependencies (alexandria asdf esrap named-readtables) :source
  (("git" "https://github.com/cldm/cl-semver.git")))
 (:ql-project cl-semver :system-file cl-semver-test :system-name cl-semver-test
  :dependencies (asdf cl-semver stefil) :source
  (("git" "https://github.com/cldm/cl-semver.git")))
 (:ql-project cl-sendgrid :system-file sendgrid :system-name sendgrid
  :dependencies (asdf dexador jonathan) :source
  (("git" "https://github.com/vindarel/cl-sendgrid.git")))
 (:ql-project cl-sentiment :system-file cl-sentiment :system-name cl-sentiment
  :dependencies (cl-ppcre rt) :source
  (("git" "https://github.com/RobBlackwell/cl-sentiment.git")))
 (:ql-project cl-sentry-client :system-file sentry-client :system-name
  sentry-client :dependencies
  (asdf babel cl-json cl-ppcre dexador local-time salza2 swank
   trivial-backtrace uuid)
  :source (("git" "https://github.com/mmontone/cl-sentry-client.git")))
 (:ql-project cl-sentry-client :system-file sentry-client.async :system-name
  sentry-client.async :dependencies (asdf sentry-client simple-tasks) :source
  (("git" "https://github.com/mmontone/cl-sentry-client.git")))
 (:ql-project cl-sentry-client :system-file sentry-client.hunchentoot
  :system-name sentry-client.hunchentoot :dependencies
  (asdf hunchentoot sentry-client) :source
  (("git" "https://github.com/mmontone/cl-sentry-client.git")))
 (:ql-project cl-server-manager :system-file cl-server-manager :system-name
  cl-server-manager :dependencies (alexandria asdf hunchentoot prepl swank)
  :source (("git" "https://github.com/pw4ever/cl-server-manager.git")))
 (:ql-project cl-ses4 :system-file cl-ses4 :system-name cl-ses4 :dependencies
  (arrow-macros asdf cl-base64 cl-ppcre dexador ironclad local-time quickapp
   quri)
  :source (("git" "https://github.com/Jach/cl-ses4.git")))
 (:ql-project cl-ses4 :system-file cl-ses4 :system-name cl-ses4/test
  :dependencies (cl-ses4 fiveam uiop) :source
  (("git" "https://github.com/Jach/cl-ses4.git")))
 (:ql-project cl-setlocale :system-file cl-setlocale :system-name cl-setlocale
  :dependencies (asdf cffi cffi-grovel) :source
  (("git" "https://github.com/shamazmazum/cl-setlocale.git")))
 (:ql-project cl-setlocale :system-file cl-setlocale :system-name
  cl-setlocale/tests :dependencies (cl-setlocale fiveam) :source
  (("git" "https://github.com/shamazmazum/cl-setlocale.git")))
 (:ql-project cl-sha1 :system-file cl-sha1 :system-name cl-sha1 :dependencies
  (asdf cl-base64) :source (("git" "https://github.com/naryl/sha1.git")))
 (:ql-project cl-shellwords :system-file cl-shellwords :system-name
  cl-shellwords :dependencies (cl-ppcre) :source
  (("git" "https://github.com/jorams/cl-shellwords.git")))
 (:ql-project cl-shellwords :system-file cl-shellwords-test :system-name
  cl-shellwords-test :dependencies (cl-shellwords prove) :source
  (("git" "https://github.com/jorams/cl-shellwords.git")))
 (:ql-project cl-shlex :system-file shlex :system-name shlex :dependencies
  (alexandria asdf cl-ppcre cl-unicode serapeum) :source
  (("git" "https://github.com/ruricolist/cl-shlex.git")))
 (:ql-project cl-shlex :system-file shlex :system-name shlex/test :dependencies
  (fiveam shlex) :source
  (("git" "https://github.com/ruricolist/cl-shlex.git")))
 (:ql-project cl-simple-concurrent-jobs :system-file cl-simple-concurrent-jobs
  :system-name cl-simple-concurrent-jobs :dependencies (bordeaux-threads chanl)
  :source
  (("git" "https://github.com/JordanPowell/cl-simple-concurrent-jobs.git")))
 (:ql-project cl-simple-fsm :system-file finite-state-machine :system-name
  finite-state-machine :dependencies (asdf) :source
  (("git" "https://github.com/isoraqathedh/cl-simple-fsm.git")))
 (:ql-project cl-simple-table :system-file cl-simple-table :system-name
  cl-simple-table :dependencies nil :source
  (("git" "https://github.com/ebobby/cl-simple-table.git")))
 (:ql-project cl-singleton-mixin :system-file cl-singleton-mixin :system-name
  cl-singleton-mixin :dependencies (closer-mop metap) :source
  (("git" "https://github.com/hipeta/cl-singleton-mixin.git")))
 (:ql-project cl-singleton-mixin :system-file cl-singleton-mixin-test
  :system-name cl-singleton-mixin-test :dependencies
  (cl-singleton-mixin fiveam) :source
  (("git" "https://github.com/hipeta/cl-singleton-mixin.git")))
 (:ql-project cl-skip-list :system-file cl-skip-list :system-name cl-skip-list
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/kraison/cl-skip-list.git")))
 (:ql-project cl-skkserv :system-file cl-skkserv :system-name cl-skkserv
  :dependencies
  (alexandria asdf babel cl-ppcre drakma esrap flexi-streams jp-numeral
   named-readtables papyrus yason)
  :source (("git" "https://github.com/asciian/cl-skkserv.git")))
 (:ql-project cl-skkserv :system-file cl-skkserv :system-name cl-skkserv/cli
  :dependencies (alexandria cl-skkserv daemon unix-opts usocket usocket-server)
  :source (("git" "https://github.com/asciian/cl-skkserv.git")))
 (:ql-project cl-skkserv :system-file cl-skkserv :system-name cl-skkserv/core
  :dependencies (alexandria babel esrap named-readtables papyrus) :source
  (("git" "https://github.com/asciian/cl-skkserv.git")))
 (:ql-project cl-skkserv :system-file cl-skkserv :system-name
  cl-skkserv/google-ime :dependencies
  (alexandria babel drakma esrap flexi-streams named-readtables papyrus yason)
  :source (("git" "https://github.com/asciian/cl-skkserv.git")))
 (:ql-project cl-skkserv :system-file cl-skkserv :system-name cl-skkserv/mixed
  :dependencies (alexandria babel esrap named-readtables papyrus) :source
  (("git" "https://github.com/asciian/cl-skkserv.git")))
 (:ql-project cl-skkserv :system-file cl-skkserv :system-name cl-skkserv/skk
  :dependencies
  (alexandria babel cl-ppcre esrap jp-numeral named-readtables papyrus) :source
  (("git" "https://github.com/asciian/cl-skkserv.git")))
 (:ql-project cl-skkserv :system-file cl-skkserv :system-name cl-skkserv/tests
  :dependencies (1am cl-skkserv flexi-streams) :source
  (("git" "https://github.com/asciian/cl-skkserv.git")))
 (:ql-project cl-sl4a :system-file cl-android :system-name cl-android
  :dependencies (cl-json usocket) :source
  (("git" "https://github.com/jkordani/cl-sl4a.git")))
 (:ql-project cl-slice :system-file cl-slice :system-name cl-slice
  :dependencies (alexandria anaphora asdf let-plus) :source
  (("git" "https://github.com/tpapp/cl-slice.git")))
 (:ql-project cl-slice :system-file cl-slice :system-name cl-slice-tests
  :dependencies (cl-slice clunit) :source
  (("git" "https://github.com/tpapp/cl-slice.git")))
 (:ql-project cl-slp :system-file cl-slp :system-name cl-slp :dependencies
  (cffi) :source (("git" "https://github.com/fjames86/cl-slp.git")))
 (:ql-project cl-slug :system-file cl-slug :system-name cl-slug :dependencies
  (asdf cl-ppcre) :source (("git" "https://github.com/EuAndreh/cl-slug.git")))
 (:ql-project cl-slug :system-file cl-slug-test :system-name cl-slug-test
  :dependencies (asdf cl-slug prove prove-asdf) :source
  (("git" "https://github.com/EuAndreh/cl-slug.git")))
 (:ql-project cl-slugify :system-file cl-slugify :system-name cl-slugify
  :dependencies (asdf cl-unac) :source
  (("git" "https://github.com/diasbruno/cl-slugify.git")))
 (:ql-project cl-slugify :system-file cl-slugify.tests :system-name
  cl-slugify.tests :dependencies (asdf cl-slugify fiveam) :source
  (("git" "https://github.com/diasbruno/cl-slugify.git")))
 (:ql-project cl-smt-lib :system-file cl-smt-lib :system-name cl-smt-lib
  :dependencies
  (asdf asdf-package-system named-readtables trivial-gray-streams) :source
  (("git" "https://github.com/GrammaTech/cl-smt-lib.git")))
 (:ql-project cl-smtp :system-file cl-smtp :system-name cl-smtp :dependencies
  (asdf cl+ssl cl-base64 flexi-streams trivial-gray-streams usocket) :source
  (("git" "https://gitlab.common-lisp.net/cl-smtp/cl-smtp.git")))
 (:ql-project cl-soil :system-file cl-soil :system-name cl-soil :dependencies
  (asdf cffi cl-opengl documentation-utils) :source
  (("branched-git" "https://github.com/cbaggers/cl-soil.git"
    "release-quicklisp")))
 (:ql-project cl-soloud :system-file cl-soloud :system-name cl-soloud
  :dependencies
  (alexandria asdf cffi cl-mpg123 documentation-utils trivial-features
   trivial-garbage trivial-indent)
  :source (("git" "https://github.com/Shirakumo/cl-soloud.git")))
 (:ql-project cl-sophia :system-file cl-sophia :system-name cl-sophia
  :dependencies (alexandria cffi cl-fad) :source
  (("git" "https://github.com/multimethod/cl-sophia.git")))
 (:ql-project cl-sophia :system-file cl-sophia :system-name cl-sophia-test
  :dependencies (alexandria cl-fad cl-sophia lisp-unit) :source
  (("git" "https://github.com/multimethod/cl-sophia.git")))
 (:ql-project cl-spark :system-file cl-spark :system-name cl-spark
  :dependencies nil :source (("git" "https://github.com/tkych/cl-spark.git")))
 (:ql-project cl-spark :system-file cl-spark-test :system-name cl-spark-test
  :dependencies (cl-spark fiveam) :source
  (("git" "https://github.com/tkych/cl-spark.git")))
 (:ql-project cl-sparql :system-file cl-sparql :system-name cl-sparql
  :dependencies (asdf cl-ppcre parser-combinators puri split-sequence) :source
  (("git" "https://github.com/mmontone/cl-sparql.git")))
 (:ql-project cl-sparql :system-file cl-sparql-tests :system-name
  cl-sparql-tests :dependencies (asdf cl-sparql fiveam) :source
  (("git" "https://github.com/mmontone/cl-sparql.git")))
 (:ql-project cl-speedy-queue :system-file cl-speedy-queue :system-name
  cl-speedy-queue :dependencies nil :source
  (("git" "https://github.com/zkat/cl-speedy-queue.git")))
 (:ql-project cl-sphinx :system-file sphinx :system-name sphinx :dependencies
  (cl-fad closure-template colorize docutils) :source
  (("git" "https://github.com/archimag/cl-sphinx.git")))
 (:ql-project cl-spidev :system-file cl-spidev :system-name cl-spidev
  :dependencies (asdf cffi documentation-utils trivial-garbage) :source
  (("git" "https://github.com/Shinmera/cl-spidev.git")))
 (:ql-project cl-sqlite :system-file sqlite :system-name sqlite :dependencies
  (asdf cffi iterate) :source
  (("git" "https://github.com/dmitryvk/cl-sqlite.git")))
 (:ql-project cl-ssdb :system-file cl-ssdb :system-name cl-ssdb :dependencies
  (asdf babel cl-ppcre flexi-streams parse-number rutils usocket) :source
  (("git" "https://github.com/muyinliu/cl-ssdb.git")))
 (:ql-project cl-ssdb :system-file cl-ssdb-test :system-name cl-ssdb-test
  :dependencies (asdf cl-ssdb prove prove-asdf) :source
  (("git" "https://github.com/muyinliu/cl-ssdb.git")))
 (:ql-project cl-sse :system-file sse-client :system-name sse-client
  :dependencies (asdf) :source
  (("git" "https://github.com/dtenny/cl-sse.git")))
 (:ql-project cl-sse :system-file sse-client-test :system-name sse-client-test
  :dependencies (asdf fiveam sse-client trivial-escapes) :source
  (("git" "https://github.com/dtenny/cl-sse.git")))
 (:ql-project cl-sse :system-file sse-demo :system-name sse-demo :dependencies
  (asdf easy-routes flexi-streams hunchentoot sse-server) :source
  (("git" "https://github.com/dtenny/cl-sse.git")))
 (:ql-project cl-sse :system-file sse-server :system-name sse-server
  :dependencies (asdf cl-ppcre trivial-escapes) :source
  (("git" "https://github.com/dtenny/cl-sse.git")))
 (:ql-project cl-sse :system-file sse-server-test :system-name sse-server-test
  :dependencies (asdf fiveam sse-server trivial-escapes) :source
  (("git" "https://github.com/dtenny/cl-sse.git")))
 (:ql-project cl-ssh-keys :system-file cl-ssh-keys :system-name cl-ssh-keys
  :dependencies (alexandria asdf cl-base64 cl-rfc4251 ironclad uiop) :source
  (("git" "https://github.com/dnaeon/cl-ssh-keys.git")))
 (:ql-project cl-ssh-keys :system-file cl-ssh-keys.test :system-name
  cl-ssh-keys.test :dependencies (alexandria asdf cl-ssh-keys rove) :source
  (("git" "https://github.com/dnaeon/cl-ssh-keys.git")))
 (:ql-project cl-statsd :system-file cl-statsd :system-name cl-statsd
  :dependencies
  (alexandria bordeaux-threads cl-interpol local-time log4cl safe-queue
   trivial-utf-8 usocket)
  :source (("git" "https://github.com/deadtrickster/cl-statsd.git")))
 (:ql-project cl-statsd :system-file cl-statsd.test :system-name cl-statsd.test
  :dependencies (cl-statsd log4cl prove prove-asdf) :source
  (("git" "https://github.com/deadtrickster/cl-statsd.git")))
 (:ql-project cl-stdutils :system-file stdutils :system-name stdutils
  :dependencies (cl-fad cl-ppcre) :source
  (("git" "https://github.com/eslick/cl-stdutils.git")))
 (:ql-project cl-steamworks :system-file cl-steamworks :system-name
  cl-steamworks :dependencies
  (alexandria asdf babel cffi documentation-utils float-features
   trivial-features trivial-garbage trivial-gray-streams)
  :source (("git" "https://github.com/shinmera/cl-steamworks.git")))
 (:ql-project cl-steamworks :system-file cl-steamworks-generator :system-name
  cl-steamworks-generator :dependencies
  (alexandria asdf cffi cl-ppcre parse-number pathname-utils yason) :source
  (("git" "https://github.com/shinmera/cl-steamworks.git")))
 (:ql-project cl-stomp :system-file cl-stomp :system-name cl-stomp
  :dependencies (asdf babel bordeaux-threads usocket) :source
  (("git" "https://gitlab.common-lisp.net/cl-stomp/cl-stomp.git")))
 (:ql-project cl-stopwatch :system-file cl-stopwatch :system-name cl-stopwatch
  :dependencies (asdf) :source
  (("git" "https://github.com/stylewarning/cl-stopwatch.git")))
 (:ql-project cl-store :system-file cl-store :system-name cl-store
  :dependencies (asdf) :source
  (("git" "https://github.com/skypher/cl-store.git")))
 (:ql-project cl-store :system-file cl-store :system-name cl-store-tests
  :dependencies (cl-store rt) :source
  (("git" "https://github.com/skypher/cl-store.git")))
 (:ql-project cl-str :system-file str :system-name str :dependencies
  (asdf cl-change-case cl-ppcre cl-ppcre-unicode) :source
  (("git" "https://github.com/vindarel/cl-str.git")))
 (:ql-project cl-str :system-file str.test :system-name str.test :dependencies
  (asdf fiveam str) :source (("git" "https://github.com/vindarel/cl-str.git")))
 (:ql-project cl-stream :system-file cl-stream :system-name cl-stream
  :dependencies (asdf) :source
  (("git" "https://github.com/cl-stream/cl-stream.git")))
 (:ql-project cl-strftime :system-file cl-strftime :system-name cl-strftime
  :dependencies (alexandria cl-ppcre local-time serapeum) :source
  (("git" "https://github.com/ruricolist/cl-strftime.git")))
 (:ql-project cl-strftime :system-file cl-strftime :system-name
  cl-strftime/tests :dependencies (cffi cl-strftime fiveam uiop) :source
  (("git" "https://github.com/ruricolist/cl-strftime.git")))
 (:ql-project cl-string-complete :system-file cl-string-complete :system-name
  cl-string-complete :dependencies (asdf) :source
  (("git" "https://github.com/stylewarning/cl-string-complete.git")))
 (:ql-project cl-string-generator :system-file cl-string-generator :system-name
  cl-string-generator :dependencies (alexandria asdf cl-ppcre) :source
  (("git" "https://github.com/pokepay/cl-string-generator.git")))
 (:ql-project cl-string-generator :system-file cl-string-generator :system-name
  cl-string-generator/tests :dependencies (cl-string-generator rove) :source
  (("git" "https://github.com/pokepay/cl-string-generator.git")))
 (:ql-project cl-string-match :system-file ascii-strings :system-name
  ascii-strings :dependencies (alexandria asdf babel) :source
  (("git" "https://github.com/sharplispers/cl-string-match") ("#" "Old:")
   ("#" "mercurial" "https://bitbucket.org/vityok/cl-string-match")))
 (:ql-project cl-string-match :system-file cl-string-match :system-name
  cl-string-match :dependencies
  (alexandria ascii-strings asdf iterate jpl-queues mgl-pax yacc) :source
  (("git" "https://github.com/sharplispers/cl-string-match") ("#" "Old:")
   ("#" "mercurial" "https://bitbucket.org/vityok/cl-string-match")))
 (:ql-project cl-string-match :system-file cl-string-match-test :system-name
  cl-string-match-test :dependencies
  (ascii-strings asdf cl-string-match lisp-unit simple-scanf) :source
  (("git" "https://github.com/sharplispers/cl-string-match") ("#" "Old:")
   ("#" "mercurial" "https://bitbucket.org/vityok/cl-string-match")))
 (:ql-project cl-string-match :system-file simple-scanf :system-name
  simple-scanf :dependencies (alexandria asdf iterate parse-float proc-parse)
  :source
  (("git" "https://github.com/sharplispers/cl-string-match") ("#" "Old:")
   ("#" "mercurial" "https://bitbucket.org/vityok/cl-string-match")))
 (:ql-project cl-strings :system-file cl-strings :system-name cl-strings
  :dependencies (asdf) :source
  (("git" "https://github.com/diogoalexandrefranco/cl-strings.git")))
 (:ql-project cl-strings :system-file cl-strings :system-name cl-strings-tests
  :dependencies (cl-strings prove) :source
  (("git" "https://github.com/diogoalexandrefranco/cl-strings.git")))
 (:ql-project cl-svg :system-file cl-svg :system-name cl-svg :dependencies
  (asdf) :source (("git" "https://github.com/wmannis/cl-svg")))
 (:ql-project cl-svm :system-file cl-svm :system-name cl-svm :dependencies nil
  :source (("git" "https://github.com/gonzojive/cl-svm")))
 (:ql-project cl-swagger-codegen :system-file cl-swagger :system-name
  cl-swagger :dependencies (asdf cl-json cl-mustache cl-ppcre drakma) :source
  (("git" "https://github.com/incjung/cl-swagger-codegen.git")))
 (:ql-project cl-sxml :system-file cl-sxml :system-name cl-sxml :dependencies
  (asdf cxml) :source (("git" "https://github.com/eadmund/cl-sxml.git")))
 (:ql-project cl-sxml :system-file cl-sxml :system-name cl-sxml-test
  :dependencies (asdf cl-sxml fiveam flexi-streams uiop) :source
  (("git" "https://github.com/eadmund/cl-sxml.git")))
 (:ql-project cl-syntax :system-file cl-syntax :system-name cl-syntax
  :dependencies (named-readtables trivial-types) :source
  (("git" "https://github.com/m2ym/cl-syntax")))
 (:ql-project cl-syntax :system-file cl-syntax-annot :system-name
  cl-syntax-annot :dependencies (cl-annot cl-syntax) :source
  (("git" "https://github.com/m2ym/cl-syntax")))
 (:ql-project cl-syntax :system-file cl-syntax-anonfun :system-name
  cl-syntax-anonfun :dependencies (cl-anonfun cl-syntax) :source
  (("git" "https://github.com/m2ym/cl-syntax")))
 (:ql-project cl-syntax :system-file cl-syntax-clsql :system-name
  cl-syntax-clsql :dependencies (cl-syntax clsql) :source
  (("git" "https://github.com/m2ym/cl-syntax")))
 (:ql-project cl-syntax :system-file cl-syntax-fare-quasiquote :system-name
  cl-syntax-fare-quasiquote :dependencies (cl-syntax fare-quasiquote) :source
  (("git" "https://github.com/m2ym/cl-syntax")))
 (:ql-project cl-syntax :system-file cl-syntax-interpol :system-name
  cl-syntax-interpol :dependencies (cl-interpol cl-syntax) :source
  (("git" "https://github.com/m2ym/cl-syntax")))
 (:ql-project cl-syntax :system-file cl-syntax-markup :system-name
  cl-syntax-markup :dependencies (cl-markup cl-syntax) :source
  (("git" "https://github.com/m2ym/cl-syntax")))
 (:ql-project cl-sysexits :system-file sysexits :system-name sysexits
  :dependencies (asdf) :source
  (("git" "https://github.com/teddywing/cl-sysexits.git")))
 (:ql-project cl-syslog :system-file cl-syslog :system-name cl-syslog
  :dependencies
  (alexandria asdf babel cffi global-vars local-time split-sequence usocket)
  :source (("git" "https://github.com/mmaul/cl-syslog.git")))
 (:ql-project cl-table :system-file cl-table :system-name cl-table
  :dependencies (iterate) :source
  (("git" "https://github.com/Kalimehtar/cl-table.git")))
 (:ql-project cl-tar :system-file tar :system-name tar :dependencies
  (40ants-doc alexandria asdf babel local-time split-sequence tar-file uiop)
  :source (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar.git")))
 (:ql-project cl-tar :system-file tar :system-name tar/common-extract
  :dependencies (split-sequence tar uiop) :source
  (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar.git")))
 (:ql-project cl-tar :system-file tar :system-name tar/create :dependencies
  (local-time osicat tar uiop) :source
  (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar.git")))
 (:ql-project cl-tar :system-file tar :system-name tar/create-test
  :dependencies (local-time osicat parachute tar uiop) :source
  (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar.git")))
 (:ql-project cl-tar :system-file tar :system-name tar/extract :dependencies
  (alexandria local-time osicat split-sequence tar uiop) :source
  (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar.git")))
 (:ql-project cl-tar :system-file tar :system-name tar/extract-test
  :dependencies
  (alexandria local-time osicat parachute split-sequence tar uiop) :source
  (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar.git")))
 (:ql-project cl-tar :system-file tar :system-name tar/simple-extract
  :dependencies (local-time split-sequence tar uiop) :source
  (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar.git")))
 (:ql-project cl-tar :system-file tar :system-name tar/simple-extract-test
  :dependencies (local-time osicat parachute split-sequence tar uiop) :source
  (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar.git")))
 (:ql-project cl-tar :system-file tar :system-name tar/test :dependencies
  (parachute tar) :source
  (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar.git")))
 (:ql-project cl-tar-file :system-file tar-file :system-name tar-file
  :dependencies
  (40ants-doc alexandria asdf babel chipz flexi-streams salza2
   trivial-gray-streams uiop)
  :source (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar-file.git")))
 (:ql-project cl-tar-file :system-file tar-file :system-name tar-file/test
  :dependencies (parachute tar-file) :source
  (("git" "https://gitlab.common-lisp.net/cl-tar/cl-tar-file.git")))
 (:ql-project cl-tasukete :system-file cl-tasukete :system-name cl-tasukete
  :dependencies (asdf cl-annot cl-gists dissect jonathan local-time) :source
  (("git" "https://github.com/gos-k/cl-tasukete.git")))
 (:ql-project cl-tasukete :system-file cl-tasukete-test :system-name
  cl-tasukete-test :dependencies (asdf cl-tasukete dissect prove prove-asdf)
  :source (("git" "https://github.com/gos-k/cl-tasukete.git")))
 (:ql-project cl-tcod :system-file parse-rgb :system-name parse-rgb
  :dependencies (asdf cl-ppcre tcod) :source
  (("git" "https://github.com/podiki/cl-tcod.git")))
 (:ql-project cl-tcod :system-file tcod :system-name tcod :dependencies
  (asdf cffi cffi-libffi defstar) :source
  (("git" "https://github.com/podiki/cl-tcod.git")))
 (:ql-project cl-telebot :system-file cl-telebot :system-name cl-telebot
  :dependencies (alexandria asdf dexador jonathan) :source
  (("git" "https://github.com/gzip4/cl-telebot.git")))
 (:ql-project cl-telegram-bot :system-file cl-telegram-bot :system-name
  cl-telegram-bot :dependencies
  (40ants-asdf-system alexandria arrows asdf bordeaux-threads cl-ppcre
   cl-strings closer-mop dexador jonathan kebab log4cl serapeum
   trivial-backtrace)
  :source (("git" "https://github.com/40ants/cl-telegram-bot.git")))
 (:ql-project cl-telegram-bot :system-file cl-telegram-bot-ci :system-name
  cl-telegram-bot-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/cl-telegram-bot.git")))
 (:ql-project cl-telegram-bot :system-file cl-telegram-bot-docs :system-name
  cl-telegram-bot-docs :dependencies
  (40ants-doc asdf cl-telegram-bot docs-config named-readtables
   pythonic-string-reader)
  :source (("git" "https://github.com/40ants/cl-telegram-bot.git")))
 (:ql-project cl-telegram-bot :system-file cl-telegram-bot-tests :system-name
  cl-telegram-bot-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/cl-telegram-bot.git")))
 (:ql-project cl-template :system-file cl-template :system-name cl-template
  :dependencies nil :source
  (("git" "https://github.com/alpha123/cl-template.git")))
 (:ql-project cl-template :system-file cl-template :system-name
  cl-template-tests :dependencies (cl-template fiveam) :source
  (("git" "https://github.com/alpha123/cl-template.git")))
 (:ql-project cl-termbox :system-file cl-termbox :system-name cl-termbox
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/cl-fui/cl-termbox.git")))
 (:ql-project cl-tesseract :system-file cl-tesseract :system-name cl-tesseract
  :dependencies (cffi) :source
  (("git" "https://github.com/GOFAI/cl-tesseract.git")))
 (:ql-project cl-tetris3d :system-file cl-tetris3d :system-name cl-tetris3d
  :dependencies (asdf cl-glu cl-opengl iterate lispbuilder-sdl) :source
  (("git" "https://github.com/grouzen/cl-tetris3d.git")))
 (:ql-project cl-textmagic :system-file cl-textmagic :system-name cl-textmagic
  :dependencies (cl-json dexador) :source
  (("git" "https://github.com/trumae/cl-textmagic.git")))
 (:ql-project cl-textmagic :system-file cl-textmagic-test :system-name
  cl-textmagic-test :dependencies (cl-textmagic prove prove-asdf) :source
  (("git" "https://github.com/trumae/cl-textmagic.git")))
 (:ql-project cl-tga :system-file cl-tga :system-name cl-tga :dependencies nil
  :source (("git" "https://github.com/fisxoj/cl-tga.git")))
 (:ql-project cl-threadpool :system-file cl-threadpool :system-name
  cl-threadpool :dependencies (asdf bordeaux-threads queues.simple-cqueue)
  :source
  (("branched-git" "https://github.com/Frechmatz/cl-threadpool.git"
    "quickload-current-release")))
 (:ql-project cl-threadpool :system-file cl-threadpool :system-name
  cl-threadpool/doc :dependencies (cl-html-readme cl-threadpool docparser)
  :source
  (("branched-git" "https://github.com/Frechmatz/cl-threadpool.git"
    "quickload-current-release")))
 (:ql-project cl-tidy :system-file cl-tidy :system-name cl-tidy :dependencies
  (cffi) :source (("git" "https://github.com/gonzojive/cl-tidy")))
 (:ql-project cl-tiled :system-file cl-tiled :system-name cl-tiled
  :dependencies
  (alexandria asdf chipz cl-base64 cl-json nibbles parse-float split-sequence
   uiop xmls)
  :source (("git" "https://github.com/Zulu-Inuoe/cl-tiled.git")))
 (:ql-project cl-tk :system-file cl-tk :system-name cl-tk :dependencies (cffi)
  :source (("git" "https://github.com/marijnh/cl-tk.git")))
 (:ql-project cl-tld :system-file cl-tld :system-name cl-tld :dependencies
  (asdf) :source (("git" "https://github.com/1u4nx/cl-tld.git")))
 (:ql-project cl-tls :system-file cl-tls :system-name cl-tls :dependencies
  (alexandria asdf babel cl-base64 fast-io ironclad) :source
  (("git" "https://github.com/shrdlu68/cl-tls.git")))
 (:ql-project cl-tokyo-cabinet :system-file cl-tokyo-cabinet :system-name
  cl-tokyo-cabinet :dependencies (cffi deoxybyte-systems) :source
  (("git" "https://github.com/keithj/cl-tokyo-cabinet.git")))
 (:ql-project cl-tokyo-cabinet :system-file cl-tokyo-cabinet-test :system-name
  cl-tokyo-cabinet-test :dependencies
  (cl-tokyo-cabinet deoxybyte-io deoxybyte-utilities lift) :source
  (("git" "https://github.com/keithj/cl-tokyo-cabinet.git")))
 (:ql-project cl-toml :system-file cl-toml :system-name cl-toml :dependencies
  (alexandria asdf esrap local-time trivial-types) :source
  (("git" "https://github.com/cxxxr/cl-toml.git")))
 (:ql-project cl-toml :system-file cl-toml-test :system-name cl-toml-test
  :dependencies (asdf cl-toml prove) :source
  (("git" "https://github.com/cxxxr/cl-toml.git")))
 (:ql-project cl-torrents :system-file torrents :system-name torrents
  :dependencies
  (access asdf cl-ansi-text cl-readline cl-transmission clache dexador jonathan
   log4cl lparallel lquery mockingbird parse-float plump py-configparser replic
   str unix-opts x.let-star)
  :source (("git" "https://gitlab.com/vindarel/cl-torrents/")))
 (:ql-project cl-torrents :system-file torrents-test :system-name torrents-test
  :dependencies (asdf mockingbird prove prove-asdf torrents) :source
  (("git" "https://gitlab.com/vindarel/cl-torrents/")))
 (:ql-project cl-torrents :system-file torrents :system-name torrents/tk
  :dependencies (nodgui torrents) :source
  (("git" "https://gitlab.com/vindarel/cl-torrents/")))
 (:ql-project cl-tqdm :system-file cl-tqdm :system-name cl-tqdm :dependencies
  (asdf) :source (("git" "https://github.com/hikettei/cl-tqdm.git")))
 (:ql-project cl-transducers :system-file transducers :system-name transducers
  :dependencies (asdf sycamore) :source
  (("GIT" "https://git.sr.ht/~fosskers/cl-transducers")))
 (:ql-project cl-transducers :system-file transducers :system-name
  transducers-jzon :dependencies (com.inuoe.jzon transducers trivia) :source
  (("GIT" "https://git.sr.ht/~fosskers/cl-transducers")))
 (:ql-project cl-transducers :system-file transducers :system-name
  transducers/tests :dependencies (parachute transducers transducers-jzon)
  :source (("GIT" "https://git.sr.ht/~fosskers/cl-transducers")))
 (:ql-project cl-transit :system-file cl-transit :system-name cl-transit
  :dependencies
  (alexandria asdf bit-smasher cl-messagepack com.inuoe.jzon flexi-streams fset
   local-time parse-float quri serapeum uuid)
  :source (("git" "https://github.com/jsulmont/cl-transit.git")))
 (:ql-project cl-transit :system-file cl-transit-tests :system-name
  cl-transit-tests :dependencies (asdf cl-transit dexador fiveam marshal)
  :source (("git" "https://github.com/jsulmont/cl-transit.git")))
 (:ql-project cl-transmission :system-file cl-transmission :system-name
  cl-transmission :dependencies
  (asdf cl-ppcre drakma jonathan named-readtables rutils uiop) :source
  (("git" "https://github.com/libre-man/cl-transmission.git")))
 (:ql-project cl-transmission :system-file cl-transmission-test :system-name
  cl-transmission-test :dependencies (asdf cl-transmission prove prove-asdf)
  :source (("git" "https://github.com/libre-man/cl-transmission.git")))
 (:ql-project cl-trie :system-file cl-trie :system-name cl-trie :dependencies
  (asdf) :source (("git" "https://github.com/MatthewRock/cl-trie.git")))
 (:ql-project cl-trie :system-file cl-trie-examples :system-name
  cl-trie-examples :dependencies (asdf cl-ppcre cl-trie) :source
  (("git" "https://github.com/MatthewRock/cl-trie.git")))
 (:ql-project cl-trie :system-file cl-trie :system-name cl-trie/tests
  :dependencies (cl-trie fiveam) :source
  (("git" "https://github.com/MatthewRock/cl-trie.git")))
 (:ql-project cl-tui :system-file cl-tui :system-name cl-tui :dependencies
  (alexandria anaphora asdf cl-charms cl-containers osicat split-sequence
   trivial-types)
  :source (("git" "https://github.com/naryl/cl-tui.git")))
 (:ql-project cl-tulip-graph :system-file cl-tulip-graph :system-name
  cl-tulip-graph :dependencies nil :source
  (("git" "https://github.com/varjagg/cl-tulip-graph.git")))
 (:ql-project cl-tuples :system-file cl-tuples :system-name cl-tuples
  :dependencies (alexandria iterate) :source
  (("git" "https://github.com/johnfredcee/cl-tuples.git") nil))
 (:ql-project cl-twitter :system-file cl-twit-repl :system-name cl-twit-repl
  :dependencies (asdf cl-twitter) :source
  (("git" "https://github.com/fons/cl-twitter.git") nil))
 (:ql-project cl-twitter :system-file cl-twitter :system-name cl-twitter
  :dependencies
  (anaphora asdf cl-json cl-oauth cl-ppcre closer-mop drakma trivial-http
   url-rewrite)
  :source (("git" "https://github.com/fons/cl-twitter.git") nil))
 (:ql-project cl-twitter :system-file twitter-mongodb-driver :system-name
  twitter-mongodb-driver :dependencies (asdf cl-mongo cl-twitter) :source
  (("git" "https://github.com/fons/cl-twitter.git") nil))
 (:ql-project cl-typesetting :system-file cl-pdf-doc :system-name cl-pdf-doc
  :dependencies (asdf cl-pdf cl-typesetting) :source
  (("git" "https://github.com/mbattyani/cl-typesetting.git")))
 (:ql-project cl-typesetting :system-file cl-typesetting :system-name
  cl-typesetting :dependencies (asdf cl-pdf) :source
  (("git" "https://github.com/mbattyani/cl-typesetting.git")))
 (:ql-project cl-typesetting :system-file xml-render :system-name xml-render
  :dependencies (asdf cl-typesetting xmls) :source
  (("git" "https://github.com/mbattyani/cl-typesetting.git")))
 (:ql-project cl-uglify-js :system-file cl-uglify-js :system-name cl-uglify-js
  :dependencies (cl-ppcre cl-ppcre-unicode iterate parse-js parse-number)
  :source (("git" "https://github.com/mishoo/cl-uglify-js.git")))
 (:ql-project cl-unac :system-file cl-unac :system-name cl-unac :dependencies
  (asdf cffi cl-unac.config) :source
  (("git" "https://github.com/diasbruno/cl-unac.git")))
 (:ql-project cl-unac :system-file cl-unac.config :system-name cl-unac.config
  :dependencies (asdf cffi) :source
  (("git" "https://github.com/diasbruno/cl-unac.git")))
 (:ql-project cl-unac :system-file cl-unac.tests :system-name cl-unac.tests
  :dependencies (asdf cl-unac fiveam) :source
  (("git" "https://github.com/diasbruno/cl-unac.git")))
 (:ql-project cl-unicode :system-file cl-unicode :system-name cl-unicode
  :dependencies (asdf cl-ppcre) :source (("ediware-http" "cl-unicode")))
 (:ql-project cl-unicode :system-file cl-unicode :system-name cl-unicode/base
  :dependencies (cl-ppcre) :source (("ediware-http" "cl-unicode")))
 (:ql-project cl-unicode :system-file cl-unicode :system-name cl-unicode/build
  :dependencies (cl-ppcre flexi-streams) :source
  (("ediware-http" "cl-unicode")))
 (:ql-project cl-unicode :system-file cl-unicode :system-name cl-unicode/test
  :dependencies (cl-unicode) :source (("ediware-http" "cl-unicode")))
 (:ql-project cl-unification :system-file cl-ppcre-template :system-name
  cl-ppcre-template :dependencies (asdf cl-ppcre cl-unification) :source
  (("git" "https://gitlab.common-lisp.net/cl-unification/cl-unification.git")))
 (:ql-project cl-unification :system-file cl-unification :system-name
  cl-unification :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/cl-unification/cl-unification.git")))
 (:ql-project cl-unification :system-file cl-unification-lib :system-name
  cl-unification-lib :dependencies (asdf cl-ppcre cl-unification) :source
  (("git" "https://gitlab.common-lisp.net/cl-unification/cl-unification.git")))
 (:ql-project cl-unification :system-file cl-unification-test :system-name
  cl-unification-test :dependencies (asdf cl-unification ptester) :source
  (("git" "https://gitlab.common-lisp.net/cl-unification/cl-unification.git")))
 (:ql-project cl-union-find :system-file cl-union-find :system-name
  cl-union-find :dependencies (asdf) :source
  (("git" "https://github.com/varjagg/cl-union-find.git")))
 (:ql-project cl-unix-sockets :system-file unix-sockets :system-name
  unix-sockets :dependencies
  (asdf cffi flexi-streams log4cl trivial-garbage trivial-gray-streams uffi)
  :source (("git" "https://github.com/tdrhq/cl-unix-sockets.git")))
 (:ql-project cl-unix-sockets :system-file unix-sockets.tests :system-name
  unix-sockets.tests :dependencies
  (asdf cl-fad fiveam tmpdir trivial-timeout unix-sockets) :source
  (("git" "https://github.com/tdrhq/cl-unix-sockets.git")))
 (:ql-project cl-utilities :system-file cl-utilities :system-name cl-utilities
  :dependencies nil :source
  (("https"
    "https://common-lisp.net/project/cl-utilities/cl-utilities-latest.tar.gz")))
 (:ql-project cl-utils :system-file gt :system-name gt :dependencies
  (alexandria asdf asdf-package-system bordeaux-threads cl-ppcre closer-mop
   curry-compose-reader-macros fset functional-trees iterate misc-extensions
   named-readtables serapeum split-sequence trivia trivia.ppcre)
  :source (("git" "https://github.com/grammatech/cl-utils.git")))
 (:ql-project cl-variates :system-file cl-variates :system-name cl-variates
  :dependencies (asdf asdf-system-connections) :source
  (("git" "https://gitlab.common-lisp.net/cl-variates/cl-variates.git") nil))
 (:ql-project cl-vectors :system-file cl-aa :system-name cl-aa :dependencies
  (asdf) :source (("git" "https://github.com/fjolliton/cl-vectors.git")))
 (:ql-project cl-vectors :system-file cl-aa-misc :system-name cl-aa-misc
  :dependencies (asdf) :source
  (("git" "https://github.com/fjolliton/cl-vectors.git")))
 (:ql-project cl-vectors :system-file cl-paths :system-name cl-paths
  :dependencies (asdf) :source
  (("git" "https://github.com/fjolliton/cl-vectors.git")))
 (:ql-project cl-vectors :system-file cl-paths-ttf :system-name cl-paths-ttf
  :dependencies (asdf cl-paths zpb-ttf) :source
  (("git" "https://github.com/fjolliton/cl-vectors.git")))
 (:ql-project cl-vectors :system-file cl-vectors :system-name cl-vectors
  :dependencies (asdf cl-aa cl-paths) :source
  (("git" "https://github.com/fjolliton/cl-vectors.git")))
 (:ql-project cl-veq :system-file veq :system-name veq :dependencies (asdf)
  :source (("latest-github-tag" "https://github.com/inconvergent/cl-veq.git")))
 (:ql-project cl-veq :system-file veq :system-name veq/tests :dependencies
  (asdf prove uiop veq) :source
  (("latest-github-tag" "https://github.com/inconvergent/cl-veq.git")))
 (:ql-project cl-vhdl :system-file cl-vhdl :system-name cl-vhdl :dependencies
  (alexandria cl-interpol cl-itertools cl-ppcre esrap-liquid iterate) :source
  (("git" "https://github.com/mabragor/cl-vhdl.git")))
 (:ql-project cl-vhdl :system-file cl-vhdl :system-name cl-vhdl-tests
  :dependencies (cl-interpol cl-vhdl fare-quasiquote-optima fiveam optima)
  :source (("git" "https://github.com/mabragor/cl-vhdl.git")))
 (:ql-project cl-video :system-file cl-video :system-name cl-video
  :dependencies (asdf bordeaux-threads) :source
  (("git" "https://github.com/varjagg/cl-video.git")))
 (:ql-project cl-video :system-file cl-video-avi :system-name cl-video-avi
  :dependencies (alexandria asdf cl-jpeg cl-riff cl-video flexi-streams)
  :source (("git" "https://github.com/varjagg/cl-video.git")))
 (:ql-project cl-video :system-file cl-video-gif :system-name cl-video-gif
  :dependencies (alexandria asdf cl-video skippy) :source
  (("git" "https://github.com/varjagg/cl-video.git")))
 (:ql-project cl-video :system-file cl-video-player :system-name
  cl-video-player :dependencies
  (asdf bordeaux-threads cl-portaudio cl-video-avi cl-video-gif cl-video-wav
   clx)
  :source (("git" "https://github.com/varjagg/cl-video.git")))
 (:ql-project cl-video :system-file cl-video-wav :system-name cl-video-wav
  :dependencies (alexandria asdf cl-riff cl-video flexi-streams) :source
  (("git" "https://github.com/varjagg/cl-video.git")))
 (:ql-project cl-virtualbox :system-file cl-virtualbox :system-name
  cl-virtualbox :dependencies (alexandria asdf cl-ppcre uiop usocket) :source
  (("git" "https://github.com/eudoxia0/cl-virtualbox.git")))
 (:ql-project cl-voipms :system-file voipms :system-name voipms :dependencies
  (asdf cl-date-time-parser erjoalgo-webutil local-time) :source
  (("git" "https://github.com/erjoalgo/cl-voipms.git")))
 (:ql-project cl-vorbis :system-file cl-vorbis :system-name cl-vorbis
  :dependencies
  (asdf cffi documentation-utils static-vectors trivial-features
   trivial-garbage)
  :source (("git" "https://github.com/shirakumo/cl-vorbis.git")))
 (:ql-project cl-voxelize :system-file cl-voxelize :system-name cl-voxelize
  :dependencies (alexandria) :source
  (("git" "https://github.com/takagi/cl-voxelize.git")))
 (:ql-project cl-voxelize :system-file cl-voxelize-examples :system-name
  cl-voxelize-examples :dependencies (cl-ply cl-voxelize) :source
  (("git" "https://github.com/takagi/cl-voxelize.git")))
 (:ql-project cl-voxelize :system-file cl-voxelize-test :system-name
  cl-voxelize-test :dependencies (cl-voxelize prove prove-asdf) :source
  (("git" "https://github.com/takagi/cl-voxelize.git")))
 (:ql-project cl-wadler-pprint :system-file cl-wadler-pprint :system-name
  cl-wadler-pprint :dependencies (asdf) :source
  (("git" "https://github.com/remexre/cl-wadler-pprint.git")))
 (:ql-project cl-wadler-pprint :system-file cl-wadler-pprint :system-name
  cl-wadler-pprint/test :dependencies (cl-wadler-pprint fiveam) :source
  (("git" "https://github.com/remexre/cl-wadler-pprint.git")))
 (:ql-project cl-wav :system-file cl-wav :system-name cl-wav :dependencies
  (alexandria asdf cl-riff) :source
  (("git" "https://github.com/RobBlackwell/cl-wav.git")))
 (:ql-project cl-wave-file-writer :system-file cl-wave-file-writer :system-name
  cl-wave-file-writer :dependencies (asdf) :source
  (("branched-git" "https://github.com/Frechmatz/cl-wave-file-writer.git"
    "quickload-current-release")))
 (:ql-project cl-wave-file-writer :system-file cl-wave-file-writer :system-name
  cl-wave-file-writer/doc :dependencies
  (cl-html-readme cl-wave-file-writer docparser) :source
  (("branched-git" "https://github.com/Frechmatz/cl-wave-file-writer.git"
    "quickload-current-release")))
 (:ql-project cl-wavefront :system-file cl-wavefront :system-name cl-wavefront
  :dependencies (asdf cl-ppcre documentation-utils parse-float) :source
  (("git" "https://github.com/shirakumo/cl-wavefront.git")))
 (:ql-project cl-wavelets :system-file cl-wavelets :system-name cl-wavelets
  :dependencies (alexandria asdf serapeum) :source
  (("git" "https://github.com/shamazmazum/cl-wavelets.git")))
 (:ql-project cl-wavelets :system-file cl-wavelets :system-name
  cl-wavelets/examples :dependencies (cl-jpeg cl-wavelets easy-audio) :source
  (("git" "https://github.com/shamazmazum/cl-wavelets.git")))
 (:ql-project cl-wavelets :system-file cl-wavelets :system-name
  cl-wavelets/tests :dependencies (cl-wavelets fiveam) :source
  (("git" "https://github.com/shamazmazum/cl-wavelets.git")))
 (:ql-project cl-wayland :system-file cl-wayland :system-name cl-wayland
  :dependencies (asdf cffi closer-mop) :source
  (("git" "https://github.com/malcolmstill/cl-wayland.git")))
 (:ql-project cl-weather-jp :system-file cl-weather-jp :system-name
  cl-weather-jp :dependencies (clss dexador function-cache jonathan plump)
  :source (("git" "https://github.com/fukamachi/cl-weather-jp.git")))
 (:ql-project cl-weather-jp :system-file cl-weather-jp-test :system-name
  cl-weather-jp-test :dependencies (cl-weather-jp prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/cl-weather-jp.git")))
 (:ql-project cl-webdav :system-file cl-webdav :system-name cl-webdav
  :dependencies (cl-fad cxml hunchentoot) :source
  (("git" "https://github.com/edicl/cl-webdav.git")))
 (:ql-project cl-webdriver-client :system-file cl-webdriver-client :system-name
  cl-webdriver-client :dependencies
  (alexandria asdf assoc-utils cl-json dexador quri split-sequence) :source
  (("git" "https://github.com/copyleft/cl-webdriver-client.git")))
 (:ql-project cl-webdriver-client :system-file cl-webdriver-client-test
  :system-name cl-webdriver-client-test :dependencies
  (asdf cl-webdriver-client prove prove-asdf) :source
  (("git" "https://github.com/copyleft/cl-webdriver-client.git")))
 (:ql-project cl-webkit :system-file cl-webkit2 :system-name cl-webkit2
  :dependencies (alexandria asdf cffi cl-cffi-gtk) :source
  (("git" "https://github.com/joachifm/cl-webkit.git")))
 (:ql-project cl-webkit :system-file cl-webkit2 :system-name cl-webkit2/test
  :dependencies (calispel cl-webkit2 fiveam float-features) :source
  (("git" "https://github.com/joachifm/cl-webkit.git")))
 (:ql-project cl-webmachine :system-file org.melusina.webmachine :system-name
  org.melusina.webmachine :dependencies
  (alexandria asdf cl-ppcre hunchentoot parse-number trivia) :source
  (("git" "https://github.com/melusina-org/cl-webmachine.git")))
 (:ql-project cl-webmachine :system-file org.melusina.webmachine :system-name
  org.melusina.webmachine/asset :dependencies (org.melusina.webmachine) :source
  (("git" "https://github.com/melusina-org/cl-webmachine.git")))
 (:ql-project cl-webmachine :system-file org.melusina.webmachine :system-name
  org.melusina.webmachine/development :dependencies
  (alexandria cl-css cl-ppcre cl-who drakma hunchentoot ironclad
   org.melusina.atelier org.melusina.confidence org.melusina.webmachine
   parenscript shasht swank unix-opts)
  :source (("git" "https://github.com/melusina-org/cl-webmachine.git")))
 (:ql-project cl-webmachine :system-file org.melusina.webmachine :system-name
  org.melusina.webmachine/example :dependencies
  (cl-css cl-who hunchentoot org.melusina.webmachine parenscript shasht swank
   unix-opts)
  :source (("git" "https://github.com/melusina-org/cl-webmachine.git")))
 (:ql-project cl-webmachine :system-file org.melusina.webmachine :system-name
  org.melusina.webmachine/server :dependencies
  (cl-css cl-who hunchentoot org.melusina.webmachine parenscript swank) :source
  (("git" "https://github.com/melusina-org/cl-webmachine.git")))
 (:ql-project cl-webmachine :system-file org.melusina.webmachine :system-name
  org.melusina.webmachine/signature :dependencies
  (cl-css cl-who hunchentoot ironclad org.melusina.webmachine parenscript
   shasht swank unix-opts)
  :source (("git" "https://github.com/melusina-org/cl-webmachine.git")))
 (:ql-project cl-webmachine :system-file org.melusina.webmachine :system-name
  org.melusina.webmachine/testsuite :dependencies
  (alexandria cl-css cl-ppcre cl-who drakma hunchentoot ironclad
   org.melusina.confidence org.melusina.webmachine parenscript shasht swank
   unix-opts)
  :source (("git" "https://github.com/melusina-org/cl-webmachine.git")))
 (:ql-project cl-who :system-file cl-who :system-name cl-who :dependencies
  (asdf) :source (("ediware-http" "cl-who")))
 (:ql-project cl-who :system-file cl-who :system-name cl-who-test :dependencies
  (cl-who flexi-streams) :source (("ediware-http" "cl-who")))
 (:ql-project cl-why :system-file cl-why :system-name cl-why :dependencies
  (asdf) :source (("git" "https://github.com/jpcima/cl-why.git")))
 (:ql-project cl-why :system-file cl-why :system-name cl-why-test :dependencies
  (cl-why flexi-streams) :source
  (("git" "https://github.com/jpcima/cl-why.git")))
 (:ql-project cl-with :system-file cl-with :system-name cl-with :dependencies
  (asdf cffi closer-mop) :source
  (("git" "https://github.com/stacksmith/cl-with.git")))
 (:ql-project cl-wol :system-file cl-wol.cli :system-name cl-wol.cli
  :dependencies
  (asdf cl-ascii-table cl-migratum cl-migratum.driver.dbi
   cl-migratum.provider.local-path cl-wol.core clingon)
  :source (("git" "https://github.com/dnaeon/cl-wol.git")))
 (:ql-project cl-wol :system-file cl-wol.core :system-name cl-wol.core
  :dependencies (asdf cl-ppcre usocket) :source
  (("git" "https://github.com/dnaeon/cl-wol.git")))
 (:ql-project cl-wol :system-file cl-wol.test :system-name cl-wol.test
  :dependencies (asdf cl-wol.core rove) :source
  (("git" "https://github.com/dnaeon/cl-wol.git")))
 (:ql-project cl-wordcut :system-file cl-wordcut :system-name cl-wordcut
  :dependencies (asdf) :source
  (("git" "http://github.com/veer66/cl-wordcut.git")))
 (:ql-project cl-wordcut :system-file cl-wordcut :system-name cl-wordcut/test
  :dependencies (cl-wordcut fiveam) :source
  (("git" "http://github.com/veer66/cl-wordcut.git")))
 (:ql-project cl-xdg :system-file cl-xdg :system-name cl-xdg :dependencies
  (cl-sxml cl-xmlspam flexi-streams parse-number split-sequence uiop) :source
  (("git" "https://github.com/eadmund/cl-xdg.git")))
 (:ql-project cl-xdg :system-file cl-xdg :system-name cl-xdg-test :dependencies
  (asdf cl-xdg fiveam uiop) :source
  (("git" "https://github.com/eadmund/cl-xdg.git")))
 (:ql-project cl-xkb :system-file cl-xkb :system-name cl-xkb :dependencies
  (asdf cffi) :source (("git" "https://github.com/malcolmstill/cl-xkb.git")))
 (:ql-project cl-xkeysym :system-file cl-xkeysym :system-name cl-xkeysym
  :dependencies nil :source
  (("git" "https://github.com/stumpwm/cl-xkeysym.git")))
 (:ql-project cl-xmlspam :system-file cl-xmlspam :system-name cl-xmlspam
  :dependencies (cl-ppcre cxml) :source
  (("https" "https://common-lisp.net/project/cl-xmlspam/cl-xmlspam.tgz")))
 (:ql-project cl-xmpp :system-file cl-xmpp :system-name cl-xmpp :dependencies
  (cxml ironclad usocket) :source
  (("https" "https://common-lisp.net/project/cl-xmpp/cl-xmpp_latest.tar.gz")))
 (:ql-project cl-xmpp :system-file cl-xmpp-sasl :system-name cl-xmpp-sasl
  :dependencies (cl-base64 cl-sasl cl-xmpp) :source
  (("https" "https://common-lisp.net/project/cl-xmpp/cl-xmpp_latest.tar.gz")))
 (:ql-project cl-xmpp :system-file cl-xmpp-tls :system-name cl-xmpp-tls
  :dependencies (cl+ssl cl-xmpp-sasl) :source
  (("https" "https://common-lisp.net/project/cl-xmpp/cl-xmpp_latest.tar.gz")))
 (:ql-project cl-xul :system-file cl-xul :system-name cl-xul :dependencies
  (alexandria cl-fad cl-json closer-mop clws cxml log5 md5 parenscript) :source
  (("git" "https://github.com/mmontone/cl-xul.git")))
 (:ql-project cl-xul :system-file cl-xul-test :system-name cl-xul-test
  :dependencies (cl-xul fiveam) :source
  (("git" "https://github.com/mmontone/cl-xul.git")))
 (:ql-project cl-yacc :system-file yacc :system-name yacc :dependencies (asdf)
  :source (("git" "https://github.com/jech/cl-yacc.git") nil nil))
 (:ql-project cl-yaclyaml :system-file cl-yaclyaml :system-name cl-yaclyaml
  :dependencies
  (alexandria cl-interpol cl-ppcre cl-test-more esrap-liquid iterate
   parse-number rutils)
  :source (("git" "https://github.com/mabragor/cl-yaclyaml.git")))
 (:ql-project cl-yaclyaml :system-file cl-yaclyaml :system-name
  cl-yaclyaml-tests :dependencies (cl-interpol cl-yaclyaml fiveam) :source
  (("git" "https://github.com/mabragor/cl-yaclyaml.git")))
 (:ql-project cl-yahoo-finance :system-file cl-yahoo-finance :system-name
  cl-yahoo-finance :dependencies (babel cl-csv drakma url-rewrite yason)
  :source (("git" "https://github.com/pnathan/cl-yahoo-finance.git")))
 (:ql-project cl-yaml :system-file cl-yaml :system-name cl-yaml :dependencies
  (alexandria asdf cl-libyaml cl-ppcre parse-number) :source
  (("git" "https://github.com/eudoxia0/cl-yaml.git")))
 (:ql-project cl-yaml :system-file cl-yaml-test :system-name cl-yaml-test
  :dependencies
  (alexandria asdf cl-fad cl-yaml fiveam generic-comparability
   trivial-benchmark yason)
  :source (("git" "https://github.com/eudoxia0/cl-yaml.git")))
 (:ql-project cl-yesql :system-file cl-yesql :system-name cl-yesql
  :dependencies
  (alexandria asdf asdf-package-system esrap serapeum trivia vernacular)
  :source (("git" "https://github.com/ruricolist/cl-yesql.git")))
 (:ql-project cl-yxorp :system-file yxorp :system-name yxorp :dependencies
  (asdf binding-arrows chipz chunga cl+ssl flexi-streams rutils salza2
   smart-buffer str trivial-garbage usocket usocket-server)
  :source (("git" "https://github.com/charJe/cl-yxorp.git")))
 (:ql-project cl-zipper :system-file cl-zipper :system-name cl-zipper
  :dependencies (asdf prove-asdf) :source
  (("git" "https://github.com/inaimathi/cl-zipper.git")))
 (:ql-project cl-zipper :system-file cl-zipper :system-name cl-zipper-test
  :dependencies (cl-zipper prove-asdf test-utils) :source
  (("git" "https://github.com/inaimathi/cl-zipper.git")))
 (:ql-project cl-zmq :system-file zeromq :system-name zeromq :dependencies
  (cffi cffi-grovel trivial-garbage) :source
  (("git" "https://github.com/freiksenet/cl-zmq.git")))
 (:ql-project cl-zmq :system-file zeromq :system-name zeromq.tests
  :dependencies (bordeaux-threads fiveam zeromq) :source
  (("git" "https://github.com/freiksenet/cl-zmq.git")))
 (:ql-project cl-zstd :system-file zstd :system-name zstd :dependencies
  (asdf cffi cl-octet-streams trivial-gray-streams) :source
  (("git" "https://codeberg.org/glv/cl-zstd.git")))
 (:ql-project cl-zstd :system-file zstd-tests :system-name zstd-tests
  :dependencies (asdf cl-octet-streams fiveam uiop zstd) :source
  (("git" "https://codeberg.org/glv/cl-zstd.git")))
 (:ql-project cl-zyre :system-file zyre :system-name zyre :dependencies
  (asdf cffi cffi-grovel trivia trivial-garbage uiop) :source
  (("git" "https://github.com/jesseoff/cl-zyre.git")))
 (:ql-project cl-zyre :system-file zyre :system-name zyre/tock-client
  :dependencies (local-time local-time-duration zyre) :source
  (("git" "https://github.com/jesseoff/cl-zyre.git")))
 (:ql-project cl-zyre :system-file zyre :system-name zyre/tock-server
  :dependencies (local-time local-time-duration zyre) :source
  (("git" "https://github.com/jesseoff/cl-zyre.git")))
 (:ql-project cl-zyre :system-file zyre :system-name zyre/zpinger :dependencies
  (cl-ppcre log4cl zyre) :source
  (("git" "https://github.com/jesseoff/cl-zyre.git")))
 (:ql-project cl-zyre :system-file zyre :system-name zyre/zyredir :dependencies
  (cl-json zyre) :source (("git" "https://github.com/jesseoff/cl-zyre.git")))
 (:ql-project cl4store :system-file cl4store :system-name cl4store
  :dependencies (asdf cl-rdfxml cl-sparql drakma log5) :source
  (("git" "https://github.com/mmontone/cl4store.git")))
 (:ql-project clache :system-file clache :system-name clache :dependencies
  (alexandria babel cl-annot cl-fad cl-store cl-syntax cl-syntax-annot ironclad
   trivial-garbage)
  :source (("git" "https://github.com/html/clache.git")))
 (:ql-project clache :system-file clache-test :system-name clache-test
  :dependencies (cl-test-more clache) :source
  (("git" "https://github.com/html/clache.git")))
 (:ql-project clack :system-file clack :system-name clack :dependencies
  (alexandria asdf bordeaux-threads lack lack-middleware-backtrace lack-util
   swank uiop usocket)
  :source (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack :system-file clack-handler-hunchentoot :system-name
  clack-handler-hunchentoot :dependencies
  (alexandria asdf bordeaux-threads clack-socket flexi-streams hunchentoot
   split-sequence)
  :source (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack :system-file clack-handler-toot :system-name
  clack-handler-toot :dependencies
  (alexandria asdf bordeaux-threads cl-ppcre flexi-streams split-sequence toot)
  :source (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack :system-file clack-handler-wookie :system-name
  clack-handler-wookie :dependencies
  (alexandria asdf babel cl-async clack-socket fast-http fast-io flexi-streams
   quri split-sequence wookie)
  :source (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack :system-file clack-socket :system-name clack-socket
  :dependencies (asdf) :source
  (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack :system-file clack-test :system-name clack-test
  :dependencies
  (asdf bordeaux-threads clack clack-handler-hunchentoot dexador flexi-streams
   http-body ironclad rove usocket)
  :source (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack :system-file t-clack-handler-fcgi :system-name
  t-clack-handler-fcgi :dependencies (asdf clack-test) :source
  (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack :system-file t-clack-handler-hunchentoot :system-name
  t-clack-handler-hunchentoot :dependencies
  (asdf clack-handler-hunchentoot clack-test) :source
  (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack :system-file t-clack-handler-toot :system-name
  t-clack-handler-toot :dependencies (asdf clack-handler-toot clack-test)
  :source (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack :system-file t-clack-handler-wookie :system-name
  t-clack-handler-wookie :dependencies (asdf clack-test) :source
  (("git" "https://github.com/fukamachi/clack.git")))
 (:ql-project clack-errors :system-file clack-errors :system-name clack-errors
  :dependencies
  (asdf cl-ppcre clack closer-mop djula local-time trivial-backtrace) :source
  (("git" "https://github.com/eudoxia0/clack-errors.git")))
 (:ql-project clack-errors :system-file clack-errors-demo :system-name
  clack-errors-demo :dependencies (asdf cl-markup clack-errors) :source
  (("git" "https://github.com/eudoxia0/clack-errors.git")))
 (:ql-project clack-errors :system-file clack-errors-test :system-name
  clack-errors-test :dependencies
  (asdf clack clack-errors drakma fiveam hunchentoot) :source
  (("git" "https://github.com/eudoxia0/clack-errors.git")))
 (:ql-project clack-errors :system-file lack-middleware-clack-errors
  :system-name lack-middleware-clack-errors :dependencies (asdf clack-errors)
  :source (("git" "https://github.com/eudoxia0/clack-errors.git")))
 (:ql-project clack-pretend :system-file clack-pretend :system-name
  clack-pretend :dependencies
  (alexandria asdf circular-streams cl-hash-util clack lack-request) :source
  (("git" "https://github.com/BnMcGn/clack-pretend.git")))
 (:ql-project clack-static-asset-middleware :system-file
  clack-static-asset-djula-helpers :system-name
  clack-static-asset-djula-helpers :dependencies
  (asdf clack-static-asset-middleware djula) :source
  (("git" "https://github.com/fisxoj/clack-static-asset-middleware.git")))
 (:ql-project clack-static-asset-middleware :system-file
  clack-static-asset-middleware :system-name clack-static-asset-middleware
  :dependencies
  (alexandria asdf cl-ppcre ironclad local-time trivial-mimes uiop) :source
  (("git" "https://github.com/fisxoj/clack-static-asset-middleware.git")))
 (:ql-project clack-static-asset-middleware :system-file
  clack-static-asset-middleware-test :system-name
  clack-static-asset-middleware-test :dependencies
  (asdf clack-static-asset-djula-helpers clack-static-asset-middleware
   lack-test prove prove-asdf)
  :source
  (("git" "https://github.com/fisxoj/clack-static-asset-middleware.git")))
 (:ql-project clad :system-file clad :system-name clad :dependencies (asdf)
  :source (("git" "https://gitlab.common-lisp.net/mantoniotti/CLAD.git")))
 (:ql-project class-options :system-file class-options :system-name
  class-options :dependencies (asdf closer-mop) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/class-options_latest.tar.gz")))
 (:ql-project class-options :system-file class-options_tests :system-name
  class-options_tests :dependencies
  (asdf class-options closer-mop enhanced-boolean parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/class-options_latest.tar.gz")))
 (:ql-project classimp :system-file classimp :system-name classimp
  :dependencies (asdf cffi split-sequence) :source
  (("git" "https://github.com/3b/classimp.git")))
 (:ql-project classimp :system-file classimp-samples :system-name
  classimp-samples :dependencies (asdf cl-fad cl-glu cl-glut cl-ilut classimp)
  :source (("git" "https://github.com/3b/classimp.git")))
 (:ql-project classowary :system-file classowary :system-name classowary
  :dependencies (asdf documentation-utils) :source
  (("git" "https://github.com/shinmera/classowary.git")))
 (:ql-project classowary :system-file classowary-test :system-name
  classowary-test :dependencies (asdf classowary parachute) :source
  (("git" "https://github.com/shinmera/classowary.git")))
 (:ql-project clast :system-file clast :system-name clast :dependencies (asdf)
  :source (("git" "https://git.code.sf.net/p/clast/code")))
 (:ql-project clast :system-file clast :system-name clast/tests :dependencies
  (clast fiveam) :source (("git" "https://git.code.sf.net/p/clast/code")))
 (:ql-project clath :system-file clath :system-name clath :dependencies
  (alexandria asdf cl-hash-util cl-json cl-who clack drakma flexi-streams
   ironclad jose ningle north ubiquitous)
  :source (("git" "https://github.com/BnMcGn/clath.git")))
 (:ql-project clavatar :system-file clavatar :system-name clavatar
  :dependencies (babel drakma iolib ironclad) :source
  (("git" "https://github.com/pinterface/clavatar.git")))
 (:ql-project clavier :system-file clavier :system-name clavier :dependencies
  (alexandria asdf chronicity cl-fad cl-ppcre closer-mop) :source
  (("git" "https://github.com/mmontone/clavier.git")))
 (:ql-project clavier :system-file clavier.test :system-name clavier.test
  :dependencies (asdf clavier stefil) :source
  (("git" "https://github.com/mmontone/clavier.git")))
 (:ql-project claw :system-file claw :system-name claw :dependencies
  (alexandria asdf cffi cl-json cl-ppcre claw-support local-time
   trivial-features uiop)
  :source
  (("tagged-git" "https://github.com/borodust/claw-legacy.git" "stable")))
 (:ql-project claw :system-file claw :system-name claw/cffi :dependencies
  (alexandria cffi cl-json cl-ppcre claw-support local-time trivial-features
   uiop)
  :source
  (("tagged-git" "https://github.com/borodust/claw-legacy.git" "stable")))
 (:ql-project claw :system-file claw :system-name claw/spec :dependencies
  (alexandria cl-json cl-ppcre claw-support local-time uiop) :source
  (("tagged-git" "https://github.com/borodust/claw-legacy.git" "stable")))
 (:ql-project claw :system-file claw :system-name claw/util :dependencies
  (alexandria cl-ppcre local-time uiop) :source
  (("tagged-git" "https://github.com/borodust/claw-legacy.git" "stable")))
 (:ql-project claw :system-file claw :system-name claw/wrapper :dependencies
  (alexandria cl-json cl-ppcre claw-support local-time uiop) :source
  (("tagged-git" "https://github.com/borodust/claw-legacy.git" "stable")))
 (:ql-project claw-olm :system-file claw-olm :system-name claw-olm
  :dependencies (asdf claw-olm-bindings) :source
  (("git" "https://github.com/K1D77A/claw-olm.git")))
 (:ql-project claw-olm :system-file claw-olm-bindings :system-name
  claw-olm-bindings :dependencies (asdf cffi trivial-features uiop) :source
  (("git" "https://github.com/K1D77A/claw-olm.git")))
 (:ql-project claw-support :system-file claw-support :system-name claw-support
  :dependencies (asdf) :source
  (("tagged-git" "https://github.com/borodust/claw-support.git" "stable")))
 (:ql-project claw-utils :system-file claw-utils :system-name claw-utils
  :dependencies (alexandria asdf cffi claw) :source
  (("tagged-git" "https://github.com/borodust/claw-utils.git" "stable")))
 (:ql-project clawk :system-file clawk :system-name clawk :dependencies
  (asdf regex) :source
  (("git" "https://github.com/sharplispers/clawk.git") nil))
 (:ql-project claxy :system-file claxy :system-name claxy :dependencies
  (alexandria asdf dexador) :source
  (("git" "https://github.com/BnMcGn/claxy.git")))
 (:ql-project clazy :system-file clazy :system-name clazy :dependencies (asdf)
  :source (("git" "https://gitlab.common-lisp.net/clazy/clazy.git")))
 (:ql-project clem :system-file clem :system-name clem :dependencies (asdf)
  :source (("git" "https://github.com/slyrus/clem.git") nil))
 (:ql-project clem :system-file clem-benchmark :system-name clem-benchmark
  :dependencies (asdf clem) :source
  (("git" "https://github.com/slyrus/clem.git") nil))
 (:ql-project clem :system-file clem-test :system-name clem-test :dependencies
  (asdf clem) :source (("git" "https://github.com/slyrus/clem.git") nil))
 (:ql-project cleric :system-file cleric :system-name cleric :dependencies
  (alexandria asdf com.gigamonkeys.binary-data epmd erlang-term md5 usocket)
  :source (("git" "https://github.com/flambard/CLERIC.git")))
 (:ql-project cleric :system-file cleric-test :system-name cleric-test
  :dependencies (asdf cleric erlang-term-test fiveam flexi-streams) :source
  (("git" "https://github.com/flambard/CLERIC.git")))
 (:ql-project clerk :system-file clerk :system-name clerk :dependencies
  (asdf bordeaux-threads cl-ppcre prove-asdf) :source
  (("git" "https://github.com/lisp-maintainers/clerk.git")))
 (:ql-project clerk :system-file clerk :system-name clerk-test :dependencies
  (prove prove-asdf) :source
  (("git" "https://github.com/lisp-maintainers/clerk.git")))
 (:ql-project clesh :system-file clesh :system-name clesh :dependencies
  (asdf named-readtables trivial-shell) :source
  (("git" "https://github.com/Neronus/clesh.git")))
 (:ql-project clesh :system-file clesh-tests :system-name clesh-tests
  :dependencies (asdf clesh lisp-unit) :source
  (("git" "https://github.com/Neronus/clesh.git")))
 (:ql-project cletris :system-file cletris :system-name cletris :dependencies
  (asdf cl-ppcre pal) :source
  (("git" "https://github.com/nlamirault/cletris.git")))
 (:ql-project cletris :system-file cletris-network :system-name cletris-network
  :dependencies (asdf cl-log cl-ppcre cletris usocket) :source
  (("git" "https://github.com/nlamirault/cletris.git")))
 (:ql-project cletris :system-file cletris-test :system-name cletris-test
  :dependencies (asdf cletris prove prove-asdf) :source
  (("git" "https://github.com/nlamirault/cletris.git")))
 (:ql-project clfswm :system-file clfswm :system-name clfswm :dependencies
  (clx) :source (("git" "https://gitlab.common-lisp.net/clfswm/clfswm.git")))
 (:ql-project clgplot :system-file clgplot :system-name clgplot :dependencies
  (asdf iterate uiop) :source
  (("git" "https://github.com/masatoi/clgplot.git")))
 (:ql-project clgplot :system-file clgplot-test :system-name clgplot-test
  :dependencies (asdf clgplot prove prove-asdf) :source
  (("git" "https://github.com/masatoi/clgplot.git")))
 (:ql-project clhs :system-file clhs :system-name clhs :dependencies nil
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/clhs_latest.tar.gz")))
 (:ql-project clickr :system-file clickr :system-name clickr :dependencies
  (cl-ppcre md5 s-xml s-xml-rpc trivial-http) :source
  (("git" "https://github.com/schani/clickr.git")))
 (:ql-project clim-widgets :system-file clim-widgets :system-name clim-widgets
  :dependencies
  (asdf cl-fad closer-mop local-time manifest mcclim nsort perlre
   simple-date-time)
  :source (("git" "https://github.com/jschatzer/clim-widgets.git")))
 (:ql-project climacs :system-file climacs :system-name climacs :dependencies
  (asdf flexichain mcclim) :source
  (("git" "https://gitlab.common-lisp.net/climacs/climacs.git")))
 (:ql-project climc :system-file climc :system-name climc :dependencies
  (asdf cl-ppcre cl-xmpp-tls mcclim) :source
  (("git" "https://github.com/nlamirault/climc.git")))
 (:ql-project climc :system-file climc-test :system-name climc-test
  :dependencies (asdf climc lisp-unit) :source
  (("git" "https://github.com/nlamirault/climc.git")))
 (:ql-project climon :system-file climon :system-name climon :dependencies
  (asdf pal) :source (("git" "https://github.com/nlamirault/climon.git")))
 (:ql-project climon :system-file climon-test :system-name climon-test
  :dependencies (asdf climon prove prove-asdf) :source
  (("git" "https://github.com/nlamirault/climon.git")))
 (:ql-project clinch :system-file clinch :system-name clinch :dependencies
  (asdf bordeaux-threads cl-opengl rtg-math sdl2 swank trivial-channels
   trivial-garbage)
  :source (("git" "https://github.com/BradWBeer/CLinch.git")))
 (:ql-project clinch :system-file clinch-cairo :system-name clinch-cairo
  :dependencies (asdf cffi cl-cairo2 clinch) :source
  (("git" "https://github.com/BradWBeer/CLinch.git")))
 (:ql-project clinch :system-file clinch-classimp :system-name clinch-classimp
  :dependencies (asdf cffi classimp clinch) :source
  (("git" "https://github.com/BradWBeer/CLinch.git")))
 (:ql-project clinch :system-file clinch-freeimage :system-name
  clinch-freeimage :dependencies (asdf cffi cl-freeimage clinch) :source
  (("git" "https://github.com/BradWBeer/CLinch.git")))
 (:ql-project clinch :system-file clinch-pango :system-name clinch-pango
  :dependencies (asdf cffi cl-cairo2 cl-pango clinch clinch-cairo xmls) :source
  (("git" "https://github.com/BradWBeer/CLinch.git")))
 (:ql-project clinenoise :system-file clinenoise :system-name clinenoise
  :dependencies (alexandria asdf cffi cffi-grovel split-sequence) :source
  (("git" "https://github.com/jasom/clinenoise.git")))
 (:ql-project clingon :system-file clingon :system-name clingon :dependencies
  (asdf bobbin cl-reexport split-sequence uiop with-user-abort) :source
  (("git" "https://github.com/dnaeon/clingon.git")))
 (:ql-project clingon :system-file clingon.demo :system-name clingon.demo
  :dependencies (asdf clingon) :source
  (("git" "https://github.com/dnaeon/clingon.git")))
 (:ql-project clingon :system-file clingon.intro :system-name clingon.intro
  :dependencies (asdf clingon) :source
  (("git" "https://github.com/dnaeon/clingon.git")))
 (:ql-project clingon :system-file clingon.test :system-name clingon.test
  :dependencies (asdf clingon rove) :source
  (("git" "https://github.com/dnaeon/clingon.git")))
 (:ql-project clip :system-file clip :system-name clip :dependencies
  (array-utils asdf lquery) :source
  (("git" "https://github.com/Shinmera/clip.git")))
 (:ql-project clipper :system-file clipper :system-name clipper :dependencies
  (alexandria cl-fad cl-syntax-annot closer-mop dexador fast-io opticl quri
   split-sequence zs3)
  :source (("git" "https://github.com/Rudolph-Miller/clipper.git")))
 (:ql-project clipper :system-file clipper-test :system-name clipper-test
  :dependencies (clipper integral prove prove-asdf) :source
  (("git" "https://github.com/Rudolph-Miller/clipper.git")))
 (:ql-project clite :system-file clite :system-name clite :dependencies nil
  :source (("git" "https://github.com/lispy-stuff/clite.git")))
 (:ql-project clj :system-file clj :system-name clj :dependencies
  (agnostic-lizard arrow-macros asdf cl-hamt local-package-aliases
   named-readtables optima prove-asdf test-utils)
  :source (("git" "https://github.com/inaimathi/clj.git")))
 (:ql-project clj :system-file clj :system-name clj/test :dependencies
  (clj prove-asdf test-utils) :source
  (("git" "https://github.com/inaimathi/clj.git")))
 (:ql-project clj-con :system-file clj-con :system-name clj-con :dependencies
  (asdf bordeaux-threads) :source
  (("git" "https://github.com/dtenny/clj-con.git")))
 (:ql-project clj-con :system-file clj-con-test :system-name clj-con-test
  :dependencies (asdf clj-con fiveam) :source
  (("git" "https://github.com/dtenny/clj-con.git")))
 (:ql-project clj-re :system-file clj-re :system-name clj-re :dependencies
  (asdf cl-ppcre named-readtables) :source
  (("git" "https://github.com/dtenny/clj-re.git")))
 (:ql-project clj-re :system-file clj-re-test :system-name clj-re-test
  :dependencies (asdf clj-re fiveam) :source
  (("git" "https://github.com/dtenny/clj-re.git")))
 (:ql-project clml :system-file clml :system-name clml :dependencies
  (asdf clml.association-rule clml.blas clml.classifiers clml.clustering
   clml.data clml.decision-tree clml.graph clml.hjs clml.lapack
   clml.nearest-search clml.nonparametric clml.numeric clml.pca clml.som
   clml.statistics clml.svm clml.text clml.time-series clml.utility)
  :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.association-rule :system-name
  clml.association-rule :dependencies (asdf clml.hjs) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.blas :system-name clml.blas :dependencies
  (asdf clml.blas.complex clml.blas.hompack clml.blas.real) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.blas :system-name clml.blas.complex
  :dependencies (f2cl-lib) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.blas :system-name clml.blas.hompack
  :dependencies (f2cl-lib) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.blas :system-name clml.blas.real
  :dependencies (f2cl-lib) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.classifiers :system-name clml.classifiers
  :dependencies (asdf clml.clustering clml.hjs clml.svm) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.clustering :system-name clml.clustering
  :dependencies (asdf clml.blas clml.hjs clml.nearest-search iterate) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.data :system-name clml.data :dependencies
  (asdf clml.data.r-datasets) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.data.r-datasets :system-name
  clml.data.r-datasets :dependencies
  (asdf cl-ppcre clml.data.r-datasets-package clml.hjs clml.utility drakma)
  :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.decision-tree :system-name
  clml.decision-tree :dependencies (asdf clml.hjs lparallel) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.docs :system-name clml.docs :dependencies
  (asdf cl-ppcre clml clod iterate) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.graph :system-name clml.graph
  :dependencies
  (asdf cl-fad clml.hjs clml.statistics clml.time-series split-sequence)
  :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.hjs :system-name clml.hjs :dependencies
  (alexandria asdf clml.blas clml.lapack clml.statistics clml.utility future
   introspect-environment iterate)
  :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.lapack :system-name clml.lapack
  :dependencies (asdf clml.blas clml.lapack-real f2cl-lib) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.lapack :system-name clml.lapack-real
  :dependencies (clml.blas f2cl-lib) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.nearest-search :system-name
  clml.nearest-search :dependencies (asdf clml.hjs clml.nonparametric clml.pca)
  :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.nonparametric :system-name
  clml.nonparametric :dependencies (asdf clml.hjs) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.numeric :system-name clml.numeric
  :dependencies (asdf clml.hjs) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.pca :system-name clml.pca :dependencies
  (asdf clml.decision-tree clml.hjs) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.pca :system-name clml.pca.examples
  :dependencies (clml.hjs clml.pca) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.som :system-name clml.som :dependencies
  (asdf clml.hjs clml.statistics split-sequence) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.som :system-name clml.som.example
  :dependencies (clml.hjs clml.som split-sequence) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.statistics :system-name clml.statistics
  :dependencies (asdf clml.statistics.rand) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.statistics.rand :system-name
  clml.statistics.rand :dependencies (asdf) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.svm :system-name clml.svm :dependencies
  (asdf clml.decision-tree clml.hjs future lparallel) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.svm :system-name clml.svm.examples
  :dependencies (clml.hjs clml.svm) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.test :system-name clml.test :dependencies
  (asdf clml lisp-unit) :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.text :system-name clml.text :dependencies
  (asdf clml.hjs clml.nonparametric split-sequence) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.time-series :system-name clml.time-series
  :dependencies (array-operations asdf clml.hjs clml.numeric iterate uiop)
  :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file clml.utility :system-name clml.utility
  :dependencies
  (alexandria asdf cl-fad cl-ppcre drakma iterate parse-number trivial-garbage)
  :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file f2cl-lib :system-name f2cl-lib :dependencies
  (asdf) :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file fork-future :system-name fork-future
  :dependencies (asdf cffi cl-store) :source
  (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clml :system-file future :system-name future :dependencies
  (alexandria asdf) :source (("git" "https://github.com/mmaul/clml.git")))
 (:ql-project clnuplot :system-file clnuplot :system-name clnuplot
  :dependencies (cl-containers cl-mathstats metabang-bind trivial-shell)
  :source (("git" "http://gitlab.common-lisp.net/clnuplot/clnuplot.git") nil))
 (:ql-project clobber :system-file clobber :system-name clobber :dependencies
  (asdf) :source (("git" "https://github.com/robert-strandh/Clobber.git")))
 (:ql-project clod :system-file clod :system-name clod :dependencies
  (asdf cl-ppcre closer-mop iterate) :source
  (("mercurial" "https://bitbucket.org/eeeickythump/clod")))
 (:ql-project clods-export :system-file clods-export :system-name clods-export
  :dependencies (alexandria asdf cl-fad cxml iterate local-time zip) :source
  (("git" "https://github.com/jlahd/clods-export.git")))
 (:ql-project clog :system-file clog :system-name clog :dependencies
  (alexandria asdf atomics bordeaux-threads cl-dbi cl-isaac cl-pass cl-ppcre
   cl-template clack closer-mop hunchentoot lack-middleware-static lack-request
   lack-util-writer-stream mgl-pax parse-float quri sqlite trivial-open-browser
   websocket-driver)
  :source (("git" "https://github.com/rabbibotton/clog.git")))
 (:ql-project clog :system-file clog :system-name clog/docs :dependencies
  (3bmd clog colorize) :source
  (("git" "https://github.com/rabbibotton/clog.git")))
 (:ql-project clog :system-file clog :system-name clog/tools :dependencies
  (clog clog-ace clog-terminal definitions s-base64 swank) :source
  (("git" "https://github.com/rabbibotton/clog.git")))
 (:ql-project clog :system-file hello-builder :system-name hello-builder
  :dependencies (asdf clog) :source
  (("git" "https://github.com/rabbibotton/clog.git")))
 (:ql-project clog :system-file hello-builder :system-name hello-builder/tools
  :dependencies
  (clog clog-ace clog-terminal definitions hello-builder s-base64 swank)
  :source (("git" "https://github.com/rabbibotton/clog.git")))
 (:ql-project clog :system-file hello-clog :system-name hello-clog
  :dependencies (asdf clog) :source
  (("git" "https://github.com/rabbibotton/clog.git")))
 (:ql-project clog-ace :system-file clog-ace :system-name clog-ace
  :dependencies (asdf clog) :source
  (("git" "https://github.com/rabbibotton/clog-ace.git")))
 (:ql-project clog-ace :system-file clog-ace :system-name clog-ace/tools
  :dependencies (clog clog-ace) :source
  (("git" "https://github.com/rabbibotton/clog-ace.git")))
 (:ql-project clog-collection :system-file clog-collection :system-name
  clog-collection :dependencies
  (alexandria asdf cl-ppcre clog iterate literate-lisp yason) :source
  (("git" "https://github.com/jingtaozf/clog-collection.git")))
 (:ql-project clog-plotly :system-file clog-plotly :system-name clog-plotly
  :dependencies (asdf clog) :source
  (("git" "https://github.com/rabbibotton/clog-plotly.git")))
 (:ql-project clog-plotly :system-file clog-plotly :system-name
  clog-plotly/tools :dependencies (clog clog-plotly) :source
  (("git" "https://github.com/rabbibotton/clog-plotly.git")))
 (:ql-project clog-terminal :system-file clog-terminal :system-name
  clog-terminal :dependencies (asdf clog) :source
  (("git" "https://github.com/rabbibotton/clog-terminal.git")))
 (:ql-project clog-terminal :system-file clog-terminal :system-name
  clog-terminal/tools :dependencies (clog clog-terminal) :source
  (("git" "https://github.com/rabbibotton/clog-terminal.git")))
 (:ql-project clohost :system-file clohost :system-name clohost :dependencies
  (asdf com.inuoe.jzon crypto-shortcuts documentation-utils drakma
   trivial-mimes)
  :source (("git" "https://github.com/shinmera/clohost.git")))
 (:ql-project clonsigna :system-file clonsigna :system-name clonsigna
  :dependencies
  (alexandria babel cl+ssl cl-base64 cl-ppcre iolib split-sequence) :source
  (("git" "https://gitlab.common-lisp.net/clonsigna/clonsigna.git")))
 (:ql-project clop :system-file clop :system-name clop :dependencies
  (alexandria asdf esrap local-time parse-number str) :source
  (("LATEST-GITHUB-TAG" "https://github.com/sheepduke/clop.git")))
 (:ql-project clop :system-file clop :system-name clop-tests :dependencies
  (clop fiveam) :source
  (("LATEST-GITHUB-TAG" "https://github.com/sheepduke/clop.git")))
 (:ql-project clos-diff :system-file clos-diff :system-name clos-diff
  :dependencies (closer-mop) :source
  (("git" "https://github.com/krzysz00/clos-diff.git")))
 (:ql-project clos-fixtures :system-file clos-fixtures :system-name
  clos-fixtures :dependencies nil :source
  (("git" "https://github.com/eudoxia0/clos-fixtures.git")))
 (:ql-project clos-fixtures :system-file clos-fixtures-test :system-name
  clos-fixtures-test :dependencies (clos-fixtures fiveam) :source
  (("git" "https://github.com/eudoxia0/clos-fixtures.git")))
 (:ql-project closer-mop :system-file closer-mop :system-name closer-mop
  :dependencies (asdf) :source
  (("git" "https://github.com/pcostanza/closer-mop.git") nil))
 (:ql-project closure-common :system-file closure-common :system-name
  closure-common :dependencies (asdf babel trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/closure-common.git") nil))
 (:ql-project closure-html :system-file closure-html :system-name closure-html
  :dependencies (asdf closure-common flexi-streams) :source
  (("git" "https://github.com/bluelisp/closure-html.git")))
 (:ql-project clouchdb :system-file clouchdb :system-name clouchdb
  :dependencies (closer-mop drakma flexi-streams parenscript s-base64) :source
  (("https"
    "https://common-lisp.net/project/clouchdb/clouchdb-latest.tar.gz")))
 (:ql-project clouchdb :system-file clouchdb-examples :system-name
  clouchdb-examples :dependencies (clouchdb parenscript) :source
  (("https"
    "https://common-lisp.net/project/clouchdb/clouchdb-latest.tar.gz")))
 (:ql-project clsql :system-file clsql :system-name clsql :dependencies
  (asdf uffi) :source (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-aodbc :system-name clsql-aodbc
  :dependencies (asdf) :source (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-cffi :system-name clsql-cffi
  :dependencies (asdf clsql) :source (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-mysql :system-name clsql-mysql
  :dependencies (asdf clsql clsql-uffi uffi) :source (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-odbc :system-name clsql-odbc
  :dependencies (asdf clsql clsql-uffi) :source (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-postgresql :system-name clsql-postgresql
  :dependencies (asdf clsql clsql-uffi) :source (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-postgresql-socket :system-name
  clsql-postgresql-socket :dependencies (asdf clsql md5 uffi) :source
  (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-postgresql-socket3 :system-name
  clsql-postgresql-socket3 :dependencies (asdf cl-postgres clsql md5) :source
  (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-sqlite :system-name clsql-sqlite
  :dependencies (asdf clsql clsql-uffi) :source (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-sqlite3 :system-name clsql-sqlite3
  :dependencies (asdf clsql clsql-uffi) :source (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-tests :system-name clsql-tests
  :dependencies (asdf clsql rt uffi) :source (("kmr-git" "clsql")))
 (:ql-project clsql :system-file clsql-uffi :system-name clsql-uffi
  :dependencies (asdf clsql uffi) :source (("kmr-git" "clsql")))
 (:ql-project clsql-fluid :system-file clsql-fluid :system-name clsql-fluid
  :dependencies (bordeaux-threads closer-mop clsql) :source
  (("git" "https://github.com/html/clsql-fluid.git")))
 (:ql-project clsql-helper :system-file clsql-helper :system-name clsql-helper
  :dependencies
  (access alexandria asdf cl-interpol cl-ppcre closer-mop clsql collectors
   iterate md5 symbol-munger)
  :source (("git" "https://github.com/AccelerationNet/clsql-helper.git")))
 (:ql-project clsql-helper :system-file clsql-helper-slot-coercer :system-name
  clsql-helper-slot-coercer :dependencies (asdf closer-mop clsql-helper)
  :source (("git" "https://github.com/AccelerationNet/clsql-helper.git")))
 (:ql-project clsql-helper :system-file clsql-helper-slot-coercer :system-name
  clsql-helper-slot-coercer-test :dependencies
  (clsql-helper-slot-coercer lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/clsql-helper.git")))
 (:ql-project clsql-helper :system-file clsql-helper :system-name
  clsql-helper-test :dependencies (clsql-helper clsql-tests lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/clsql-helper.git")))
 (:ql-project clsql-local-time :system-file clsql-local-time :system-name
  clsql-local-time :dependencies (asdf clsql local-time) :source
  (("git" "https://github.com/moderninterpreters/clsql-local-time.git")))
 (:ql-project clsql-orm :system-file clsql-orm :system-name clsql-orm
  :dependencies (cl-inflector cl-interpol cl-ppcre clsql iterate symbol-munger)
  :source (("git" "https://github.com/AccelerationNet/clsql-orm.git")))
 (:ql-project clss :system-file clss :system-name clss :dependencies
  (array-utils asdf plump) :source
  (("git" "https://github.com/Shinmera/clss.git")))
 (:ql-project cltcl :system-file cltcl :system-name cltcl :dependencies nil
  :source (("git" "https://github.com/nilqed/cltcl.git")))
 (:ql-project cluffer :system-file cluffer :system-name cluffer :dependencies
  (asdf cluffer-base cluffer-simple-buffer cluffer-simple-line
   cluffer-standard-buffer cluffer-standard-line)
  :source (("git" "https://github.com/robert-strandh/Cluffer.git")))
 (:ql-project cluffer :system-file cluffer-base :system-name cluffer-base
  :dependencies (acclimation asdf) :source
  (("git" "https://github.com/robert-strandh/Cluffer.git")))
 (:ql-project cluffer :system-file cluffer-simple-buffer :system-name
  cluffer-simple-buffer :dependencies (asdf cluffer-base) :source
  (("git" "https://github.com/robert-strandh/Cluffer.git")))
 (:ql-project cluffer :system-file cluffer-simple-line :system-name
  cluffer-simple-line :dependencies (asdf cluffer-base) :source
  (("git" "https://github.com/robert-strandh/Cluffer.git")))
 (:ql-project cluffer :system-file cluffer-standard-buffer :system-name
  cluffer-standard-buffer :dependencies (asdf cluffer-base clump) :source
  (("git" "https://github.com/robert-strandh/Cluffer.git")))
 (:ql-project cluffer :system-file cluffer-standard-line :system-name
  cluffer-standard-line :dependencies (asdf cluffer-base) :source
  (("git" "https://github.com/robert-strandh/Cluffer.git")))
 (:ql-project cluffer :system-file cluffer-test :system-name cluffer-test
  :dependencies (asdf cluffer) :source
  (("git" "https://github.com/robert-strandh/Cluffer.git")))
 (:ql-project clump :system-file clump :system-name clump :dependencies
  (clump-2-3-tree clump-binary-tree) :source
  (("git" "https://github.com/robert-strandh/Clump.git")))
 (:ql-project clump :system-file clump-2-3-tree :system-name clump-2-3-tree
  :dependencies (acclimation) :source
  (("git" "https://github.com/robert-strandh/Clump.git")))
 (:ql-project clump :system-file clump-binary-tree :system-name
  clump-binary-tree :dependencies (acclimation) :source
  (("git" "https://github.com/robert-strandh/Clump.git")))
 (:ql-project clump :system-file clump-test :system-name clump-test
  :dependencies (clump) :source
  (("git" "https://github.com/robert-strandh/Clump.git")))
 (:ql-project clunit :system-file clunit :system-name clunit :dependencies nil
  :source (("git" "https://github.com/tgutu/clunit.git")))
 (:ql-project clunit2 :system-file clunit2 :system-name clunit2 :dependencies
  (asdf) :source (("git" "https://notabug.org/cage/clunit2.git")))
 (:ql-project clustered-intset :system-file clustered-intset :system-name
  clustered-intset :dependencies (alexandria asdf) :source
  (("git" "https://github.com/dtenny/clustered-intset.git")))
 (:ql-project clustered-intset :system-file clustered-intset-test :system-name
  clustered-intset-test :dependencies (alexandria asdf clustered-intset fiveam)
  :source (("git" "https://github.com/dtenny/clustered-intset.git")))
 (:ql-project clusters :system-file clusters :system-name clusters
  :dependencies
  (alexandria asdf bordeaux-threads cl-data-structures
   documentation-utils-extensions iterate lparallel metabang-bind serapeum)
  :source (("git" "https://github.com/sirherrbatka/clusters.git")))
 (:ql-project clusters :system-file clusters-tests :system-name clusters-tests
  :dependencies (asdf clusters prove prove-asdf) :source
  (("git" "https://github.com/sirherrbatka/clusters.git")))
 (:ql-project clutter :system-file clutter :system-name clutter :dependencies
  (asdf closer-mop doplus) :source
  (("latest-github-release" "https://github.com/alessiostalla/clutter.git")))
 (:ql-project clutter :system-file clutter :system-name clutter/tests
  :dependencies (clutter dissect rove) :source
  (("latest-github-release" "https://github.com/alessiostalla/clutter.git")))
 (:ql-project clweb :system-file clweb :system-name clweb :dependencies (asdf)
  :source (("git" "https://github.com/plotnick/clweb.git")))
 (:ql-project clweb :system-file clweb :system-name clweb/tests :dependencies
  (clweb) :source (("git" "https://github.com/plotnick/clweb.git")))
 (:ql-project clws :system-file clws :system-name clws :dependencies
  (chunga cl-base64 flexi-streams iolib ironclad split-sequence) :source
  (("git" "https://github.com/3b/clws.git")))
 (:ql-project clx :system-file clx :system-name clx :dependencies (asdf)
  :source (("git" "https://github.com/sharplispers/clx.git")))
 (:ql-project clx :system-file clx :system-name clx/test :dependencies
  (clx fiasco) :source (("git" "https://github.com/sharplispers/clx.git")))
 (:ql-project clx-xembed :system-file xembed :system-name xembed :dependencies
  (asdf clx) :source (("git" "https://github.com/laynor/clx-xembed.git")))
 (:ql-project clx-xkeyboard :system-file xkeyboard :system-name xkeyboard
  :dependencies (clx) :source
  (("git" "https://github.com/filonenko-mikhail/clx-xkeyboard.git")))
 (:ql-project clx-xkeyboard :system-file xkeyboard :system-name xkeyboard-test
  :dependencies (xkeyboard) :source
  (("git" "https://github.com/filonenko-mikhail/clx-xkeyboard.git")))
 (:ql-project cmake-parser :system-file cmake-parser :system-name cmake-parser
  :dependencies (alexandria asdf esrap) :source
  (("git" "https://github.com/zbq/cmake-parser.git")))
 (:ql-project cmd :system-file cmd :system-name cmd :dependencies
  (alexandria asdf serapeum shlex trivia trivial-garbage) :source
  (("git" "https://github.com/ruricolist/cmd.git")))
 (:ql-project cmu-infix :system-file cmu-infix :system-name cmu-infix
  :dependencies (asdf named-readtables) :source
  (("git" "https://github.com/rigetticomputing/cmu-infix.git")))
 (:ql-project cmu-infix :system-file cmu-infix-tests :system-name
  cmu-infix-tests :dependencies (asdf cmu-infix fiasco uiop) :source
  (("git" "https://github.com/rigetticomputing/cmu-infix.git")))
 (:ql-project codata-recommended-values :system-file codata-recommended-values
  :system-name codata-recommended-values :dependencies (asdf) :source
  (("git"
    "https://github.com/ralph-schleicher/codata-recommended-values.git")))
 (:ql-project codex :system-file codex :system-name codex :dependencies
  (alexandria asdf cl-ppcre cl-slug codex-templates common-doc
   common-doc-contrib docparser pandocl)
  :source (("git" "https://github.com/CommonDoc/codex.git")))
 (:ql-project codex :system-file codex-templates :system-name codex-templates
  :dependencies (asdf cl-fad common-html djula trivial-types) :source
  (("git" "https://github.com/CommonDoc/codex.git")))
 (:ql-project coleslaw :system-file coleslaw :system-name coleslaw
  :dependencies
  (3bmd 3bmd-ext-code-blocks alexandria asdf cl-fad cl-ppcre cl-unicode
   closer-mop closure-template inferior-shell local-time uiop)
  :source (("git" "https://github.com/coleslaw-org/coleslaw.git")))
 (:ql-project coleslaw :system-file coleslaw-cli :system-name coleslaw-cli
  :dependencies (asdf clack coleslaw trivia uiop) :source
  (("git" "https://github.com/coleslaw-org/coleslaw.git")))
 (:ql-project coleslaw :system-file coleslaw-test :system-name coleslaw-test
  :dependencies (asdf coleslaw coleslaw-cli prove prove-asdf) :source
  (("git" "https://github.com/coleslaw-org/coleslaw.git")))
 (:ql-project collectors :system-file collectors :system-name collectors
  :dependencies (alexandria asdf closer-mop symbol-munger) :source
  (("git" "https://github.com/AccelerationNet/collectors.git")))
 (:ql-project collectors :system-file collectors :system-name collectors/test
  :dependencies (collectors lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/collectors.git")))
 (:ql-project colliflower :system-file colliflower :system-name colliflower
  :dependencies (asdf asdf-package-system garten liter silo) :source
  (("git" "https://github.com/bytecurry/colliflower.git")))
 (:ql-project colliflower :system-file colliflower-fset :system-name
  colliflower-fset :dependencies (asdf colliflower fset) :source
  (("git" "https://github.com/bytecurry/colliflower.git")))
 (:ql-project colliflower :system-file colliflower-test :system-name
  colliflower-test :dependencies (asdf colliflower prove prove-asdf) :source
  (("git" "https://github.com/bytecurry/colliflower.git")))
 (:ql-project colliflower :system-file garten :system-name garten :dependencies
  (alexandria asdf iterate serapeum) :source
  (("git" "https://github.com/bytecurry/colliflower.git")))
 (:ql-project colliflower :system-file liter :system-name liter :dependencies
  (asdf closer-mop iterate serapeum) :source
  (("git" "https://github.com/bytecurry/colliflower.git")))
 (:ql-project colliflower :system-file silo :system-name silo :dependencies
  (asdf) :source (("git" "https://github.com/bytecurry/colliflower.git")))
 (:ql-project colored :system-file colored :system-name colored :dependencies
  (asdf documentation-utils) :source
  (("git" "https://github.com/Shinmera/colored.git")))
 (:ql-project colored :system-file colored-test :system-name colored-test
  :dependencies (asdf colored parachute) :source
  (("git" "https://github.com/Shinmera/colored.git")))
 (:ql-project colorize :system-file colorize :system-name colorize
  :dependencies (alexandria asdf html-encode split-sequence) :source
  (("git" "https://github.com/redline6561/colorize.git")))
 (:ql-project com-on :system-file com-on :system-name com-on :dependencies
  (asdf cffi documentation-utils) :source
  (("git" "https://github.com/Shinmera/com-on.git")))
 (:ql-project com-on :system-file com-on-test :system-name com-on-test
  :dependencies (asdf com-on parachute) :source
  (("git" "https://github.com/Shinmera/com-on.git")))
 (:ql-project com.clearly-useful.generic-collection-interface :system-file
  com.clearly-useful.generic-collection-interface :system-name
  com.clearly-useful.generic-collection-interface :dependencies
  (asdf bordeaux-threads com.clearly-useful.protocols lparallel) :source
  (("git"
    "https://github.com/jaeschliman/com.clearly-useful.generic-collection-interface.git")))
 (:ql-project com.clearly-useful.generic-collection-interface :system-file
  com.clearly-useful.generic-collection-interface.test :system-name
  com.clearly-useful.generic-collection-interface.test :dependencies
  (asdf com.clearly-useful.generic-collection-interface) :source
  (("git"
    "https://github.com/jaeschliman/com.clearly-useful.generic-collection-interface.git")))
 (:ql-project com.clearly-useful.iterate-plus :system-file
  com.clearly-useful.iterate+ :system-name com.clearly-useful.iterate+
  :dependencies
  (com.clearly-useful.generic-collection-interface
   com.clearly-useful.iterator-protocol com.clearly-useful.protocols iterate)
  :source
  (("git"
    "https://github.com/jaeschliman/com.clearly-useful.iterate-plus.git")))
 (:ql-project com.clearly-useful.iterator-protocol :system-file
  com.clearly-useful.iterator-protocol :system-name
  com.clearly-useful.iterator-protocol :dependencies
  (com.clearly-useful.generic-collection-interface
   com.clearly-useful.protocols)
  :source
  (("git"
    "https://github.com/jaeschliman/com.clearly-useful.iterator-protocol.git")))
 (:ql-project com.clearly-useful.protocols :system-file
  com.clearly-useful.protocols :system-name com.clearly-useful.protocols
  :dependencies (iterate) :source
  (("git" "https://github.com/jaeschliman/com.clearly-useful.protocols.git")))
 (:ql-project com.google.base :system-file com.google.base :system-name
  com.google.base :dependencies (asdf) :source
  (("git" "https://github.com/brown/base.git")))
 (:ql-project com.google.base :system-file com.google.base :system-name
  com.google.base/test :dependencies (com.google.base hu.dwim.stefil) :source
  (("git" "https://github.com/brown/base.git")))
 (:ql-project command-line-arguments :system-file command-line-arguments
  :system-name command-line-arguments :dependencies (asdf) :source
  (("git" "https://github.com/fare/command-line-arguments.git")))
 (:ql-project command-line-arguments :system-file command-line-arguments
  :system-name command-line-arguments/test :dependencies
  (alexandria command-line-arguments hu.dwim.stefil) :source
  (("git" "https://github.com/fare/command-line-arguments.git")))
 (:ql-project common-doc :system-file common-doc :system-name common-doc
  :dependencies
  (alexandria anaphora asdf closer-mop local-time quri trivial-types) :source
  (("git" "https://github.com/CommonDoc/common-doc.git")))
 (:ql-project common-doc :system-file common-doc-contrib :system-name
  common-doc-contrib :dependencies
  (asdf common-doc-gnuplot common-doc-graphviz common-doc-include
   common-doc-plantuml common-doc-split-paragraphs common-doc-tex)
  :source (("git" "https://github.com/CommonDoc/common-doc.git")))
 (:ql-project common-doc :system-file common-doc-gnuplot :system-name
  common-doc-gnuplot :dependencies (asdf common-doc split-sequence) :source
  (("git" "https://github.com/CommonDoc/common-doc.git")))
 (:ql-project common-doc :system-file common-doc-graphviz :system-name
  common-doc-graphviz :dependencies (asdf common-doc trivial-shell) :source
  (("git" "https://github.com/CommonDoc/common-doc.git")))
 (:ql-project common-doc :system-file common-doc-include :system-name
  common-doc-include :dependencies (asdf common-doc split-sequence) :source
  (("git" "https://github.com/CommonDoc/common-doc.git")))
 (:ql-project common-doc :system-file common-doc-plantuml :system-name
  common-doc-plantuml :dependencies (asdf common-doc trivial-shell) :source
  (("git" "https://github.com/CommonDoc/common-doc.git")))
 (:ql-project common-doc :system-file common-doc-split-paragraphs :system-name
  common-doc-split-paragraphs :dependencies (asdf cl-ppcre common-doc) :source
  (("git" "https://github.com/CommonDoc/common-doc.git")))
 (:ql-project common-doc :system-file common-doc-test :system-name
  common-doc-test :dependencies (asdf common-doc common-doc-contrib fiveam)
  :source (("git" "https://github.com/CommonDoc/common-doc.git")))
 (:ql-project common-doc :system-file common-doc-tex :system-name
  common-doc-tex :dependencies (asdf common-doc) :source
  (("git" "https://github.com/CommonDoc/common-doc.git")))
 (:ql-project common-doc-plump :system-file common-doc-plump :system-name
  common-doc-plump :dependencies
  (anaphora cl-markup common-doc common-doc-split-paragraphs plump) :source
  (("git" "https://github.com/CommonDoc/common-doc-plump.git")))
 (:ql-project common-doc-plump :system-file common-doc-plump-test :system-name
  common-doc-plump-test :dependencies (common-doc-plump fiveam) :source
  (("git" "https://github.com/CommonDoc/common-doc-plump.git")))
 (:ql-project common-html :system-file common-html :system-name common-html
  :dependencies (alexandria anaphora asdf common-doc plump) :source
  (("git" "https://github.com/CommonDoc/common-html.git")))
 (:ql-project common-html :system-file common-html-test :system-name
  common-html-test :dependencies (asdf common-html fiveam) :source
  (("git" "https://github.com/CommonDoc/common-html.git")))
 (:ql-project common-lisp-actors :system-file cl-actors :system-name cl-actors
  :dependencies (asdf bordeaux-threads) :source
  (("git" "https://github.com/naveensundarg/Common-Lisp-Actors.git")))
 (:ql-project common-lisp-jupyter :system-file common-lisp-jupyter :system-name
  common-lisp-jupyter :dependencies
  (alexandria asdf babel bordeaux-threads cl-base64 cl-indentify closer-mop
   dissect eclector ironclad jupyter-lab-extension multilang-documentation puri
   pzmq shasht static-vectors trivial-do trivial-features trivial-garbage
   trivial-gray-streams trivial-mimes)
  :source (("git" "https://github.com/yitzchak/common-lisp-jupyter.git")))
 (:ql-project common-lisp-jupyter :system-file jupyter-lab-extension
  :system-name jupyter-lab-extension :dependencies (asdf) :source
  (("git" "https://github.com/yitzchak/common-lisp-jupyter.git")))
 (:ql-project commondoc-markdown :system-file commondoc-markdown :system-name
  commondoc-markdown :dependencies
  (3bmd 3bmd-ext-code-blocks alexandria asdf babel common-doc common-html esrap
   ironclad quri str uiop)
  :source (("git" "https://github.com/40ants/commondoc-markdown.git")))
 (:ql-project commondoc-markdown :system-file commondoc-markdown-docs
  :system-name commondoc-markdown-docs :dependencies
  (40ants-doc asdf docs-config named-readtables pythonic-string-reader) :source
  (("git" "https://github.com/40ants/commondoc-markdown.git")))
 (:ql-project commondoc-markdown :system-file commondoc-markdown-test
  :system-name commondoc-markdown-test :dependencies
  (asdf common-doc commondoc-markdown hamcrest rove) :source
  (("git" "https://github.com/40ants/commondoc-markdown.git")))
 (:ql-project commonqt :system-file qt+libs :system-name qt+libs :dependencies
  (alexandria asdf cffi cl-ppcre closer-mop iterate named-readtables qt-libs
   trivial-features trivial-garbage)
  :source (("git" "https://github.com/commonqt/commonqt.git") nil))
 (:ql-project compatible-metaclasses :system-file compatible-metaclasses
  :system-name compatible-metaclasses :dependencies
  (asdf class-options closer-mop enhanced-find-class) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/compatible-metaclasses_latest.tar.gz")))
 (:ql-project compatible-metaclasses :system-file compatible-metaclasses_tests
  :system-name compatible-metaclasses_tests :dependencies
  (asdf compatible-metaclasses parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/compatible-metaclasses_latest.tar.gz")))
 (:ql-project compiler-macro-notes :system-file compiler-macro-notes
  :system-name compiler-macro-notes :dependencies
  (alexandria asdf cl-environments) :source
  (("latest-github-tag"
    "https://github.com/digikar99/compiler-macro-notes.git")))
 (:ql-project computable-reals :system-file computable-reals :system-name
  computable-reals :dependencies (asdf) :source
  (("git" "https://github.com/tarballs-are-good/computable-reals.git")))
 (:ql-project concrete-syntax-tree :system-file concrete-syntax-tree
  :system-name concrete-syntax-tree :dependencies
  (asdf concrete-syntax-tree-base concrete-syntax-tree-lambda-list) :source
  (("git" "https://github.com/robert-strandh/Concrete-Syntax-Tree.git")))
 (:ql-project concrete-syntax-tree :system-file concrete-syntax-tree-base
  :system-name concrete-syntax-tree-base :dependencies (acclimation asdf)
  :source
  (("git" "https://github.com/robert-strandh/Concrete-Syntax-Tree.git")))
 (:ql-project concrete-syntax-tree :system-file
  concrete-syntax-tree-destructuring :system-name
  concrete-syntax-tree-destructuring :dependencies
  (asdf concrete-syntax-tree-lambda-list) :source
  (("git" "https://github.com/robert-strandh/Concrete-Syntax-Tree.git")))
 (:ql-project concrete-syntax-tree :system-file
  concrete-syntax-tree-lambda-list :system-name
  concrete-syntax-tree-lambda-list :dependencies
  (asdf concrete-syntax-tree-base) :source
  (("git" "https://github.com/robert-strandh/Concrete-Syntax-Tree.git")))
 (:ql-project concrete-syntax-tree :system-file
  concrete-syntax-tree-lambda-list-test :system-name
  concrete-syntax-tree-lambda-list-test :dependencies
  (asdf concrete-syntax-tree-lambda-list) :source
  (("git" "https://github.com/robert-strandh/Concrete-Syntax-Tree.git")))
 (:ql-project concrete-syntax-tree :system-file
  concrete-syntax-tree-source-info :system-name
  concrete-syntax-tree-source-info :dependencies (asdf) :source
  (("git" "https://github.com/robert-strandh/Concrete-Syntax-Tree.git")))
 (:ql-project concrete-syntax-tree :system-file concrete-syntax-tree
  :system-name concrete-syntax-tree/test :dependencies (concrete-syntax-tree)
  :source
  (("git" "https://github.com/robert-strandh/Concrete-Syntax-Tree.git")))
 (:ql-project conduit-packages :system-file org.tfeb.conduit-packages
  :system-name org.tfeb.conduit-packages :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/conduit-packages.git")))
 (:ql-project conduit-packages :system-file org.tfeb.conduit-packages
  :system-name org.tfeb.conduit-packages/define-package :dependencies
  (org.tfeb.conduit-packages) :source
  (("git" "https://github.com/tfeb/conduit-packages.git")))
 (:ql-project conf :system-file conf :system-name conf :dependencies
  (asdf cl-fad) :source (("git" "https://github.com/noloop/conf.git")))
 (:ql-project conf :system-file conf :system-name conf/test :dependencies
  (conf) :source (("git" "https://github.com/noloop/conf.git")))
 (:ql-project configuration.options :system-file configuration.options
  :system-name configuration.options :dependencies
  (alexandria architecture.service-provider asdf cl-hooks esrap let-plus log4cl
   more-conditions split-sequence utilities.print-items utilities.print-tree)
  :source (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file configuration.options-and-mop
  :system-name configuration.options-and-mop :dependencies
  (alexandria asdf closer-mop configuration.options let-plus) :source
  (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file configuration.options-and-mop
  :system-name configuration.options-and-mop/test :dependencies
  (alexandria configuration.options configuration.options-and-mop fiveam
   let-plus)
  :source (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file configuration.options-and-puri
  :system-name configuration.options-and-puri :dependencies
  (alexandria asdf configuration.options let-plus puri) :source
  (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file configuration.options-and-puri
  :system-name configuration.options-and-puri/test :dependencies
  (alexandria configuration.options configuration.options-and-puri fiveam
   let-plus)
  :source (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file configuration.options-and-quri
  :system-name configuration.options-and-quri :dependencies
  (alexandria asdf configuration.options let-plus quri) :source
  (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file configuration.options-and-quri
  :system-name configuration.options-and-quri/test :dependencies
  (alexandria configuration.options configuration.options-and-quri fiveam
   let-plus)
  :source (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file
  configuration.options-and-service-provider :system-name
  configuration.options-and-service-provider :dependencies
  (alexandria architecture.service-provider
   architecture.service-provider-and-hooks asdf configuration.options
   configuration.options-and-mop let-plus log4cl)
  :source (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file
  configuration.options-and-service-provider :system-name
  configuration.options-and-service-provider/test :dependencies
  (alexandria architecture.service-provider configuration.options
   configuration.options-and-service-provider fiveam let-plus)
  :source (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file
  configuration.options-syntax-ini :system-name
  configuration.options-syntax-ini :dependencies
  (alexandria asdf configuration.options let-plus parser.ini) :source
  (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file
  configuration.options-syntax-ini :system-name
  configuration.options-syntax-ini/test :dependencies
  (alexandria configuration.options configuration.options-syntax-ini fiveam
   let-plus)
  :source (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file
  configuration.options-syntax-xml :system-name
  configuration.options-syntax-xml :dependencies
  (alexandria asdf configuration.options let-plus xml.location) :source
  (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file
  configuration.options-syntax-xml :system-name
  configuration.options-syntax-xml/test :dependencies
  (alexandria configuration.options configuration.options-syntax-xml fiveam
   let-plus)
  :source (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project configuration.options :system-file configuration.options
  :system-name configuration.options/test :dependencies
  (alexandria configuration.options fiveam let-plus) :source
  (("git" "https://github.com/scymtym/configuration.options.git")))
 (:ql-project conium :system-file conium :system-name conium :dependencies
  (asdf closer-mop) :source
  (("git" "https://github.com/sharplispers/conium.git") nil))
 (:ql-project consfigurator :system-file consfigurator :system-name
  consfigurator :dependencies
  (agnostic-lizard alexandria anaphora asdf babel babel-streams
   bordeaux-threads cffi cffi-grovel cl-heredoc cl-interpol cl-ppcre closer-mop
   named-readtables osicat parse-number trivial-backtrace)
  :source
  (("latest-github-tag" "https://github.com/spwhitton/consfigurator.git")))
 (:ql-project consfigurator :system-file consfigurator :system-name
  consfigurator/tests :dependencies (consfigurator) :source
  (("latest-github-tag" "https://github.com/spwhitton/consfigurator.git")))
 (:ql-project consix :system-file consix :system-name consix :dependencies
  (alexandria asdf cl-glu cl-glut cl-opengl) :source
  (("git" "https://github.com/death/consix.git")))
 (:ql-project constantfold :system-file constantfold :system-name constantfold
  :dependencies (alexandria asdf iterate lisp-namespace trivia) :source
  (("git" "https://github.com/numcl/constantfold.git")))
 (:ql-project constantfold :system-file constantfold.test :system-name
  constantfold.test :dependencies (asdf constantfold fiveam) :source
  (("git" "https://github.com/numcl/constantfold.git")))
 (:ql-project context-lite :system-file context-lite :system-name context-lite
  :dependencies (asdf closer-mop) :source
  (("git" "https://github.com/markasoftware/context-lite.git")))
 (:ql-project context-lite :system-file context-lite :system-name
  context-lite/test :dependencies (context-lite fiveam) :source
  (("git" "https://github.com/markasoftware/context-lite.git")))
 (:ql-project contextl :system-file contextl :system-name contextl
  :dependencies (asdf closer-mop lw-compat) :source
  (("git" "https://github.com/pcostanza/contextl.git")))
 (:ql-project contextl :system-file dynamic-wind :system-name dynamic-wind
  :dependencies (asdf lw-compat) :source
  (("git" "https://github.com/pcostanza/contextl.git")))
 (:ql-project convolution-kernel :system-file convolution-kernel :system-name
  convolution-kernel :dependencies (asdf mfiano-utils tile-grid) :source
  (("git" "https://git.mfiano.net/mfiano/convolution-kernel.git")))
 (:ql-project copy-directory :system-file copy-directory :system-name
  copy-directory :dependencies (cl-fad uiop which) :source
  (("git" "https://github.com/ceramic/copy-directory.git")))
 (:ql-project copy-directory :system-file copy-directory-test :system-name
  copy-directory-test :dependencies (copy-directory fiveam) :source
  (("git" "https://github.com/ceramic/copy-directory.git")))
 (:ql-project core :system-file issr-core :system-name issr-core :dependencies
  (asdf global-vars plump str tailrec) :source
  (("git" "https://github.com/interactive-ssr/core.git")))
 (:ql-project core-reader :system-file core-reader :system-name core-reader
  :dependencies (asdf uiop) :source
  (("git" "https://github.com/hyotang666/core-reader.git")))
 (:ql-project core-reader :system-file core-reader.test :system-name
  core-reader.test :dependencies (asdf core-reader jingoh) :source
  (("git" "https://github.com/hyotang666/core-reader.git")))
 (:ql-project cover :system-file cover :system-name cover :dependencies (asdf)
  :source (("git" "https://github.com/pfdietz/cover.git")))
 (:ql-project cover :system-file cover :system-name cover/tests :dependencies
  (cover uiop) :source (("git" "https://github.com/pfdietz/cover.git")))
 (:ql-project cqlcl :system-file cqlcl :system-name cqlcl :dependencies
  (alexandria bordeaux-threads fiveam flexi-streams lparallel pooler
   split-sequence usocket uuid)
  :source (("git" "https://github.com/AeroNotix/cqlcl.git")))
 (:ql-project cqlcl :system-file cqlcl :system-name cqlcl-test :dependencies
  (alexandria cqlcl fiveam flexi-streams uuid) :source
  (("git" "https://github.com/AeroNotix/cqlcl.git")))
 (:ql-project crane :system-file crane :system-name crane :dependencies
  (anaphora cl-fad clos-fixtures closer-mop dbi iterate local-time sxql uiop)
  :source (("git" "https://github.com/eudoxia0/crane.git")))
 (:ql-project crane :system-file crane-test :system-name crane-test
  :dependencies (crane fiveam) :source
  (("git" "https://github.com/eudoxia0/crane.git")))
 (:ql-project cricket :system-file cricket :system-name cricket :dependencies
  (arrow-macros asdf cl-cpus lparallel mfiano-utils seedable-rng uiop zpng)
  :source (("git" "https://github.com/mfiano/cricket.git")))
 (:ql-project cricket :system-file cricket.test :system-name cricket.test
  :dependencies (asdf cricket mfiano-utils pngload prove prove-asdf) :source
  (("git" "https://github.com/mfiano/cricket.git")))
 (:ql-project croatoan :system-file ansi-escape :system-name ansi-escape
  :dependencies (asdf) :source
  (("git" "https://github.com/McParen/croatoan.git")))
 (:ql-project croatoan :system-file ansi-escape-test :system-name
  ansi-escape-test :dependencies (ansi-escape asdf) :source
  (("git" "https://github.com/McParen/croatoan.git")))
 (:ql-project croatoan :system-file croatoan :system-name croatoan
  :dependencies (asdf bordeaux-threads croatoan-ncurses trivial-gray-streams)
  :source (("git" "https://github.com/McParen/croatoan.git")))
 (:ql-project croatoan :system-file croatoan-ncurses :system-name
  croatoan-ncurses :dependencies (asdf cffi) :source
  (("git" "https://github.com/McParen/croatoan.git")))
 (:ql-project croatoan :system-file croatoan-test :system-name croatoan-test
  :dependencies (asdf croatoan) :source
  (("git" "https://github.com/McParen/croatoan.git")))
 (:ql-project crypto-shortcuts :system-file crypto-shortcuts :system-name
  crypto-shortcuts :dependencies
  (asdf cl-base32 cl-base64 flexi-streams ironclad) :source
  (("git" "https://github.com/Shinmera/crypto-shortcuts.git")))
 (:ql-project cserial-port :system-file cserial-port :system-name cserial-port
  :dependencies
  (asdf cffi cffi-grovel osicat trivial-features trivial-gray-streams) :source
  (("git" "https://github.com/snmsts/cserial-port.git")))
 (:ql-project css-lite :system-file css-lite :system-name css-lite
  :dependencies (asdf parenscript) :source
  (("git" "https://github.com/paddymul/css-lite.git")))
 (:ql-project css-lite :system-file css-lite :system-name css-lite/test
  :dependencies (css-lite fiveam) :source
  (("git" "https://github.com/paddymul/css-lite.git")))
 (:ql-project css-selectors :system-file css-selectors :system-name
  css-selectors :dependencies
  (alexandria buildnode cl-interpol cl-ppcre cxml iterate symbol-munger yacc)
  :source (("git" "https://github.com/AccelerationNet/css-selectors.git") nil))
 (:ql-project css-selectors :system-file css-selectors-simple-tree :system-name
  css-selectors-simple-tree :dependencies (cl-html5-parser css-selectors)
  :source (("git" "https://github.com/AccelerationNet/css-selectors.git") nil))
 (:ql-project css-selectors :system-file css-selectors-stp :system-name
  css-selectors-stp :dependencies (css-selectors cxml-stp) :source
  (("git" "https://github.com/AccelerationNet/css-selectors.git") nil))
 (:ql-project css-selectors :system-file css-selectors :system-name
  css-selectors-test :dependencies (buildnode-xhtml css-selectors lisp-unit2)
  :source (("git" "https://github.com/AccelerationNet/css-selectors.git") nil))
 (:ql-project csv :system-file csv :system-name csv :dependencies (asdf)
  :source (("git" "https://github.com/equwal/CSV.git")))
 (:ql-project csv-parser :system-file csv-parser :system-name csv-parser
  :dependencies nil :source
  (("git" "https://github.com/sharplispers/csv-parser") nil))
 (:ql-project csv-validator :system-file csv-validator :system-name
  csv-validator :dependencies (asdf local-time lparallel parse-float) :source
  (("git" "https://github.com/KoenvdBerg/csv-validator.git")))
 (:ql-project csv-validator :system-file csv-validator-tests :system-name
  csv-validator-tests :dependencies (asdf csv-validator fiveam) :source
  (("git" "https://github.com/KoenvdBerg/csv-validator.git")))
 (:ql-project ctype :system-file ctype :system-name ctype :dependencies (asdf)
  :source (("git" "https://github.com/s-expressionists/ctype.git")))
 (:ql-project ctype :system-file ctype :system-name ctype/ext :dependencies
  (alexandria ctype) :source
  (("git" "https://github.com/s-expressionists/ctype.git")))
 (:ql-project ctype :system-file ctype :system-name ctype/tfun :dependencies
  (alexandria ctype) :source
  (("git" "https://github.com/s-expressionists/ctype.git")))
 (:ql-project cubic-bezier :system-file cubic-bezier :system-name cubic-bezier
  :dependencies (asdf mfiano-utils origin) :source
  (("git" "https://github.com/mfiano/cubic-bezier.git")))
 (:ql-project cue-parser :system-file cue-parser :system-name cue-parser
  :dependencies (asdf esrap flexi-streams) :source
  (("git" "https://github.com/shamazmazum/cue-parser.git")))
 (:ql-project curly :system-file curly :system-name curly :dependencies nil
  :source (("git" "https://github.com/mpasternacki/curly.git")))
 (:ql-project curly :system-file curly :system-name curly.test :dependencies
  (curly fiveam) :source (("git" "https://github.com/mpasternacki/curly.git")))
 (:ql-project curry-compose-reader-macros :system-file
  curry-compose-reader-macros :system-name curry-compose-reader-macros
  :dependencies (alexandria asdf named-readtables) :source
  (("git" "https://github.com/eschulte/curry-compose-reader-macros.git")))
 (:ql-project curry-compose-reader-macros :system-file
  curry-compose-reader-macros :system-name curry-compose-reader-macros/test
  :dependencies (curry-compose-reader-macros) :source
  (("git" "https://github.com/eschulte/curry-compose-reader-macros.git")))
 (:ql-project curve :system-file com.elbeno.curve :system-name com.elbeno.curve
  :dependencies (com.elbeno.vector vecto) :source
  (("git" "https://github.com/elbeno/curve.git")))
 (:ql-project cxml :system-file cxml :system-name cxml :dependencies
  (asdf closure-common puri trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/cxml.git") nil))
 (:ql-project cxml :system-file cxml-dom :system-name cxml-dom :dependencies
  (asdf closure-common puri trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/cxml.git") nil))
 (:ql-project cxml :system-file cxml-klacks :system-name cxml-klacks
  :dependencies (asdf closure-common puri trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/cxml.git") nil))
 (:ql-project cxml :system-file cxml-test :system-name cxml-test :dependencies
  (asdf closure-common puri trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/cxml.git") nil))
 (:ql-project cxml :system-file cxml :system-name cxml/dom :dependencies
  (closure-common puri trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/cxml.git") nil))
 (:ql-project cxml :system-file cxml :system-name cxml/klacks :dependencies
  (closure-common puri trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/cxml.git") nil))
 (:ql-project cxml :system-file cxml :system-name cxml/test :dependencies
  (closure-common puri trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/cxml.git") nil))
 (:ql-project cxml :system-file cxml :system-name cxml/xml :dependencies
  (closure-common puri trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/cxml.git") nil))
 (:ql-project cxml-rng :system-file cxml-rng :system-name cxml-rng
  :dependencies (asdf cl-base64 cl-ppcre cxml parse-number yacc) :source
  (("git" "http://www.lichteblau.com/git/cxml-rng.git") nil))
 (:ql-project cxml-rpc :system-file cxml-rpc :system-name cxml-rpc
  :dependencies (cl-base64 cxml drakma hunchentoot parse-number) :source
  (("git" "https://github.com/antifuchs/cxml-rpc.git") nil))
 (:ql-project cxml-stp :system-file cxml-stp :system-name cxml-stp
  :dependencies (alexandria asdf cxml xpath) :source
  (("git" "https://github.com/sharplispers/cxml-stp.git") nil))
 (:ql-project cxml-stp :system-file cxml-stp :system-name cxml-stp/test
  :dependencies (cxml cxml-stp rt xpath) :source
  (("git" "https://github.com/sharplispers/cxml-stp.git") nil))
 (:ql-project cytoscape-clj :system-file cytoscape-clj :system-name
  cytoscape-clj :dependencies (asdf common-lisp-jupyter jupyter-lab-extension)
  :source (("git" "https://github.com/yitzchak/cytoscape-clj.git")))
 (:ql-project daemon :system-file daemon :system-name daemon :dependencies
  (trivial-features) :source (("git" "https://github.com/snmsts/daemon.git")))
 (:ql-project damn-fast-priority-queue :system-file damn-fast-priority-queue
  :system-name damn-fast-priority-queue :dependencies (alexandria asdf) :source
  (("git" "https://github.com/phoe/damn-fast-priority-queue.git")))
 (:ql-project damn-fast-priority-queue :system-file damn-fast-priority-queue
  :system-name damn-fast-priority-queue/test :dependencies
  (alexandria damn-fast-priority-queue) :source
  (("git" "https://github.com/phoe/damn-fast-priority-queue.git")))
 (:ql-project damn-fast-priority-queue :system-file
  damn-fast-stable-priority-queue :system-name damn-fast-stable-priority-queue
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/phoe/damn-fast-priority-queue.git")))
 (:ql-project damn-fast-priority-queue :system-file
  damn-fast-stable-priority-queue :system-name
  damn-fast-stable-priority-queue/test :dependencies
  (alexandria damn-fast-stable-priority-queue) :source
  (("git" "https://github.com/phoe/damn-fast-priority-queue.git")))
 (:ql-project damn-fast-priority-queue :system-file priority-queue-benchmark
  :system-name priority-queue-benchmark :dependencies
  (alexandria asdf bodge-heap cl-heap damn-fast-priority-queue
   damn-fast-stable-priority-queue heap minheap
   pettomato-indexed-priority-queue pileup priority-queue queues.priority-queue
   trivial-garbage)
  :source (("git" "https://github.com/phoe/damn-fast-priority-queue.git")))
 (:ql-project dartsclemailaddress :system-file darts.lib.email-address
  :system-name darts.lib.email-address :dependencies nil :source
  (("branched-git"
    "http://github.com/deterministic-arts/DartsCLEmailAddress.git"
    "quicklisp-release")))
 (:ql-project dartsclemailaddress :system-file darts.lib.email-address-test
  :system-name darts.lib.email-address-test :dependencies
  (darts.lib.email-address stefil) :source
  (("branched-git"
    "http://github.com/deterministic-arts/DartsCLEmailAddress.git"
    "quicklisp-release")))
 (:ql-project dartsclhashtree :system-file darts.lib.hashtree-test :system-name
  darts.lib.hashtree-test :dependencies
  (asdf darts.lib.hashtrie darts.lib.wbtree stefil) :source
  (("git" "https://github.com/deterministic-arts/DartsCLHashTree.git")))
 (:ql-project dartsclhashtree :system-file darts.lib.hashtrie :system-name
  darts.lib.hashtrie :dependencies (asdf) :source
  (("git" "https://github.com/deterministic-arts/DartsCLHashTree.git")))
 (:ql-project dartsclhashtree :system-file darts.lib.wbtree :system-name
  darts.lib.wbtree :dependencies (asdf) :source
  (("git" "https://github.com/deterministic-arts/DartsCLHashTree.git")))
 (:ql-project dartsclmessagepack :system-file darts.lib.message-pack
  :system-name darts.lib.message-pack :dependencies (asdf babel ieee-floats)
  :source
  (("git" "https://github.com/deterministic-arts/DartsCLMessagePack.git")))
 (:ql-project dartsclmessagepack :system-file darts.lib.message-pack-test
  :system-name darts.lib.message-pack-test :dependencies
  (asdf darts.lib.message-pack stefil trivial-octet-streams) :source
  (("git" "https://github.com/deterministic-arts/DartsCLMessagePack.git")))
 (:ql-project dartsclsequencemetrics :system-file darts.lib.sequence-metrics
  :system-name darts.lib.sequence-metrics :dependencies nil :source
  (("git" "https://github.com/deterministic-arts/DartsCLSequenceMetrics.git")))
 (:ql-project dartscltools :system-file darts.lib.tools :system-name
  darts.lib.tools :dependencies (asdf atomics) :source
  (("git" "https://github.com/deterministic-arts/DartsCLTools.git")))
 (:ql-project dartscltools :system-file darts.lib.tools.test :system-name
  darts.lib.tools.test :dependencies
  (asdf bordeaux-threads darts.lib.tools fiveam) :source
  (("git" "https://github.com/deterministic-arts/DartsCLTools.git")))
 (:ql-project dartscluuid :system-file darts.lib.uuid :system-name
  darts.lib.uuid :dependencies (asdf cl-ppcre ironclad trivial-utf-8) :source
  (("git" "https://github.com/deterministic-arts/DartsCLUUID.git")))
 (:ql-project dartscluuid :system-file darts.lib.uuid-test :system-name
  darts.lib.uuid-test :dependencies (asdf darts.lib.uuid stefil) :source
  (("git" "https://github.com/deterministic-arts/DartsCLUUID.git")))
 (:ql-project data-frame :system-file data-frame :system-name data-frame
  :dependencies
  (alexandria alexandria+ anaphora array-operations asdf duologue let-plus
   num-utils select statistics)
  :source (("git" "https://github.com/Lisp-Stat/data-frame.git")))
 (:ql-project data-frame :system-file data-frame :system-name data-frame/tests
  :dependencies (clunit2 data-frame) :source
  (("git" "https://github.com/Lisp-Stat/data-frame.git")))
 (:ql-project data-lens :system-file data-lens :system-name data-lens
  :dependencies (alexandria asdf cl-ppcre) :source
  (("git" "https://github.com/fiddlerwoaroof/data-lens.git")))
 (:ql-project data-lens :system-file data-lens :system-name
  data-lens/beta/transducers :dependencies (alexandria data-lens serapeum)
  :source (("git" "https://github.com/fiddlerwoaroof/data-lens.git")))
 (:ql-project data-lens :system-file data-lens :system-name data-lens/test
  :dependencies (data-lens fiveam serapeum string-case) :source
  (("git" "https://github.com/fiddlerwoaroof/data-lens.git")))
 (:ql-project data-lens :system-file data-lens :system-name
  data-lens/transducers :dependencies (alexandria data-lens serapeum) :source
  (("git" "https://github.com/fiddlerwoaroof/data-lens.git")))
 (:ql-project data-lens :system-file data-lens :system-name
  data-lens/transducers/test :dependencies
  (alexandria data-lens fiveam serapeum) :source
  (("git" "https://github.com/fiddlerwoaroof/data-lens.git")))
 (:ql-project data-sift :system-file data-sift :system-name data-sift
  :dependencies (alexandria cl-ppcre parse-number puri) :source
  (("git" "https://github.com/archimag/data-sift.git")))
 (:ql-project data-sift :system-file data-sift :system-name data-sift-test
  :dependencies (data-sift lift) :source
  (("git" "https://github.com/archimag/data-sift.git")))
 (:ql-project data-table :system-file data-table :system-name data-table
  :dependencies (alexandria asdf cl-interpol iterate symbol-munger) :source
  (("git" "https://github.com/AccelerationNet/data-table.git")))
 (:ql-project data-table :system-file data-table-clsql :system-name
  data-table-clsql :dependencies
  (asdf clsql clsql-helper collectors data-table iterate) :source
  (("git" "https://github.com/AccelerationNet/data-table.git")))
 (:ql-project data-table :system-file data-table :system-name data-table-test
  :dependencies (data-table lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/data-table.git")))
 (:ql-project database-migrations :system-file database-migrations :system-name
  database-migrations :dependencies (asdf postmodern) :source
  (("git" "https://github.com/madnificent/database-migrations.git")))
 (:ql-project datafly :system-file datafly :system-name datafly :dependencies
  (alexandria asdf babel closer-mop dbi function-cache iterate jonathan kebab
   local-time log4cl named-readtables optima sxql trivial-types)
  :source (("git" "https://github.com/fukamachi/datafly.git")))
 (:ql-project datafly :system-file datafly-test :system-name datafly-test
  :dependencies (asdf datafly prove prove-asdf sxql) :source
  (("git" "https://github.com/fukamachi/datafly.git")))
 (:ql-project dataloader :system-file dataloader :system-name dataloader
  :dependencies
  (alexandria asdf cl-csv cl-jpeg cl-wav iterate magicffi numcl
   numpy-file-format png retrospectiff trivia)
  :source (("git" "https://github.com/guicho271828/dataloader.git")))
 (:ql-project dataloader :system-file dataloader.test :system-name
  dataloader.test :dependencies (asdf dataloader fiveam) :source
  (("git" "https://github.com/guicho271828/dataloader.git")))
 (:ql-project datamuse :system-file datamuse :system-name datamuse
  :dependencies (alexandria asdf drakma yason) :source
  (("git" "https://github.com/defaultxr/datamuse.git")))
 (:ql-project date-calc :system-file date-calc :system-name date-calc
  :dependencies (asdf) :source
  (("git" "https://github.com/ruricolist/date-calc.git")))
 (:ql-project date-calc :system-file date-calc :system-name date-calc/test
  :dependencies (date-calc fiveam serapeum) :source
  (("git" "https://github.com/ruricolist/date-calc.git")))
 (:ql-project datum-comments :system-file datum-comments :system-name
  datum-comments :dependencies (asdf) :source
  (("git" "https://github.com/tgbugs/datum-comments.git")))
 (:ql-project datum-comments :system-file datum-comments :system-name
  datum-comments/test :dependencies (datum-comments) :source
  (("git" "https://github.com/tgbugs/datum-comments.git")))
 (:ql-project dbus :system-file dbus :system-name dbus :dependencies
  (alexandria asdf asdf-package-system babel cl-xmlspam flexi-streams
   ieee-floats iolib ironclad split-sequence trivial-garbage)
  :source (("git" "https://github.com/death/dbus.git")))
 (:ql-project de-mock-racy :system-file de-mock-racy :system-name de-mock-racy
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/sirherrbatka/de-mock-racy.git")))
 (:ql-project de.setf.wilbur :system-file wilbur :system-name wilbur
  :dependencies (asdf usocket) :source
  (("git" "https://github.com/lisp/de.setf.wilbur.git")))
 (:ql-project declt :system-file net.didierverna.declt :system-name
  net.didierverna.declt :dependencies
  (asdf net.didierverna.declt.core net.didierverna.declt.setup) :source
  (("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/declt/latest.tar.gz")
   nil))
 (:ql-project declt :system-file net.didierverna.declt.assess :system-name
  net.didierverna.declt.assess :dependencies (asdf net.didierverna.declt.setup)
  :source
  (("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/declt/latest.tar.gz")
   nil))
 (:ql-project declt :system-file net.didierverna.declt.core :system-name
  net.didierverna.declt.core :dependencies
  (asdf net.didierverna.declt.assess net.didierverna.declt.setup) :source
  (("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/declt/latest.tar.gz")
   nil))
 (:ql-project declt :system-file net.didierverna.declt.setup :system-name
  net.didierverna.declt.setup :dependencies (asdf named-readtables) :source
  (("https"
    "https://www.lrde.epita.fr/~didier/software/lisp/declt/latest.tar.gz")
   nil))
 (:ql-project decompress :system-file semz.decompress :system-name
  semz.decompress :dependencies (alexandria asdf trivial-gray-streams) :source
  (("git" "https://github.com/se-mz/decompress.git")))
 (:ql-project deeds :system-file deeds :system-name deeds :dependencies
  (asdf bordeaux-threads closer-mop form-fiddle lambda-fiddle) :source
  (("git" "https://github.com/Shinmera/deeds.git")))
 (:ql-project defclass-std :system-file defclass-std :system-name defclass-std
  :dependencies (alexandria anaphora asdf) :source
  (("git" "https://github.com/EuAndreh/defclass-std.git")))
 (:ql-project defclass-std :system-file defclass-std-test :system-name
  defclass-std-test :dependencies (asdf defclass-std prove prove-asdf) :source
  (("git" "https://github.com/EuAndreh/defclass-std.git")))
 (:ql-project defconfig :system-file defconfig :system-name defconfig
  :dependencies (alexandria asdf trivial-cltl2) :source
  (("git" "https://github.com/szos/defconfig.git")))
 (:ql-project defconfig :system-file defconfig :system-name defconfig/tests
  :dependencies (defconfig fiveam) :source
  (("git" "https://github.com/szos/defconfig.git")))
 (:ql-project defenum :system-file defenum :system-name defenum :dependencies
  (asdf) :source (("git" "http://git.code.sf.net/p/defenum/code")))
 (:ql-project deferred :system-file deferred :system-name deferred
  :dependencies (asdf named-readtables) :source
  (("git" "https://github.com/Shinmera/deferred.git")))
 (:ql-project define-json-expander :system-file define-json-expander
  :system-name define-json-expander :dependencies nil :source
  (("git" "https://github.com/ejbs/define-json-expander.git")))
 (:ql-project definer :system-file definer :system-name definer :dependencies
  (asdf) :source
  (("git" "https://gitlab.common-lisp.net/definer/definer.git")))
 (:ql-project definitions :system-file definitions :system-name definitions
  :dependencies (asdf documentation-utils) :source
  (("git" "https://github.com/Shinmera/definitions.git")))
 (:ql-project definitions-systems :system-file definitions-systems :system-name
  definitions-systems :dependencies
  (asdf canonicalized-initargs closer-mop enhanced-defclass enhanced-find-class
   shared-preferences)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/definitions-systems_latest.tar.gz")))
 (:ql-project definitions-systems :system-file definitions-systems_tests
  :system-name definitions-systems_tests :dependencies
  (asdf definitions-systems parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/definitions-systems_latest.tar.gz")))
 (:ql-project deflate :system-file deflate :system-name deflate :dependencies
  (asdf) :source (("git" "https://github.com/pmai/Deflate.git")))
 (:ql-project defmain :system-file defmain :system-name defmain :dependencies
  (40ants-doc alexandria asdf cl-inflector cl-strings docs-config
   named-readtables net.didierverna.clon.core pythonic-string-reader uiop)
  :source (("git" "https://github.com/40ants/defmain.git")))
 (:ql-project defmain :system-file defmain-test :system-name defmain-test
  :dependencies (asdf defmain hamcrest rove) :source
  (("git" "https://github.com/40ants/defmain.git")))
 (:ql-project defmemo :system-file defmemo :system-name defmemo :dependencies
  (alexandria trivial-garbage) :source
  (("git" "https://github.com/orivej/defmemo.git")))
 (:ql-project defmemo :system-file defmemo :system-name defmemo-test
  :dependencies (defmemo) :source
  (("git" "https://github.com/orivej/defmemo.git")))
 (:ql-project defpackage-plus :system-file defpackage-plus :system-name
  defpackage-plus :dependencies (alexandria asdf) :source
  (("git" "https://github.com/rpav/defpackage-plus.git")))
 (:ql-project defrec :system-file defrec :system-name defrec :dependencies
  (alexandria asdf) :source
  (("git" "https://github.com/stylewarning/defrec.git")))
 (:ql-project defrest :system-file defrest :system-name defrest :dependencies
  (asdf cl-ppcre hunchentoot quri split-sequence) :source
  (("git" "https://github.com/bonkzwonil/defrest.git")))
 (:ql-project defrest :system-file defrest :system-name defrest.test
  :dependencies (defrest drakma fiveam) :source
  (("git" "https://github.com/bonkzwonil/defrest.git")))
 (:ql-project defstar :system-file defstar :system-name defstar :dependencies
  nil :source (("git" "https://bitbucket.org/eeeickythump/defstar.git")))
 (:ql-project defsystem-compatibility :system-file defsystem-compatibility
  :system-name defsystem-compatibility :dependencies (metatilities-base)
  :source
  (("darcs"
    "http://common-lisp.net/project/cl-containers/defsystem-compatibility/")))
 (:ql-project defsystem-compatibility :system-file defsystem-compatibility-test
  :system-name defsystem-compatibility-test :dependencies
  (defsystem-compatibility lift) :source
  (("darcs"
    "http://common-lisp.net/project/cl-containers/defsystem-compatibility/")))
 (:ql-project defvariant :system-file defvariant :system-name defvariant
  :dependencies nil :source
  (("git" "https://github.com/fredokun/defvariant.git")))
 (:ql-project delorean :system-file delorean :system-name delorean
  :dependencies (local-time) :source
  (("git" "https://github.com/cddr/delorean.git")))
 (:ql-project delorean :system-file delorean :system-name delorean-test
  :dependencies (delorean fiveam) :source
  (("git" "https://github.com/cddr/delorean.git")))
 (:ql-project delta-debug :system-file delta-debug :system-name delta-debug
  :dependencies (alexandria asdf curry-compose-reader-macros named-readtables)
  :source (("git" "https://github.com/eschulte/delta-debug.git")))
 (:ql-project delta-debug :system-file delta-debug :system-name
  delta-debug/delta :dependencies
  (alexandria curry-compose-reader-macros delta-debug diff metabang-bind
   split-sequence trivial-shell)
  :source (("git" "https://github.com/eschulte/delta-debug.git")))
 (:ql-project delta-debug :system-file delta-debug :system-name
  delta-debug/test :dependencies
  (alexandria curry-compose-reader-macros delta-debug stefil) :source
  (("git" "https://github.com/eschulte/delta-debug.git")))
 (:ql-project dendrite :system-file dendrite :system-name dendrite
  :dependencies (dendrite.micro-l-system dendrite.primitives) :source
  (("branched-git" "https://github.com/cbaggers/dendrite.git"
    "release-quicklisp")))
 (:ql-project dendrite :system-file dendrite.micro-l-system :system-name
  dendrite.micro-l-system :dependencies nil :source
  (("branched-git" "https://github.com/cbaggers/dendrite.git"
    "release-quicklisp")))
 (:ql-project dendrite :system-file dendrite.primitives :system-name
  dendrite.primitives :dependencies (cffi rtg-math) :source
  (("branched-git" "https://github.com/cbaggers/dendrite.git"
    "release-quicklisp")))
 (:ql-project dense-arrays :system-file dense-arrays :system-name dense-arrays
  :dependencies
  (abstract-arrays alexandria asdf asdf-system-connections cl-form-types
   closer-mop compiler-macro-notes extensible-compound-types fiveam iterate
   polymorphic-functions trivial-garbage trivial-types uiop)
  :source (("git" "https://github.com/digikar99/dense-arrays.git")))
 (:ql-project dense-arrays :system-file dense-arrays+cuda :system-name
  dense-arrays+cuda :dependencies (asdf cl-cuda dense-arrays) :source
  (("git" "https://github.com/digikar99/dense-arrays.git")))
 (:ql-project dense-arrays :system-file dense-arrays-plus :system-name
  dense-arrays-plus :dependencies
  (asdf dense-arrays-plus-lite fiveam generic-cl py4cl2 reader static-vectors)
  :source (("git" "https://github.com/digikar99/dense-arrays.git")))
 (:ql-project dense-arrays :system-file dense-arrays-plus-lite :system-name
  dense-arrays-plus-lite :dependencies
  (asdf dense-arrays extensible-compound-types-interfaces
   extensible-optimizing-coerce trivial-package-local-nicknames uiop)
  :source (("git" "https://github.com/digikar99/dense-arrays.git")))
 (:ql-project dense-arrays :system-file dense-arrays :system-name
  dense-arrays/magicl :dependencies (dense-arrays magicl) :source
  (("git" "https://github.com/digikar99/dense-arrays.git")))
 (:ql-project dense-arrays :system-file dense-arrays :system-name
  dense-arrays/static-vectors :dependencies (dense-arrays static-vectors)
  :source (("git" "https://github.com/digikar99/dense-arrays.git")))
 (:ql-project deoxybyte-gzip :system-file deoxybyte-gzip :system-name
  deoxybyte-gzip :dependencies (deoxybyte-io deoxybyte-systems deoxybyte-unix)
  :source (("git" "https://github.com/keithj/deoxybyte-gzip.git")))
 (:ql-project deoxybyte-gzip :system-file deoxybyte-gzip-test :system-name
  deoxybyte-gzip-test :dependencies (deoxybyte-gzip lift) :source
  (("git" "https://github.com/keithj/deoxybyte-gzip.git")))
 (:ql-project deoxybyte-io :system-file deoxybyte-io :system-name deoxybyte-io
  :dependencies (cl-fad deoxybyte-systems deoxybyte-utilities getopt) :source
  (("git" "https://github.com/keithj/deoxybyte-io.git")))
 (:ql-project deoxybyte-io :system-file deoxybyte-io-test :system-name
  deoxybyte-io-test :dependencies (deoxybyte-io lift) :source
  (("git" "https://github.com/keithj/deoxybyte-io.git")))
 (:ql-project deoxybyte-systems :system-file deoxybyte-systems :system-name
  deoxybyte-systems :dependencies (cl-fad) :source
  (("git" "https://github.com/keithj/deoxybyte-systems.git")))
 (:ql-project deoxybyte-unix :system-file deoxybyte-unix :system-name
  deoxybyte-unix :dependencies (cffi deoxybyte-io deoxybyte-systems) :source
  (("git" "https://github.com/keithj/deoxybyte-unix.git")))
 (:ql-project deoxybyte-unix :system-file deoxybyte-unix-test :system-name
  deoxybyte-unix-test :dependencies (deoxybyte-unix lift) :source
  (("git" "https://github.com/keithj/deoxybyte-unix.git")))
 (:ql-project deoxybyte-utilities :system-file deoxybyte-utilities :system-name
  deoxybyte-utilities :dependencies (deoxybyte-systems) :source
  (("git" "https://github.com/keithj/deoxybyte-utilities.git")))
 (:ql-project deoxybyte-utilities :system-file deoxybyte-utilities-test
  :system-name deoxybyte-utilities-test :dependencies
  (deoxybyte-utilities lift) :source
  (("git" "https://github.com/keithj/deoxybyte-utilities.git")))
 (:ql-project deploy :system-file deploy :system-name deploy :dependencies
  (asdf cffi documentation-utils trivial-features) :source
  (("git" "https://github.com/Shinmera/deploy.git")))
 (:ql-project deploy :system-file deploy-test :system-name deploy-test
  :dependencies (asdf cl-mpg123 cl-out123 deploy) :source
  (("git" "https://github.com/Shinmera/deploy.git")))
 (:ql-project depot :system-file depot :system-name depot :dependencies
  (asdf documentation-utils trivial-features trivial-gray-streams) :source
  (("git" "https://github.com/shinmera/depot.git")))
 (:ql-project depot :system-file depot-in-memory :system-name depot-in-memory
  :dependencies (asdf atomics depot) :source
  (("git" "https://github.com/shinmera/depot.git")))
 (:ql-project depot :system-file depot-test :system-name depot-test
  :dependencies (asdf depot depot-in-memory depot-zip parachute) :source
  (("git" "https://github.com/shinmera/depot.git")))
 (:ql-project depot :system-file depot-virtual :system-name depot-virtual
  :dependencies (asdf depot) :source
  (("git" "https://github.com/shinmera/depot.git")))
 (:ql-project depot :system-file depot-zip :system-name depot-zip :dependencies
  (asdf babel depot zippy) :source
  (("git" "https://github.com/shinmera/depot.git")))
 (:ql-project deptree :system-file deptree :system-name deptree :dependencies
  (asdf tar) :source (("git" "https://github.com/varjagg/deptree.git")))
 (:ql-project descriptions :system-file descriptions :system-name descriptions
  :dependencies (alexandria anaphora closer-mop sheeple) :source
  (("git" "https://github.com/mmontone/descriptions.git")))
 (:ql-project descriptions :system-file descriptions-test :system-name
  descriptions-test :dependencies
  (descriptions descriptions.serialization descriptions.validation stefil)
  :source (("git" "https://github.com/mmontone/descriptions.git")))
 (:ql-project descriptions :system-file descriptions.serialization :system-name
  descriptions.serialization :dependencies (cl-json descriptions) :source
  (("git" "https://github.com/mmontone/descriptions.git")))
 (:ql-project descriptions :system-file descriptions.validation :system-name
  descriptions.validation :dependencies (clavier descriptions) :source
  (("git" "https://github.com/mmontone/descriptions.git")))
 (:ql-project destructuring-bind-star :system-file destructuring-bind-star
  :system-name destructuring-bind-star :dependencies (asdf) :source
  (("git" "https://github.com/phoe/destructuring-bind-star.git")))
 (:ql-project destructuring-bind-star :system-file destructuring-bind-star
  :system-name destructuring-bind-star/test :dependencies
  (destructuring-bind-star) :source
  (("git" "https://github.com/phoe/destructuring-bind-star.git")))
 (:ql-project dexador :system-file dexador :system-name dexador :dependencies
  (alexandria asdf babel bordeaux-threads chipz chunga cl+ssl cl-base64
   cl-cookie cl-ppcre fast-http fast-io quri trivial-features trivial-garbage
   trivial-gray-streams trivial-mimes uiop usocket)
  :source (("git" "https://github.com/fukamachi/dexador.git")))
 (:ql-project dexador :system-file dexador-test :system-name dexador-test
  :dependencies (asdf babel cl-cookie clack-test dexador lack-request rove)
  :source (("git" "https://github.com/fukamachi/dexador.git")))
 (:ql-project dfio :system-file dfio :system-name dfio :dependencies
  (alexandria anaphora asdf data-frame dexador fare-csv let-plus) :source
  (("git" "https://github.com/Lisp-Stat/dfio.git")))
 (:ql-project dfio :system-file dfio :system-name dfio/tests :dependencies
  (clunit2 dfio) :source (("git" "https://github.com/Lisp-Stat/dfio.git")))
 (:ql-project diff :system-file diff :system-name diff :dependencies
  (cl-ppcre trivial-gray-streams) :source
  (("git" "https://github.com/sharplispers/diff.git")))
 (:ql-project diff-match-patch :system-file diff-match-patch :system-name
  diff-match-patch :dependencies (asdf cl-ppcre iterate) :source
  (("git" "https://github.com/agrostis/diff-match-patch.git")))
 (:ql-project diff-match-patch :system-file diff-match-patch :system-name
  diff-match-patch/test :dependencies (cl-interpol diff-match-patch fiveam)
  :source (("git" "https://github.com/agrostis/diff-match-patch.git")))
 (:ql-project dirt :system-file dirt :system-name dirt :dependencies
  (cepl cl-soil) :source
  (("branched-git" "https://github.com/cbaggers/dirt.git"
    "release-quicklisp")))
 (:ql-project disposable :system-file disposable :system-name disposable
  :dependencies nil :source
  (("git" "https://github.com/cbaggers/disposable.git")))
 (:ql-project dissect :system-file dissect :system-name dissect :dependencies
  (asdf) :source (("git" "https://github.com/Shinmera/dissect.git")))
 (:ql-project distributions :system-file distributions :system-name
  distributions :dependencies
  (alexandria anaphora array-operations asdf cephes float-features let-plus
   num-utils special-functions)
  :source (("git" "https://github.com/Lisp-Stat/distributions.git")))
 (:ql-project djula :system-file djula :system-name djula :dependencies
  (access alexandria asdf babel cl-locale cl-ppcre cl-slice closer-mop gettext
   iterate local-time parser-combinators split-sequence trivial-backtrace)
  :source (("git" "https://github.com/mmontone/djula.git")))
 (:ql-project djula :system-file djula-demo :system-name djula-demo
  :dependencies (asdf djula hunchentoot trivial-open-browser) :source
  (("git" "https://github.com/mmontone/djula.git")))
 (:ql-project djula :system-file djula-gettext :system-name djula-gettext
  :dependencies (asdf djula gettext) :source
  (("git" "https://github.com/mmontone/djula.git")))
 (:ql-project djula :system-file djula-locale :system-name djula-locale
  :dependencies (asdf cl-locale djula) :source
  (("git" "https://github.com/mmontone/djula.git")))
 (:ql-project djula :system-file djula-test :system-name djula-test
  :dependencies (asdf djula fiveam) :source
  (("git" "https://github.com/mmontone/djula.git")))
 (:ql-project djula :system-file djula-translate :system-name djula-translate
  :dependencies (asdf djula translate) :source
  (("git" "https://github.com/mmontone/djula.git")))
 (:ql-project dlist :system-file dlist :system-name dlist :dependencies nil
  :source (("git" "https://github.com/krzysz00/dlist.git")))
 (:ql-project dlist :system-file dlist :system-name dlist-test :dependencies
  (dlist lisp-unit) :source (("git" "https://github.com/krzysz00/dlist.git")))
 (:ql-project dml :system-file dml :system-name dml :dependencies
  (alexandria asdf cl-cairo2 cl-ppcre donuts) :source
  (("git" "https://github.com/cuichaox/dml.git")))
 (:ql-project dns-client :system-file dns-client :system-name dns-client
  :dependencies (asdf documentation-utils punycode usocket) :source
  (("git" "https://github.com/Shinmera/dns-client.git")))
 (:ql-project do-urlencode :system-file do-urlencode :system-name do-urlencode
  :dependencies (alexandria asdf babel) :source
  (("git" "https://github.com/drdo/do-urlencode.git")))
 (:ql-project doc :system-file 40ants-doc :system-name 40ants-doc :dependencies
  (asdf named-readtables pythonic-string-reader uiop) :source
  (("git" "https://github.com/40ants/doc.git")))
 (:ql-project doc :system-file 40ants-doc-full :system-name 40ants-doc-full
  :dependencies
  (40ants-doc alexandria asdf babel cl-fad cl-ppcre closer-mop common-doc
   common-html commondoc-markdown dexador docs-config fare-utils jonathan lass
   local-time log4cl named-readtables pythonic-string-reader slynk spinneret
   stem str swank tmpdir which xml-emitter)
  :source (("git" "https://github.com/40ants/doc.git")))
 (:ql-project doc :system-file 40ants-doc-test :system-name 40ants-doc-test
  :dependencies
  (40ants-doc alexandria asdf common-doc common-html commondoc-markdown rove)
  :source (("git" "https://github.com/40ants/doc.git")))
 (:ql-project docbrowser :system-file docbrowser :system-name docbrowser
  :dependencies
  (alexandria asdf babel bordeaux-threads cl-json closer-mop colorize
   flexi-streams hunchentoot parse-number split-sequence string-case swank
   yacc)
  :source (("git" "https://github.com/lokedhs/docbrowser.git") nil))
 (:ql-project docparser :system-file docparser :system-name docparser
  :dependencies (alexandria anaphora asdf cffi trivial-types) :source
  (("git" "https://github.com/eudoxia0/docparser.git")))
 (:ql-project docparser :system-file docparser-test :system-name docparser-test
  :dependencies (asdf docparser docparser-test-system fiveam) :source
  (("git" "https://github.com/eudoxia0/docparser.git")))
 (:ql-project docparser :system-file docparser-test-system :system-name
  docparser-test-system :dependencies (asdf cffi) :source
  (("git" "https://github.com/eudoxia0/docparser.git")))
 (:ql-project docs-builder :system-file docs-builder :system-name docs-builder
  :dependencies (40ants-doc alexandria asdf docs-config log4cl uiop) :source
  (("git" "https://github.com/40ants/docs-builder.git")))
 (:ql-project docs-builder :system-file docs-config :system-name docs-config
  :dependencies (asdf) :source
  (("git" "https://github.com/40ants/docs-builder.git")))
 (:ql-project documentation-template :system-file documentation-template
  :system-name documentation-template :dependencies (cl-who) :source
  (("ediware-http" "documentation-template")))
 (:ql-project documentation-utils :system-file documentation-utils :system-name
  documentation-utils :dependencies (asdf trivial-indent) :source
  (("git" "https://github.com/Shinmera/documentation-utils.git")))
 (:ql-project documentation-utils :system-file multilang-documentation-utils
  :system-name multilang-documentation-utils :dependencies
  (asdf documentation-utils multilang-documentation) :source
  (("git" "https://github.com/Shinmera/documentation-utils.git")))
 (:ql-project documentation-utils-extensions :system-file
  documentation-utils-extensions :system-name documentation-utils-extensions
  :dependencies (asdf documentation-utils) :source
  (("git"
    "https://github.com/sirherrbatka/documentation-utils-extensions.git")))
 (:ql-project donuts :system-file donuts :system-name donuts :dependencies
  (cl-ppcre trivial-shell) :source
  (("git" "https://github.com/tkych/donuts.git")))
 (:ql-project doplus :system-file doplus :system-name doplus :dependencies
  (asdf parse-declarations-1.0) :source
  (("latest-github-release" "https://github.com/alessiostalla/doplus.git")))
 (:ql-project doplus :system-file doplus-fset :system-name doplus-fset
  :dependencies (asdf doplus fset) :source
  (("latest-github-release" "https://github.com/alessiostalla/doplus.git")))
 (:ql-project dotenv :system-file dotenv :system-name dotenv :dependencies
  (asdf prove-asdf str) :source
  (("git" "https://github.com/vityafx/dotenv.git")))
 (:ql-project dotenv :system-file dotenv :system-name dotenv-test :dependencies
  (dotenv prove prove-asdf) :source
  (("git" "https://github.com/vityafx/dotenv.git")))
 (:ql-project doubly-linked-list :system-file doubly-linked-list :system-name
  doubly-linked-list :dependencies (asdf mfiano-utils) :source
  (("git" "https://github.com/mfiano/doubly-linked-list.git")))
 (:ql-project drakma :system-file drakma :system-name drakma :dependencies
  (asdf chipz chunga cl+ssl cl-base64 cl-ppcre flexi-streams puri usocket)
  :source (("latest-github-release" "https://github.com/edicl/drakma.git")))
 (:ql-project drakma :system-file drakma-test :system-name drakma-test
  :dependencies (asdf drakma easy-routes fiveam hunchentoot) :source
  (("latest-github-release" "https://github.com/edicl/drakma.git")))
 (:ql-project drakma-async :system-file drakma-async :system-name drakma-async
  :dependencies
  (alexandria asdf cl-async-future cl-async-ssl drakma fast-http fast-io
   flexi-streams)
  :source (("git" "https://github.com/orthecreedence/drakma-async.git")))
 (:ql-project draw-cons-tree :system-file draw-cons-tree :system-name
  draw-cons-tree :dependencies (alexandria asdf) :source
  (("git" "https://github.com/phoe/draw-cons-tree.git")))
 (:ql-project draw-cons-tree :system-file draw-cons-tree :system-name
  draw-cons-tree/test :dependencies (draw-cons-tree fiveam split-sequence)
  :source (("git" "https://github.com/phoe/draw-cons-tree.git")))
 (:ql-project dsm :system-file org.tfeb.dsm :system-name org.tfeb.dsm
  :dependencies
  (asdf org.tfeb.hax.collecting org.tfeb.hax.iterate org.tfeb.hax.simple-loops
   org.tfeb.hax.spam org.tfeb.hax.utilities)
  :source (("git" "https://github.com/tfeb/dsm.git")))
 (:ql-project dsm :system-file org.tfeb.dsm :system-name org.tfeb.dsm/bench
  :dependencies (org.tfeb.dsm) :source
  (("git" "https://github.com/tfeb/dsm.git")))
 (:ql-project dsm :system-file org.tfeb.dsm :system-name org.tfeb.dsm/test
  :dependencies (org.tfeb.dsm parachute) :source
  (("git" "https://github.com/tfeb/dsm.git")))
 (:ql-project dso-lex :system-file dso-lex :system-name dso-lex :dependencies
  (cl-ppcre dso-util) :source
  (("https" "https://download.fugue88.ws/lex/dso-lex-0.3.2.tar.gz")))
 (:ql-project dso-util :system-file dso-util :system-name dso-util
  :dependencies (cl-ppcre) :source
  (("https" "https://download.fugue88.ws/util/dso-util-0.1.2.tar.gz")))
 (:ql-project dufy :system-file dufy :system-name dufy :dependencies
  (alexandria asdf cl-ppcre) :source
  (("git" "https://github.com/privet-kitty/dufy.git")))
 (:ql-project dufy :system-file dufy :system-name dufy/core :dependencies
  (alexandria) :source (("git" "https://github.com/privet-kitty/dufy.git")))
 (:ql-project dufy :system-file dufy :system-name dufy/examples :dependencies
  (alexandria dufy iterate lispbuilder-sdl lparallel) :source
  (("git" "https://github.com/privet-kitty/dufy.git")))
 (:ql-project dufy :system-file dufy :system-name dufy/extra-data :dependencies
  (alexandria) :source (("git" "https://github.com/privet-kitty/dufy.git")))
 (:ql-project dufy :system-file dufy :system-name dufy/hsluv :dependencies
  (alexandria) :source (("git" "https://github.com/privet-kitty/dufy.git")))
 (:ql-project dufy :system-file dufy :system-name dufy/internal :dependencies
  (alexandria) :source (("git" "https://github.com/privet-kitty/dufy.git")))
 (:ql-project dufy :system-file dufy :system-name dufy/munsell :dependencies
  (alexandria cl-ppcre) :source
  (("git" "https://github.com/privet-kitty/dufy.git")))
 (:ql-project dufy :system-file dufy :system-name dufy/test :dependencies
  (alexandria cl-csv dufy fiveam parse-float) :source
  (("git" "https://github.com/privet-kitty/dufy.git")))
 (:ql-project dungen :system-file dungen :system-name dungen :dependencies
  (asdf graph mfiano-utils seedable-rng) :source
  (("git" "https://github.com/mfiano/dungen.git")))
 (:ql-project duologue :system-file duologue :system-name duologue
  :dependencies
  (alexandria anaphora asdf chronicity cl-ansi-text cl-fad clavier) :source
  (("git" "https://github.com/mmontone/duologue.git")))
 (:ql-project duologue :system-file duologue-readline :system-name
  duologue-readline :dependencies
  (alexandria anaphora asdf chronicity cl-ansi-text cl-fad cl-readline clavier
   drakma)
  :source (("git" "https://github.com/mmontone/duologue.git")))
 (:ql-project duologue :system-file duologue-test :system-name duologue-test
  :dependencies (asdf duologue stefil) :source
  (("git" "https://github.com/mmontone/duologue.git")))
 (:ql-project dweet :system-file dweet :system-name dweet :dependencies
  (babel com.gigamonkeys.json drakma) :source
  (("git" "https://github.com/death/dweet.git")))
 (:ql-project dynamic-array :system-file dynamic-array :system-name
  dynamic-array :dependencies (asdf mfiano-utils) :source
  (("git" "https://github.com/mfiano/dynamic-array.git")))
 (:ql-project dynamic-classes :system-file dynamic-classes :system-name
  dynamic-classes :dependencies (asdf metatilities-base) :source
  (("git" "https://github.com/gwkkwg/dynamic-classes.git")))
 (:ql-project dynamic-classes :system-file dynamic-classes-test :system-name
  dynamic-classes-test :dependencies (asdf dynamic-classes lift) :source
  (("git" "https://github.com/gwkkwg/dynamic-classes.git")))
 (:ql-project dynamic-collect :system-file dynamic-collect :system-name
  dynamic-collect :dependencies (asdf) :source
  (("git" "https://github.com/stylewarning/dynamic-collect.git")))
 (:ql-project dynamic-mixins :system-file dynamic-mixins :system-name
  dynamic-mixins :dependencies (alexandria asdf closer-mop) :source
  (("git" "https://github.com/rpav/dynamic-mixins.git")))
 (:ql-project eager-future :system-file eager-future :system-name eager-future
  :dependencies (bordeaux-threads) :source
  (("darcs"
    "http://common-lisp.net/project/eager-future/repository/eager-future/")))
 (:ql-project eager-future :system-file eager-future :system-name
  eager-future.test :dependencies (eager-future fiveam) :source
  (("darcs"
    "http://common-lisp.net/project/eager-future/repository/eager-future/")))
 (:ql-project eager-future2 :system-file eager-future2 :system-name
  eager-future2 :dependencies (asdf bordeaux-threads trivial-garbage) :source
  (("git" "https://gitlab.common-lisp.net/vsedach/eager-future2.git")))
 (:ql-project eager-future2 :system-file test.eager-future2 :system-name
  test.eager-future2 :dependencies (asdf eager-future2 eos) :source
  (("git" "https://gitlab.common-lisp.net/vsedach/eager-future2.git")))
 (:ql-project easing :system-file easing :system-name easing :dependencies
  (alexandria asdf) :source (("git" "https://github.com/vydd/easing.git")))
 (:ql-project easing :system-file easing-demo :system-name easing-demo
  :dependencies (asdf easing sketch) :source
  (("git" "https://github.com/vydd/easing.git")))
 (:ql-project easing :system-file easing-test :system-name easing-test
  :dependencies (asdf easing fiveam) :source
  (("git" "https://github.com/vydd/easing.git")))
 (:ql-project easter-gauss :system-file easter-gauss :system-name easter-gauss
  :dependencies (asdf local-time) :source
  (("git" "https://notabug.org/cage/easter-gauss.git")))
 (:ql-project easter-gauss :system-file easter-gauss :system-name
  easter-gauss/tests :dependencies (clunit2 easter-gauss) :source
  (("git" "https://notabug.org/cage/easter-gauss.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name easy-audio
  :dependencies (alexandria asdf flexi-streams nibbles-streams serapeum)
  :source (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name easy-audio/ape
  :dependencies (alexandria flexi-streams serapeum) :source
  (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name
  easy-audio/bitreader :dependencies (alexandria serapeum) :source
  (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name easy-audio/core
  :dependencies (serapeum) :source
  (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name
  easy-audio/examples :dependencies (easy-audio) :source
  (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name
  easy-audio/general-decoders :dependencies (serapeum) :source
  (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name easy-audio/ogg
  :dependencies (alexandria serapeum) :source
  (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name easy-audio/tests
  :dependencies (easy-audio fiveam md5) :source
  (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name easy-audio/wav
  :dependencies (alexandria flexi-streams nibbles-streams serapeum) :source
  (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-audio :system-file easy-audio :system-name easy-audio/wv
  :dependencies (alexandria serapeum) :source
  (("git" "https://github.com/shamazmazum/easy-audio.git")))
 (:ql-project easy-bind :system-file easy-bind :system-name easy-bind
  :dependencies (asdf) :source
  (("git" "https://github.com/Edraag/Easy-bind.git")))
 (:ql-project easy-macros :system-file easy-macros :system-name easy-macros
  :dependencies (asdf) :source
  (("git" "https://github.com/tdrhq/easy-macros.git")))
 (:ql-project easy-macros :system-file easy-macros :system-name
  easy-macros/tests :dependencies
  (alexandria easy-macros fiveam fiveam-matchers) :source
  (("git" "https://github.com/tdrhq/easy-macros.git")))
 (:ql-project easy-routes :system-file easy-routes :system-name easy-routes
  :dependencies (asdf hunchentoot routes) :source
  (("git" "https://github.com/mmontone/easy-routes.git")))
 (:ql-project easy-routes :system-file easy-routes+djula :system-name
  easy-routes+djula :dependencies (asdf djula easy-routes) :source
  (("git" "https://github.com/mmontone/easy-routes.git")))
 (:ql-project easy-routes :system-file easy-routes+errors :system-name
  easy-routes+errors :dependencies (asdf easy-routes hunchentoot-errors)
  :source (("git" "https://github.com/mmontone/easy-routes.git")))
 (:ql-project eazy-documentation :system-file eazy-documentation :system-name
  eazy-documentation :dependencies
  (alexandria asdf cl-ppcre cl-who common-doc common-doc-split-paragraphs
   common-html iterate trivia trivia.ppcre)
  :source (("git" "https://github.com/guicho271828/eazy-documentation.git")))
 (:ql-project eazy-gnuplot :system-file eazy-gnuplot :system-name eazy-gnuplot
  :dependencies (alexandria asdf iterate trivia uiop) :source
  (("git" "https://github.com/guicho271828/eazy-gnuplot.git")))
 (:ql-project eazy-gnuplot :system-file eazy-gnuplot.test :system-name
  eazy-gnuplot.test :dependencies (asdf eazy-gnuplot fiveam) :source
  (("git" "https://github.com/guicho271828/eazy-gnuplot.git")))
 (:ql-project eazy-process :system-file eazy-process :system-name eazy-process
  :dependencies
  (alexandria asdf cffi cl-ppcre cl-rlimit iolib iterate trivia trivia.ppcre
   trivial-garbage)
  :source (("git" "https://github.com/guicho271828/eazy-process.git")))
 (:ql-project eazy-process :system-file eazy-process.test :system-name
  eazy-process.test :dependencies (asdf eazy-process fiveam) :source
  (("git" "https://github.com/guicho271828/eazy-process.git")))
 (:ql-project eazy-project :system-file eazy-project :system-name eazy-project
  :dependencies
  (asdf bordeaux-threads cl-emb cl-ppcre cl-syntax cl-syntax-annot
   introspect-environment iterate lisp-namespace local-time trivia)
  :source (("git" "https://github.com/guicho271828/eazy-project.git")))
 (:ql-project eazy-project :system-file eazy-project.autoload :system-name
  eazy-project.autoload :dependencies (asdf eazy-project) :source
  (("git" "https://github.com/guicho271828/eazy-project.git")))
 (:ql-project eazy-project :system-file eazy-project.test :system-name
  eazy-project.test :dependencies (asdf eazy-project fiveam) :source
  (("git" "https://github.com/guicho271828/eazy-project.git")))
 (:ql-project ec2 :system-file ec2 :system-name ec2 :dependencies
  (drakma ironclad s-base64 s-xml) :source
  (("git" "https://github.com/nikodemus/ec2.git")))
 (:ql-project ec2-price-finder :system-file ec2-price-finder :system-name
  ec2-price-finder :dependencies
  (asdf easy-routes hunchentoot lass local-time parse-float read-csv spinneret
   wu-decimal)
  :source (("git" "https://github.com/chaitanyagupta/ec2-price-finder.git")))
 (:ql-project ecclesia :system-file ecclesia :system-name ecclesia
  :dependencies (acclimation asdf) :source
  (("git" "https://github.com/s-expressionists/Ecclesia.git")))
 (:ql-project eclector :system-file eclector :system-name eclector
  :dependencies (acclimation alexandria asdf closer-mop) :source
  (("git" "https://github.com/s-expressionists/Eclector.git")))
 (:ql-project eclector :system-file eclector-concrete-syntax-tree :system-name
  eclector-concrete-syntax-tree :dependencies
  (alexandria asdf concrete-syntax-tree eclector) :source
  (("git" "https://github.com/s-expressionists/Eclector.git")))
 (:ql-project eclector :system-file eclector-concrete-syntax-tree :system-name
  eclector-concrete-syntax-tree/test :dependencies
  (alexandria eclector eclector-concrete-syntax-tree fiveam) :source
  (("git" "https://github.com/s-expressionists/Eclector.git")))
 (:ql-project eclector :system-file eclector :system-name eclector/test
  :dependencies (alexandria eclector fiveam) :source
  (("git" "https://github.com/s-expressionists/Eclector.git")))
 (:ql-project eco :system-file eco :system-name eco :dependencies
  (alexandria asdf cl-who esrap split-sequence) :source
  (("git" "https://github.com/eudoxia0/eco.git")))
 (:ql-project eco :system-file eco-test :system-name eco-test :dependencies
  (asdf eco fiveam) :source (("git" "https://github.com/eudoxia0/eco.git")))
 (:ql-project elb-log :system-file elb-log :system-name elb-log :dependencies
  (cl-annot-prove cl-ppcre cl-syntax cl-syntax-annot cl-syntax-interpol
   local-time zs3)
  :source (("git" "https://github.com/Rudolph-Miller/elb-log.git")))
 (:ql-project elb-log :system-file elb-log-test :system-name elb-log-test
  :dependencies (elb-log prove prove-asdf) :source
  (("git" "https://github.com/Rudolph-Miller/elb-log.git")))
 (:ql-project electron-tools :system-file electron-tools :system-name
  electron-tools :dependencies
  (osicat trivial-download trivial-exe trivial-extract uiop) :source
  (("git" "https://github.com/ceramic/electron-tools.git")))
 (:ql-project electron-tools :system-file electron-tools-test :system-name
  electron-tools-test :dependencies (electron-tools fiveam trivial-extract)
  :source (("git" "https://github.com/ceramic/electron-tools.git")))
 (:ql-project elf :system-file elf :system-name elf :dependencies
  (alexandria asdf cl-ppcre com.gigamonkeys.binary-data flexi-streams
   metabang-bind split-sequence trivial-shell)
  :source (("git" "https://github.com/eschulte/elf.git")))
 (:ql-project elf :system-file elf :system-name elf/test :dependencies
  (alexandria elf metabang-bind stefil trivial-timeout) :source
  (("git" "https://github.com/eschulte/elf.git")))
 (:ql-project enhanced-boolean :system-file enhanced-boolean :system-name
  enhanced-boolean :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-boolean_latest.tar.gz")))
 (:ql-project enhanced-boolean :system-file enhanced-boolean_tests :system-name
  enhanced-boolean_tests :dependencies (asdf enhanced-boolean parachute)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-boolean_latest.tar.gz")))
 (:ql-project enhanced-defclass :system-file enhanced-defclass :system-name
  enhanced-defclass :dependencies
  (asdf closer-mop compatible-metaclasses enhanced-eval-when
   enhanced-find-class evaled-when shared-preferences simple-guess)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-defclass_latest.tar.gz")))
 (:ql-project enhanced-defclass :system-file enhanced-defclass_tests
  :system-name enhanced-defclass_tests :dependencies
  (asdf enhanced-defclass parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-defclass_latest.tar.gz")))
 (:ql-project enhanced-eval-when :system-file enhanced-eval-when :system-name
  enhanced-eval-when :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-eval-when_latest.tar.gz")))
 (:ql-project enhanced-eval-when :system-file enhanced-eval-when_tests
  :system-name enhanced-eval-when_tests :dependencies
  (asdf enhanced-eval-when parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-eval-when_latest.tar.gz")))
 (:ql-project enhanced-find-class :system-file enhanced-find-class :system-name
  enhanced-find-class :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-find-class_latest.tar.gz")))
 (:ql-project enhanced-find-class :system-file enhanced-find-class_tests
  :system-name enhanced-find-class_tests :dependencies
  (asdf enhanced-find-class parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-find-class_latest.tar.gz")))
 (:ql-project enhanced-multiple-value-bind :system-file
  enhanced-multiple-value-bind :system-name enhanced-multiple-value-bind
  :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-multiple-value-bind_latest.tar.gz")))
 (:ql-project enhanced-multiple-value-bind :system-file
  enhanced-multiple-value-bind_tests :system-name
  enhanced-multiple-value-bind_tests :dependencies
  (asdf enhanced-eval-when enhanced-multiple-value-bind parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-multiple-value-bind_latest.tar.gz")))
 (:ql-project enhanced-typep :system-file enhanced-typep :system-name
  enhanced-typep :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-typep_latest.tar.gz")))
 (:ql-project enhanced-typep :system-file enhanced-typep_tests :system-name
  enhanced-typep_tests :dependencies
  (asdf enhanced-boolean enhanced-typep parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-typep_latest.tar.gz")))
 (:ql-project enhanced-unwind-protect :system-file enhanced-unwind-protect
  :system-name enhanced-unwind-protect :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-unwind-protect_latest.tar.gz")))
 (:ql-project enhanced-unwind-protect :system-file
  enhanced-unwind-protect_tests :system-name enhanced-unwind-protect_tests
  :dependencies (asdf enhanced-unwind-protect parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/enhanced-unwind-protect_latest.tar.gz")))
 (:ql-project envy :system-file envy :system-name envy :dependencies (asdf)
  :source (("git" "https://github.com/fukamachi/envy.git")))
 (:ql-project envy :system-file envy-test :system-name envy-test :dependencies
  (asdf envy osicat prove) :source
  (("git" "https://github.com/fukamachi/envy.git")))
 (:ql-project eos :system-file eos :system-name eos :dependencies (asdf)
  :source (("git" "https://github.com/adlai/Eos.git")))
 (:ql-project eos :system-file eos :system-name eos-tests :dependencies (eos)
  :source (("git" "https://github.com/adlai/Eos.git")))
 (:ql-project epigraph :system-file epigraph :system-name epigraph
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/slyrus/epigraph.git")))
 (:ql-project epigraph :system-file epigraph :system-name epigraph-test
  :dependencies (epigraph fiveam) :source
  (("git" "https://github.com/slyrus/epigraph.git")))
 (:ql-project equals :system-file equals :system-name equals :dependencies nil
  :source (("git" "https://github.com/csziacobus/equals.git")))
 (:ql-project erjoalgo-webutil :system-file erjoalgo-webutil :system-name
  erjoalgo-webutil :dependencies
  (asdf cl-json cl-ppcre drakma fiasco gzip-stream hunchentoot vom) :source
  (("git" "https://github.com/erjoalgo/erjoalgo-webutil.git")))
 (:ql-project ernestine :system-file ernestine :system-name ernestine
  :dependencies (asdf cl-ppcre cl-prevalence drakma split-sequence) :source
  (("git" "https://github.com/nlamirault/ernestine.git")))
 (:ql-project ernestine :system-file ernestine-tests :system-name
  ernestine-tests :dependencies (asdf ernestine lisp-unit) :source
  (("git" "https://github.com/nlamirault/ernestine.git")))
 (:ql-project erudite :system-file erudite :system-name erudite :dependencies
  (alexandria asdf cl-fad cl-ppcre cl-template log4cl split-sequence
   swank-client)
  :source (("git" "https://github.com/mmontone/erudite.git")))
 (:ql-project erudite :system-file erudite-test :system-name erudite-test
  :dependencies (asdf erudite fiveam) :source
  (("git" "https://github.com/mmontone/erudite.git")))
 (:ql-project escalator :system-file escalator :system-name escalator
  :dependencies (asdf iterate) :source
  (("git" "https://bitbucket.org/elliottslaughter/escalator")))
 (:ql-project escalator :system-file escalator-bench :system-name
  escalator-bench :dependencies (asdf escalator iterate) :source
  (("git" "https://bitbucket.org/elliottslaughter/escalator")))
 (:ql-project esrap :system-file esrap :system-name esrap :dependencies
  (alexandria asdf trivial-with-current-source-form) :source
  (("git" "https://github.com/scymtym/esrap.git")))
 (:ql-project esrap :system-file esrap :system-name esrap/tests :dependencies
  (esrap fiveam) :source (("git" "https://github.com/scymtym/esrap.git")))
 (:ql-project esrap-liquid :system-file esrap-liquid :system-name esrap-liquid
  :dependencies (alexandria cl-interpol cl-ppcre iterate) :source
  (("git" "https://github.com/mabragor/esrap-liquid.git")))
 (:ql-project esrap-liquid :system-file esrap-liquid :system-name
  esrap-liquid-tests :dependencies (cl-interpol esrap-liquid fiveam) :source
  (("git" "https://github.com/mabragor/esrap-liquid.git")))
 (:ql-project esrap-peg :system-file esrap-peg :system-name esrap-peg
  :dependencies (alexandria asdf cl-unification esrap iterate) :source
  (("git" "https://github.com/fb08af68/esrap-peg.git")))
 (:ql-project evaled-when :system-file evaled-when :system-name evaled-when
  :dependencies (asdf trivial-cltl2) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/evaled-when_latest.tar.gz")))
 (:ql-project evaled-when :system-file evaled-when_tests :system-name
  evaled-when_tests :dependencies (asdf enhanced-boolean evaled-when parachute)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/evaled-when_latest.tar.gz")))
 (:ql-project event-emitter :system-file event-emitter :system-name
  event-emitter :dependencies (asdf) :source
  (("git" "https://github.com/fukamachi/event-emitter.git")))
 (:ql-project event-emitter :system-file event-emitter-test :system-name
  event-emitter-test :dependencies (asdf event-emitter prove) :source
  (("git" "https://github.com/fukamachi/event-emitter.git")))
 (:ql-project event-glue :system-file event-glue :system-name event-glue
  :dependencies nil :source
  (("git" "https://github.com/orthecreedence/event-glue.git")))
 (:ql-project event-glue :system-file event-glue-test :system-name
  event-glue-test :dependencies (event-glue fiveam) :source
  (("git" "https://github.com/orthecreedence/event-glue.git")))
 (:ql-project eventbus :system-file eventbus :system-name eventbus
  :dependencies (asdf simplet-asdf) :source
  (("git" "https://github.com/noloop/eventbus.git")))
 (:ql-project eventbus :system-file eventbus :system-name eventbus/test
  :dependencies (eventbus simplet simplet-asdf) :source
  (("git" "https://github.com/noloop/eventbus.git")))
 (:ql-project eventfd :system-file eventfd :system-name eventfd :dependencies
  (alexandria cffi-grovel iolib) :source
  (("git" "https://github.com/deadtrickster/eventfd.git")))
 (:ql-project everblocking-stream :system-file everblocking-stream :system-name
  everblocking-stream :dependencies (asdf trivial-gray-streams) :source
  (("git" "https://github.com/phoe/everblocking-stream.git")))
 (:ql-project evol :system-file evol :system-name evol :dependencies
  (alexandria bordeaux-threads cl-fad cl-ppcre external-program patron
   unix-options)
  :source (("git" "https://github.com/e-user/evol.git")))
 (:ql-project evol :system-file evol-test :system-name evol-test :dependencies
  (evol stefil) :source (("git" "https://github.com/e-user/evol.git")))
 (:ql-project exit-hooks :system-file exit-hooks :system-name exit-hooks
  :dependencies nil :source
  (("git" "https://github.com/ailisp/exit-hooks.git")))
 (:ql-project exponential-backoff :system-file exponential-backoff :system-name
  exponential-backoff :dependencies nil :source
  (("git" "https://github.com/death/exponential-backoff.git")))
 (:ql-project exscribe :system-file exscribe :system-name exscribe
  :dependencies
  (alexandria asdf fare-memoization fare-scripts fare-utils quri scribble
   trivia.quasiquote)
  :source (("git" "https://gitlab.common-lisp.net/frideau/exscribe.git")))
 (:ql-project exscribe :system-file exscribe :system-name exscribe/typeset
  :dependencies (cl-typesetting exscribe) :source
  (("git" "https://gitlab.common-lisp.net/frideau/exscribe.git")))
 (:ql-project ext-blog :system-file ext-blog :system-name ext-blog
  :dependencies
  (cl-fad cl-store closure-template image kl-verify local-time restas
   restas.file-publisher s-xml-rpc)
  :source (("git" "https://github.com/kevinlynx/ext-blog.git")))
 (:ql-project extended-reals :system-file extended-reals :system-name
  extended-reals :dependencies (alexandria asdf) :source
  (("git" "https://github.com/tpapp/extended-reals.git")))
 (:ql-project extensible-compound-types :system-file extensible-compound-types
  :system-name extensible-compound-types :dependencies
  (alexandria asdf cl-environments cl-form-types compiler-macro-notes fiveam
   in-nomine introspect-environment optima swank trivial-types)
  :source
  (("git" "https://github.com/digikar99/extensible-compound-types.git")))
 (:ql-project extensible-compound-types :system-file
  extensible-compound-types-cl :system-name extensible-compound-types-cl
  :dependencies
  (alexandria asdf asdf-system-connections cl-form-types
   extensible-compound-types fiveam)
  :source
  (("git" "https://github.com/digikar99/extensible-compound-types.git")))
 (:ql-project extensible-compound-types :system-file
  extensible-compound-types-cl :system-name extensible-compound-types-cl/magicl
  :dependencies (extensible-compound-types-cl magicl) :source
  (("git" "https://github.com/digikar99/extensible-compound-types.git")))
 (:ql-project extensible-compound-types :system-file
  extensible-compound-types-interfaces :system-name
  extensible-compound-types-interfaces :dependencies
  (asdf extensible-compound-types-cl polymorphic-functions) :source
  (("git" "https://github.com/digikar99/extensible-compound-types.git")))
 (:ql-project extensible-compound-types :system-file extensible-compound-types
  :system-name extensible-compound-types/class-specializers :dependencies
  (alexandria cl-environments cl-form-types compiler-macro-notes fiveam
   in-nomine introspect-environment optima swank trivial-types)
  :source
  (("git" "https://github.com/digikar99/extensible-compound-types.git")))
 (:ql-project extensible-compound-types :system-file extensible-compound-types
  :system-name extensible-compound-types/core :dependencies
  (alexandria cl-environments compiler-macro-notes fiveam in-nomine
   introspect-environment optima swank trivial-types)
  :source
  (("git" "https://github.com/digikar99/extensible-compound-types.git")))
 (:ql-project extensible-optimizing-coerce :system-file
  extensible-optimizing-coerce :system-name extensible-optimizing-coerce
  :dependencies
  (asdf closer-mop extensible-compound-types
   extensible-compound-types-interfaces optima trivial-types)
  :source
  (("git" "https://github.com/digikar99/extensible-optimizing-coerce.git")))
 (:ql-project extensible-optimizing-coerce :system-file
  extensible-optimizing-coerce :system-name extensible-optimizing-coerce/tests
  :dependencies (extensible-optimizing-coerce fiveam) :source
  (("git" "https://github.com/digikar99/extensible-optimizing-coerce.git")))
 (:ql-project external-program :system-file external-program :system-name
  external-program :dependencies (asdf trivial-features) :source
  (("git" "https://github.com/sellout/external-program.git")))
 (:ql-project external-program :system-file external-program :system-name
  external-program-test :dependencies (external-program fiveam) :source
  (("git" "https://github.com/sellout/external-program.git")))
 (:ql-project external-symbol-not-found :system-file external-symbol-not-found
  :system-name external-symbol-not-found :dependencies (asdf) :source
  (("git" "https://github.com/phoe/external-symbol-not-found.git")))
 (:ql-project f-underscore :system-file f-underscore :system-name f-underscore
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/bpm/f-underscore.git")))
 (:ql-project f2cl :system-file blas :system-name blas :dependencies
  (asdf blas-complex blas-package blas-real) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file blas-complex :system-name blas-complex
  :dependencies (asdf blas-real f2cl) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file blas-hompack :system-name blas-hompack
  :dependencies (asdf blas-package f2cl) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file blas-package :system-name blas-package
  :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file blas-real :system-name blas-real :dependencies
  (asdf blas-hompack f2cl) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file colnew :system-name colnew :dependencies
  (asdf f2cl) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file colnew :system-name colnew/test-1 :dependencies
  (colnew) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file colnew :system-name colnew/test-2 :dependencies
  (colnew) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file colnew :system-name colnew/test-3 :dependencies
  (colnew) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file f2cl :system-name f2cl :dependencies
  (asdf f2cl-asdf) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file f2cl-asdf :system-name f2cl-asdf :dependencies
  (asdf) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fftpack5 :system-name fftpack5 :dependencies
  (asdf f2cl) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fftpack5-double :system-name fftpack5-double
  :dependencies (asdf f2cl) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack :dependencies
  (asdf f2cl) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hstcrt
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hstcsp
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hstcyl
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hstplr
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hstssp
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hwscrt
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hwscsp
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hwscyl
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hwsplr
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-hwsssp
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file fishpack :system-name fishpack/test-sepx4
  :dependencies (fishpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file hompack :system-name hompack :dependencies
  (asdf blas-hompack f2cl) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file hompack :system-name hompack/test-mainf
  :dependencies (hompack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file hompack :system-name hompack/test-mainp
  :dependencies (hompack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file hompack :system-name hompack/test-mains
  :dependencies (hompack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file lapack :system-name lapack :dependencies
  (asdf blas-complex blas-package blas-real f2cl) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file lapack :system-name lapack/complex
  :dependencies (blas-complex blas-package blas-real) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file lapack :system-name lapack/package
  :dependencies (blas-package) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file lapack :system-name lapack/real :dependencies
  (blas-package blas-real) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file lapack :system-name lapack/tests :dependencies
  (lapack rt) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file minpack :system-name minpack :dependencies
  (asdf f2cl) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file minpack :system-name minpack/test-hybrd
  :dependencies (minpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file minpack :system-name minpack/test-lmdif
  :dependencies (minpack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack :dependencies
  (asdf f2cl) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/blas-util
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsoda
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsoda-demo
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsodar
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsodar-demo
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsode
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsode-demo
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsodi-demo
  :dependencies (odepack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsodkr-demo
  :dependencies (odepack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsodpk-demo
  :dependencies (odepack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/lsoibt-demo
  :dependencies (odepack) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file odepack :system-name odepack/package
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file quadpack :system-name quadpack :dependencies
  (asdf f2cl) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file quadpack :system-name quadpack/mach-par
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file quadpack :system-name quadpack/tests
  :dependencies (quadpack rt) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file toms419 :system-name toms419 :dependencies
  (asdf f2cl) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file toms419 :system-name toms419/test :dependencies
  (toms419) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file toms715 :system-name toms715 :dependencies
  (asdf f2cl) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file toms715 :system-name toms715/tests
  :dependencies (toms715) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file toms717 :system-name toms717 :dependencies
  (asdf f2cl) :source (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project f2cl :system-file toms717 :system-name toms717/tests
  :dependencies (toms717) :source
  (("git" "https://gitlab.common-lisp.net/f2cl/f2cl.git")))
 (:ql-project fact-base :system-file fact-base :system-name fact-base
  :dependencies (alexandria asdf cl-fad local-time optima) :source
  (("git" "https://github.com/inaimathi/fact-base.git")))
 (:ql-project factory-alien :system-file factory-alien :system-name
  factory-alien :dependencies (alexandria asdf closer-mop) :source
  (("git" "https://github.com/fisxoj/factory-alien.git")))
 (:ql-project factory-alien :system-file factory-alien :system-name
  factory-alien/postmodern :dependencies (factory-alien postmodern) :source
  (("git" "https://github.com/fisxoj/factory-alien.git")))
 (:ql-project factory-alien :system-file factory-alien :system-name
  factory-alien/test :dependencies (factory-alien parachute) :source
  (("git" "https://github.com/fisxoj/factory-alien.git")))
 (:ql-project fakenil :system-file fakenil :system-name fakenil :dependencies
  (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/fakenil_latest.tar.gz")))
 (:ql-project fakenil :system-file fakenil_tests :system-name fakenil_tests
  :dependencies (asdf fakenil parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/fakenil_latest.tar.gz")))
 (:ql-project fare-csv :system-file fare-csv :system-name fare-csv
  :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-csv.git")))
 (:ql-project fare-memoization :system-file fare-memoization :system-name
  fare-memoization :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-memoization.git")))
 (:ql-project fare-memoization :system-file fare-memoization :system-name
  fare-memoization/test :dependencies (fare-memoization hu.dwim.stefil) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-memoization.git")))
 (:ql-project fare-mop :system-file fare-mop :system-name fare-mop
  :dependencies (closer-mop fare-utils) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-mop.git")))
 (:ql-project fare-quasiquote :system-file fare-quasiquote :system-name
  fare-quasiquote :dependencies (asdf fare-utils) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-quasiquote.git")))
 (:ql-project fare-quasiquote :system-file fare-quasiquote-extras :system-name
  fare-quasiquote-extras :dependencies
  (asdf fare-quasiquote-optima fare-quasiquote-readtable) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-quasiquote.git")))
 (:ql-project fare-quasiquote :system-file fare-quasiquote-optima :system-name
  fare-quasiquote-optima :dependencies (asdf trivia.quasiquote) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-quasiquote.git")))
 (:ql-project fare-quasiquote :system-file fare-quasiquote-readtable
  :system-name fare-quasiquote-readtable :dependencies
  (asdf fare-quasiquote named-readtables) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-quasiquote.git")))
 (:ql-project fare-scripts :system-file fare-scripts :system-name fare-scripts
  :dependencies
  (asdf babel binascii cl-launch cl-mime cl-ppcre cl-scripting cl-unicode
   command-line-arguments fare-utils inferior-shell optima optima.ppcre swank)
  :source (("git" "https://github.com/fare/fare-scripts.git")))
 (:ql-project fare-utils :system-file fare-utils :system-name fare-utils
  :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-utils.git")))
 (:ql-project fare-utils :system-file fare-utils-test :system-name
  fare-utils-test :dependencies (asdf fare-utils hu.dwim.stefil) :source
  (("git" "https://gitlab.common-lisp.net/frideau/fare-utils.git")))
 (:ql-project fast-generic-functions :system-file fast-generic-functions
  :system-name fast-generic-functions :dependencies
  (asdf closer-mop sealable-metaobjects trivial-macroexpand-all) :source
  (("git" "https://github.com/marcoheisig/fast-generic-functions.git")))
 (:ql-project fast-http :system-file fast-http :system-name fast-http
  :dependencies
  (alexandria asdf babel cl-utilities proc-parse smart-buffer xsubseq) :source
  (("git" "https://github.com/fukamachi/fast-http.git")))
 (:ql-project fast-http :system-file fast-http-test :system-name fast-http-test
  :dependencies
  (asdf babel cl-syntax-interpol fast-http prove prove-asdf xsubseq) :source
  (("git" "https://github.com/fukamachi/fast-http.git")))
 (:ql-project fast-io :system-file fast-io :system-name fast-io :dependencies
  (alexandria asdf static-vectors trivial-gray-streams) :source
  (("git" "https://github.com/rpav/fast-io.git" "")))
 (:ql-project fast-io :system-file fast-io-test :system-name fast-io-test
  :dependencies (asdf checkl fast-io fiveam) :source
  (("git" "https://github.com/rpav/fast-io.git" "")))
 (:ql-project fast-websocket :system-file fast-websocket :system-name
  fast-websocket :dependencies (alexandria asdf babel fast-io) :source
  (("git" "https://github.com/fukamachi/fast-websocket.git")))
 (:ql-project fast-websocket :system-file fast-websocket-test :system-name
  fast-websocket-test :dependencies
  (asdf fast-io fast-websocket prove prove-asdf trivial-utf-8) :source
  (("git" "https://github.com/fukamachi/fast-websocket.git")))
 (:ql-project feeder :system-file feeder :system-name feeder :dependencies
  (asdf documentation-utils local-time plump) :source
  (("git" "https://github.com/shinmera/feeder.git")))
 (:ql-project femlisp :system-file cl-cpu-affinity :system-name cl-cpu-affinity
  :dependencies (asdf cffi) :source
  (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file ddo :system-name ddo :dependencies
  (alexandria asdf cl-mpi cl-mpi-extensions femlisp-basic femlisp-dictionary
   femlisp-parallel lfarm-admin lfarm-client lfarm-server trees uiop)
  :source (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file dealii-tutorial :system-name dealii-tutorial
  :dependencies (asdf femlisp) :source
  (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file femlisp :system-name femlisp :dependencies
  (asdf cl-ppcre femlisp-basic femlisp-dictionary femlisp-matlisp
   femlisp-parallel flexi-streams infix)
  :source (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file femlisp-basic :system-name femlisp-basic
  :dependencies (asdf closer-mop fiveam) :source
  (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file femlisp-dictionary :system-name
  femlisp-dictionary :dependencies (asdf femlisp-basic femlisp-parallel trees)
  :source (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file femlisp-matlisp :system-name femlisp-matlisp
  :dependencies (asdf femlisp-basic femlisp-dictionary femlisp-parallel)
  :source (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file femlisp-parallel :system-name
  femlisp-parallel :dependencies
  (asdf bordeaux-threads cl-cpu-affinity cl-ppcre femlisp-basic lparallel)
  :source (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file femlisp-picture :system-name femlisp-picture
  :dependencies (asdf cl-gd femlisp) :source
  (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file infix :system-name infix :dependencies
  (asdf) :source (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project femlisp :system-file net.scipolis.graphs :system-name
  net.scipolis.graphs :dependencies (asdf femlisp-basic) :source
  (("git" "git://git.savannah.nongnu.org/femlisp.git")))
 (:ql-project ffa :system-file ffa :system-name ffa :dependencies
  (cffi cl-utilities iterate metabang-bind) :source
  (("git" "https://github.com/tpapp/ffa.git")))
 (:ql-project fft :system-file fft :system-name fft :dependencies (asdf)
  :source (("git" "https://github.com/nklein/FFT.git")))
 (:ql-project fft :system-file pfft :system-name pfft :dependencies
  (asdf fft pcall) :source (("git" "https://github.com/nklein/FFT.git")))
 (:ql-project fiasco :system-file fiasco :system-name fiasco :dependencies
  (alexandria asdf trivial-gray-streams) :source
  (("git" "https://github.com/capitaomorte/fiasco.git")))
 (:ql-project fiasco :system-file fiasco :system-name fiasco-self-tests
  :dependencies (fiasco) :source
  (("git" "https://github.com/capitaomorte/fiasco.git")))
 (:ql-project file-attributes :system-file file-attributes :system-name
  file-attributes :dependencies
  (asdf cffi documentation-utils trivial-features) :source
  (("git" "https://github.com/Shinmera/file-attributes.git")))
 (:ql-project file-local-variable :system-file file-local-variable :system-name
  file-local-variable :dependencies (alexandria iterate trivia) :source
  (("git" "https://github.com/guicho271828/file-local-variable.git")))
 (:ql-project file-local-variable :system-file file-local-variable.test
  :system-name file-local-variable.test :dependencies
  (file-local-variable fiveam) :source
  (("git" "https://github.com/guicho271828/file-local-variable.git")))
 (:ql-project file-lock :system-file file-lock :system-name file-lock
  :dependencies (asdf cffi easy-macros log4cl) :source
  (("git" "https://github.com/tdrhq/file-lock.git")))
 (:ql-project file-lock :system-file file-lock :system-name file-lock/tests
  :dependencies (file-lock fiveam tmpdir) :source
  (("git" "https://github.com/tdrhq/file-lock.git")))
 (:ql-project file-notify :system-file file-notify :system-name file-notify
  :dependencies (asdf cffi documentation-utils trivial-features) :source
  (("git" "https://github.com/shinmera/file-notify.git")))
 (:ql-project file-select :system-file file-select :system-name file-select
  :dependencies (asdf cffi documentation-utils float-features trivial-features)
  :source (("git" "https://github.com/Shinmera/file-select.git")))
 (:ql-project file-types :system-file file-types :system-name file-types
  :dependencies nil :source
  (("git" "https://github.com/eugeneia/file-types.git")))
 (:ql-project filesystem-utils :system-file filesystem-utils :system-name
  filesystem-utils :dependencies
  (asdf documentation-utils pathname-utils trivial-features) :source
  (("git" "https://github.com/shinmera/filesystem-utils.git")))
 (:ql-project filesystem-utils :system-file filesystem-utils-test :system-name
  filesystem-utils-test :dependencies (asdf filesystem-utils parachute) :source
  (("git" "https://github.com/shinmera/filesystem-utils.git")))
 (:ql-project filter-maker :system-file filter-maker :system-name filter-maker
  :dependencies (asdf mcclim) :source
  (("git" "https://github.com/johnlorentzson/filter-maker.git")))
 (:ql-project filtered-functions :system-file filtered-functions :system-name
  filtered-functions :dependencies (closer-mop) :source
  (("git" "https://github.com/pcostanza/filtered-functions.git") nil))
 (:ql-project find-port :system-file find-port :system-name find-port
  :dependencies (asdf usocket) :source
  (("git" "https://github.com/eudoxia0/find-port.git")))
 (:ql-project find-port :system-file find-port-test :system-name find-port-test
  :dependencies (asdf find-port fiveam) :source
  (("git" "https://github.com/eudoxia0/find-port.git")))
 (:ql-project firephp :system-file firephp :system-name firephp :dependencies
  (cl-json hunchentoot) :source
  (("git" "https://github.com/html/firephp.git")))
 (:ql-project firephp :system-file firephp-tests :system-name firephp-tests
  :dependencies (cl-json firephp hu.dwim.stefil hunchentoot) :source
  (("git" "https://github.com/html/firephp.git")))
 (:ql-project first-time-value :system-file first-time-value :system-name
  first-time-value :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/first-time-value_latest.tar.gz")))
 (:ql-project first-time-value :system-file first-time-value_tests :system-name
  first-time-value_tests :dependencies (asdf first-time-value parachute)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/first-time-value_latest.tar.gz")))
 (:ql-project fiveam :system-file fiveam :system-name fiveam :dependencies
  (alexandria asdf net.didierverna.asdf-flv trivial-backtrace) :source
  (("git" "https://github.com/lispci/fiveam.git")))
 (:ql-project fiveam :system-file fiveam :system-name fiveam/test :dependencies
  (fiveam) :source (("git" "https://github.com/lispci/fiveam.git")))
 (:ql-project fiveam-asdf :system-file fiveam-asdf :system-name fiveam-asdf
  :dependencies (asdf) :source
  (("git" "https://github.com/rpgoldman/fiveam-asdf.git")))
 (:ql-project fiveam-matchers :system-file fiveam-matchers :system-name
  fiveam-matchers :dependencies (asdf cl-ppcre fiveam str) :source
  (("git" "https://github.com/tdrhq/fiveam-matchers.git")))
 (:ql-project fiveam-matchers :system-file fiveam-matchers :system-name
  fiveam-matchers/tests :dependencies (fiveam-matchers) :source
  (("git" "https://github.com/tdrhq/fiveam-matchers.git")))
 (:ql-project fixed :system-file fixed :system-name fixed :dependencies nil
  :source (("git" "https://github.com/npatrick04/fixed.git")))
 (:ql-project fixed :system-file fixed :system-name fixed/real-time
  :dependencies (fixed) :source
  (("git" "https://github.com/npatrick04/fixed.git")))
 (:ql-project fixed :system-file fixed :system-name fixed/test :dependencies
  (fiveam fixed) :source (("git" "https://github.com/npatrick04/fixed.git")))
 (:ql-project flac-metadata :system-file flac-metadata :system-name
  flac-metadata :dependencies (asdf binary-parser mfiano-utils) :source
  (("git" "https://git.mfiano.net/mfiano/flac-metadata.git")))
 (:ql-project flare :system-file flare :system-name flare :dependencies
  (3d-vectors array-utils asdf documentation-utils for lambda-fiddle
   trivial-garbage)
  :source (("git" "https://github.com/Shinmera/flare.git")))
 (:ql-project flare :system-file flare-viewer :system-name flare-viewer
  :dependencies (asdf cl-opengl flare qtcore qtgui qtools qtopengl verbose)
  :source (("git" "https://github.com/Shinmera/flare.git")))
 (:ql-project flexi-streams :system-file flexi-streams :system-name
  flexi-streams :dependencies (asdf trivial-gray-streams) :source
  (("ediware-http" "flexi-streams")))
 (:ql-project flexi-streams :system-file flexi-streams-test :system-name
  flexi-streams-test :dependencies (asdf flexi-streams) :source
  (("ediware-http" "flexi-streams")))
 (:ql-project flexichain :system-file flexichain :system-name flexichain
  :dependencies (asdf trivial-garbage) :source
  (("git" "https://github.com/robert-strandh/Flexichain.git")))
 (:ql-project flexichain :system-file flexichain-doc :system-name
  flexichain-doc :dependencies (asdf) :source
  (("git" "https://github.com/robert-strandh/Flexichain.git")))
 (:ql-project float-features :system-file float-features :system-name
  float-features :dependencies (asdf documentation-utils trivial-features)
  :source (("git" "https://github.com/Shinmera/float-features.git")))
 (:ql-project float-features :system-file float-features-tests :system-name
  float-features-tests :dependencies (asdf float-features parachute) :source
  (("git" "https://github.com/Shinmera/float-features.git")))
 (:ql-project floating-point :system-file floating-point :system-name
  floating-point :dependencies nil :source
  (("git" "https://github.com/OdonataResearchLLC/floating-point.git")))
 (:ql-project floating-point :system-file floating-point-test :system-name
  floating-point-test :dependencies (floating-point lisp-unit) :source
  (("git" "https://github.com/OdonataResearchLLC/floating-point.git")))
 (:ql-project floating-point-contractions :system-file
  floating-point-contractions :system-name floating-point-contractions
  :dependencies (asdf) :source
  (("git" "https://github.com/ruricolist/floating-point-contractions.git")))
 (:ql-project flow :system-file flow :system-name flow :dependencies
  (asdf closer-mop documentation-utils) :source
  (("git" "https://github.com/Shinmera/flow.git")))
 (:ql-project flow :system-file flow-visualizer :system-name flow-visualizer
  :dependencies (asdf flow qtcore qtgui qtools) :source
  (("git" "https://github.com/Shinmera/flow.git")))
 (:ql-project flute :system-file flute :system-name flute :dependencies
  (asdf assoc-utils let-over-lambda) :source
  (("git" "https://github.com/ailisp/flute.git")))
 (:ql-project flute :system-file flute-test :system-name flute-test
  :dependencies (asdf fiveam flute) :source
  (("git" "https://github.com/ailisp/flute.git")))
 (:ql-project fmcs :system-file fmcs :system-name fmcs :dependencies
  (asdf fare-quasiquote-extras) :source
  (("git" "https://github.com/thephoeron/fmcs.git")))
 (:ql-project fmcs :system-file fmcs :system-name fmcs/test :dependencies
  (fmcs) :source (("git" "https://github.com/thephoeron/fmcs.git")))
 (:ql-project fmt :system-file fmt :system-name fmt :dependencies
  (alexandria asdf) :source (("git" "https://github.com/mmontone/fmt.git")))
 (:ql-project fmt :system-file fmt-test :system-name fmt-test :dependencies
  (asdf fiveam fmt) :source (("git" "https://github.com/mmontone/fmt.git")))
 (:ql-project fmt :system-file fmt-time :system-name fmt-time :dependencies
  (asdf fmt local-time) :source
  (("git" "https://github.com/mmontone/fmt.git")))
 (:ql-project fn :system-file fn :system-name fn :dependencies
  (named-readtables) :source (("git" "https://github.com/cbaggers/fn.git")))
 (:ql-project focus :system-file net.didierverna.focus :system-name
  net.didierverna.focus :dependencies
  (net.didierverna.focus.core net.didierverna.focus.flv
   net.didierverna.focus.setup)
  :source (("git" "https://github.com/didierverna/focus.git")))
 (:ql-project focus :system-file net.didierverna.focus.core :system-name
  net.didierverna.focus.core :dependencies (net.didierverna.focus.setup)
  :source (("git" "https://github.com/didierverna/focus.git")))
 (:ql-project focus :system-file net.didierverna.focus.demos.quotation
  :system-name net.didierverna.focus.demos.quotation :dependencies
  (net.didierverna.focus.flv) :source
  (("git" "https://github.com/didierverna/focus.git")))
 (:ql-project focus :system-file net.didierverna.focus.flv :system-name
  net.didierverna.focus.flv :dependencies
  (net.didierverna.asdf-flv net.didierverna.focus.core
   net.didierverna.focus.setup)
  :source (("git" "https://github.com/didierverna/focus.git")))
 (:ql-project focus :system-file net.didierverna.focus.setup :system-name
  net.didierverna.focus.setup :dependencies nil :source
  (("git" "https://github.com/didierverna/focus.git")))
 (:ql-project focus :system-file net.didierverna.focus.setup :system-name
  net.didierverna.focus.setup/flv :dependencies (net.didierverna.focus.setup)
  :source (("git" "https://github.com/didierverna/focus.git")))
 (:ql-project fof :system-file fof :system-name fof :dependencies
  (alexandria asdf hu.dwim.defclass-star local-time magicffi named-readtables
   osicat serapeum str trivia trivial-package-local-nicknames)
  :source (("git" "https://gitlab.com/ambrevar/fof.git")))
 (:ql-project fof :system-file fof :system-name fof/mf :dependencies nil
  :source (("git" "https://gitlab.com/ambrevar/fof.git")))
 (:ql-project folio :system-file folio :system-name folio :dependencies
  (folio.as folio.boxes folio.collections folio.functions) :source
  (("git" "https://github.com/mikelevins/folio.git")))
 (:ql-project folio :system-file folio.as :system-name folio.as :dependencies
  nil :source (("git" "https://github.com/mikelevins/folio.git")))
 (:ql-project folio :system-file folio.boxes :system-name folio.boxes
  :dependencies nil :source
  (("git" "https://github.com/mikelevins/folio.git")))
 (:ql-project folio :system-file folio.collections :system-name
  folio.collections :dependencies (folio.as folio.functions fset) :source
  (("git" "https://github.com/mikelevins/folio.git")))
 (:ql-project folio :system-file folio.functions :system-name folio.functions
  :dependencies nil :source
  (("git" "https://github.com/mikelevins/folio.git")))
 (:ql-project folio2 :system-file folio2 :system-name folio2 :dependencies
  (alexandria asdf folio2-as folio2-as-syntax folio2-boxes folio2-functions
   folio2-functions-syntax folio2-make folio2-maps folio2-maps-syntax
   folio2-pairs folio2-sequences folio2-sequences-syntax folio2-series
   folio2-taps fset series)
  :source (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-as :system-name folio2-as
  :dependencies (asdf) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-as-syntax :system-name
  folio2-as-syntax :dependencies (asdf folio2-as) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-as-tests :system-name folio2-as-tests
  :dependencies (asdf folio2-as folio2-as-syntax lift) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-boxes :system-name folio2-boxes
  :dependencies (asdf folio2-as folio2-make) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-boxes-tests :system-name
  folio2-boxes-tests :dependencies (asdf folio2-boxes lift) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-functions :system-name
  folio2-functions :dependencies (alexandria asdf folio2-as folio2-make)
  :source (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-functions-syntax :system-name
  folio2-functions-syntax :dependencies (alexandria asdf folio2-functions)
  :source (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-functions-tests :system-name
  folio2-functions-tests :dependencies
  (asdf folio2-functions folio2-functions-syntax lift) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-make :system-name folio2-make
  :dependencies (asdf) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-make-tests :system-name
  folio2-make-tests :dependencies (asdf folio2-make lift) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-maps :system-name folio2-maps
  :dependencies (asdf folio2-as folio2-make fset) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-maps-syntax :system-name
  folio2-maps-syntax :dependencies (asdf folio2-maps) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-maps-tests :system-name
  folio2-maps-tests :dependencies (asdf folio2-maps folio2-maps-syntax lift)
  :source (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-pairs :system-name folio2-pairs
  :dependencies (asdf folio2-as folio2-make) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-pairs-tests :system-name
  folio2-pairs-tests :dependencies (asdf folio2-pairs lift) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-sequences :system-name
  folio2-sequences :dependencies
  (asdf folio2-as folio2-make folio2-pairs fset series) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-sequences-syntax :system-name
  folio2-sequences-syntax :dependencies (asdf folio2-sequences) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-sequences-tests :system-name
  folio2-sequences-tests :dependencies
  (asdf folio2-sequences folio2-sequences-syntax lift) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-series :system-name folio2-series
  :dependencies
  (asdf folio2-as folio2-make folio2-pairs folio2-sequences fset series)
  :source (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-series-tests :system-name
  folio2-series-tests :dependencies (asdf folio2-series lift) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-taps :system-name folio2-taps
  :dependencies
  (asdf closer-mop folio2-as folio2-make folio2-maps folio2-pairs
   folio2-sequences folio2-series fset)
  :source (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-taps-tests :system-name
  folio2-taps-tests :dependencies (asdf folio2-taps lift) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project folio2 :system-file folio2-tests :system-name folio2-tests
  :dependencies (asdf folio2) :source
  (("git" "https://github.com/mikelevins/folio2.git")))
 (:ql-project font-discovery :system-file font-discovery :system-name
  font-discovery :dependencies
  (asdf cffi documentation-utils trivial-features trivial-indent) :source
  (("git" "https://github.com/shinmera/font-discovery.git")))
 (:ql-project for :system-file for :system-name for :dependencies
  (asdf documentation-utils form-fiddle lambda-fiddle) :source
  (("git" "https://github.com/Shinmera/for.git")))
 (:ql-project form-fiddle :system-file form-fiddle :system-name form-fiddle
  :dependencies (asdf documentation-utils) :source
  (("git" "https://github.com/Shinmera/form-fiddle.git")))
 (:ql-project format-string-builder :system-file format-string-builder
  :system-name format-string-builder :dependencies (alexandria serapeum)
  :source
  (("git" "https://github.com/fiddlerwoaroof/format-string-builder.git")))
 (:ql-project formlets :system-file formlets :system-name formlets
  :dependencies (cl-ppcre cl-who drakma hunchentoot) :source
  (("git" "https://github.com/Inaimathi/formlets.git")))
 (:ql-project formlets :system-file formlets-test :system-name formlets-test
  :dependencies (cl-ppcre cl-who drakma formlets hunchentoot) :source
  (("git" "https://github.com/Inaimathi/formlets.git")))
 (:ql-project fred :system-file fred :system-name fred :dependencies
  (drakma s-xml) :source
  (("git" "https://github.com/plkrueger/CommonLispFred.git")))
 (:ql-project freebsd-ffi :system-file freebsd-ffi :system-name freebsd-ffi
  :dependencies (asdf cffi mfiano-utils) :source
  (("git" "https://git.mfiano.net/mfiano/freebsd-ffi.git")))
 (:ql-project freebsd-sysctl :system-file freebsd-sysctl :system-name
  freebsd-sysctl :dependencies (asdf cffi cffi-grovel) :source
  (("git" "https://github.com/shamazmazum/freebsd-sysctl.git")))
 (:ql-project freebsd-sysctl :system-file freebsd-sysctl :system-name
  freebsd-sysctl/tests :dependencies (fiveam freebsd-sysctl) :source
  (("git" "https://github.com/shamazmazum/freebsd-sysctl.git")))
 (:ql-project freesound :system-file freesound :system-name freesound
  :dependencies (alexandria asdf cl-ppcre dexador trivial-open-browser yason)
  :source (("git" "https://github.com/ntrocado/freesound.git")))
 (:ql-project fresnel :system-file fresnel :system-name fresnel :dependencies
  (asdf fare-quasiquote-extras gt trivial-package-local-nicknames) :source
  (("git" "https://gitlab.com/GrammaTech/Mnemosyne/fresnel.git")))
 (:ql-project fresnel :system-file fresnel :system-name fresnel/readtable
  :dependencies (cl-interpol fare-quasiquote-extras gt) :source
  (("git" "https://gitlab.com/GrammaTech/Mnemosyne/fresnel.git")))
 (:ql-project froute :system-file froute :system-name froute :dependencies
  (asdf cl-ppcre closer-mop) :source
  (("git" "https://github.com/FungusHumungus/froute.git")))
 (:ql-project froute :system-file froute :system-name froute/hunchentoot
  :dependencies (froute hunchentoot) :source
  (("git" "https://github.com/FungusHumungus/froute.git")))
 (:ql-project froute :system-file froute :system-name froute/test :dependencies
  (froute lisp-unit) :source
  (("git" "https://github.com/FungusHumungus/froute.git")))
 (:ql-project frpc :system-file frpc :system-name frpc :dependencies
  (alexandria babel bordeaux-threads flexi-streams glass nibbles pounds
   usocket)
  :source (("git" "https://github.com/fjames86/frpc.git")))
 (:ql-project frpc :system-file frpc :system-name frpc-des :dependencies
  (frpc ironclad) :source (("git" "https://github.com/fjames86/frpc.git")))
 (:ql-project frpc :system-file frpc :system-name frpc-gss :dependencies
  (cerberus frpc) :source (("git" "https://github.com/fjames86/frpc.git")))
 (:ql-project frpc :system-file frpcgen :system-name frpcgen :dependencies
  (cl-lex frpc yacc) :source (("git" "https://github.com/fjames86/frpc.git")))
 (:ql-project fs-watcher :system-file fs-watcher :system-name fs-watcher
  :dependencies (alexandria com.gigamonkeys.pathnames) :source
  (("git" "https://github.com/Ralt/fs-watcher.git")))
 (:ql-project fset :system-file fset :system-name fset :dependencies
  (asdf misc-extensions mt19937 named-readtables) :source
  (("git" "https://github.com/slburson/fset.git")))
 (:ql-project fset :system-file fset :system-name fset/test :dependencies
  (fset) :source (("git" "https://github.com/slburson/fset.git")))
 (:ql-project fsocket :system-file fsocket :system-name fsocket :dependencies
  (asdf cffi trivial-gray-streams) :source
  (("git" "https://github.com/fjames86/fsocket.git")))
 (:ql-project fsvd :system-file fsvd :system-name fsvd :dependencies nil
  :source (("git" "https://github.com/melisgl/fsvd.git")))
 (:ql-project fucc :system-file fucc-generator :system-name fucc-generator
  :dependencies (asdf fucc-parser) :source
  (("latest-github-release" "https://github.com/monoid/fucc.git")))
 (:ql-project fucc :system-file fucc-parser :system-name fucc-parser
  :dependencies (asdf) :source
  (("latest-github-release" "https://github.com/monoid/fucc.git")))
 (:ql-project function-cache :system-file function-cache :system-name
  function-cache :dependencies
  (alexandria asdf cl-interpol closer-mop iterate symbol-munger) :source
  (("git" "https://github.com/AccelerationNet/function-cache.git")))
 (:ql-project function-cache :system-file function-cache-clsql :system-name
  function-cache-clsql :dependencies (asdf clsql clsql-helper function-cache)
  :source (("git" "https://github.com/AccelerationNet/function-cache.git")))
 (:ql-project function-cache :system-file function-cache :system-name
  function-cache/test :dependencies (function-cache lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/function-cache.git")))
 (:ql-project functional-trees :system-file functional-trees :system-name
  functional-trees :dependencies
  (alexandria asdf asdf-package-system cl-store closer-mop fset iterate
   serapeum)
  :source (("git" "https://github.com/GrammaTech/functional-trees.git")))
 (:ql-project funds :system-file funds :system-name funds :dependencies (asdf)
  :source (("git" "https://github.com/charJe/funds.git")))
 (:ql-project fuzzy-dates :system-file fuzzy-dates :system-name fuzzy-dates
  :dependencies (asdf cl-ppcre documentation-utils) :source
  (("git" "https://github.com/shinmera/fuzzy-dates.git")))
 (:ql-project fuzzy-dates :system-file fuzzy-dates :system-name
  fuzzy-dates/test :dependencies (fuzzy-dates parachute) :source
  (("git" "https://github.com/shinmera/fuzzy-dates.git")))
 (:ql-project fuzzy-match :system-file fuzzy-match :system-name fuzzy-match
  :dependencies (asdf mk-string-metrics str) :source
  (("git" "https://github.com/vindarel/fuzzy-match.git")))
 (:ql-project fxml :system-file fxml :system-name fxml :dependencies
  (alexandria asdf babel flexi-streams named-readtables quri serapeum
   split-sequence trivial-gray-streams)
  :source (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/css-selectors
  :dependencies (alexandria css-selectors fxml xpath) :source
  (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/cxml :dependencies
  (cxml fxml) :source (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/dom :dependencies
  (alexandria babel flexi-streams named-readtables quri serapeum split-sequence
   trivial-gray-streams)
  :source (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/html5 :dependencies
  (alexandria cl-html5-parser fset fxml quri serapeum xpath) :source
  (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/klacks :dependencies
  (alexandria babel flexi-streams named-readtables quri serapeum split-sequence
   trivial-gray-streams)
  :source (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/runes :dependencies
  (babel named-readtables serapeum trivial-gray-streams) :source
  (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/sanitize :dependencies
  (alexandria fxml quri serapeum) :source
  (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/sanitize/test
  :dependencies
  (alexandria cl-html5-parser fiveam fset fxml quri serapeum xpath) :source
  (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/stp :dependencies
  (alexandria fxml xpath) :source
  (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/test :dependencies
  (alexandria babel cxml cxml-rng fiveam flexi-streams fxml named-readtables
   quri serapeum split-sequence trivial-gray-streams uiop xpath)
  :source (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/xml :dependencies
  (alexandria babel flexi-streams named-readtables quri serapeum split-sequence
   trivial-gray-streams)
  :source (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project fxml :system-file fxml :system-name fxml/xpath :dependencies
  (alexandria fxml xpath) :source
  (("git" "https://github.com/ruricolist/FXML.git")))
 (:ql-project gadgets :system-file gadgets :system-name gadgets :dependencies
  (alexandria asdf cl-hash-util cl-utilities split-sequence uiop) :source
  (("git" "https://github.com/BnMcGn/gadgets.git")))
 (:ql-project gadgets :system-file test-gadgets :system-name test-gadgets
  :dependencies (asdf gadgets prove) :source
  (("git" "https://github.com/BnMcGn/gadgets.git")))
 (:ql-project garbage-pools :system-file garbage-pools :system-name
  garbage-pools :dependencies (asdf) :source
  (("git" "https://github.com/archimag/garbage-pools.git") nil nil))
 (:ql-project garbage-pools :system-file garbage-pools-test :system-name
  garbage-pools-test :dependencies (asdf garbage-pools lift) :source
  (("git" "https://github.com/archimag/garbage-pools.git") nil nil))
 (:ql-project gcm :system-file gcm :system-name gcm :dependencies
  (babel com.gigamonkeys.json drakma) :source
  (("git" "https://github.com/death/gcm.git")))
 (:ql-project geco :system-file geco :system-name geco :dependencies (asdf)
  :source (("git" "https://github.com/gpwwjr/GECO.git")))
 (:ql-project gendl :system-file base :system-name base :dependencies (asdf)
  :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file bus :system-name bus :dependencies
  (asdf gwl-graphics) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file cl-lite :system-name cl-lite :dependencies
  (asdf glisp) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file dom :system-name dom :dependencies
  (asdf cl-who yadd) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file gendl :system-name gendl :dependencies
  (asdf cl-lite geysr gwl-graphics robot yadd) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file gendl-asdf :system-name gendl-asdf
  :dependencies (asdf) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file geom-base :system-name geom-base :dependencies
  (asdf base cl-pdf cl-typesetting cl-who) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file geysr :system-name geysr :dependencies
  (asdf gendl-asdf gwl-graphics) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file glisp :system-name glisp :dependencies
  (asdf babel base bordeaux-threads cl-base64 cl-ppcre uiop) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file graphs :system-name graphs :dependencies
  (asdf gwl-graphics) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file gwl :system-name gwl :dependencies
  (asdf cl-html-parse cl-markdown cl-who glisp yason zaserve) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file gwl-graphics :system-name gwl-graphics
  :dependencies (asdf geom-base gwl) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file ledger :system-name ledger :dependencies
  (asdf gwl) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file robot :system-name robot :dependencies
  (asdf gwl-graphics) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file surf :system-name surf :dependencies
  (asdf geom-base) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file ta2 :system-name ta2 :dependencies
  (asdf gwl-graphics) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file tasty :system-name tasty :dependencies
  (asdf gwl-graphics tree) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file translators :system-name translators
  :dependencies (asdf gwl) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file tree :system-name tree :dependencies
  (asdf gwl-graphics) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file wire-world :system-name wire-world
  :dependencies (asdf gwl-graphics) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project gendl :system-file yadd :system-name yadd :dependencies
  (asdf cl-html-parse gwl-graphics) :source
  (("branched-git" "https://gitlab.common-lisp.net/gendl/gendl.git" "master")))
 (:ql-project generalized-reference :system-file generalized-reference
  :system-name generalized-reference :dependencies
  (alexandria asdf closer-mop serapeum series split-sequence trivial-types)
  :source (("git" "https://github.com/thephoeron/generalized-reference.git")))
 (:ql-project generators :system-file generators :system-name generators
  :dependencies (alexandria cl-cont iterate) :source
  (("git" "https://github.com/AccelerationNet/generators.git")))
 (:ql-project generic-cl :system-file generic-cl :system-name generic-cl
  :dependencies
  (agutil asdf generic-cl.arithmetic generic-cl.collector generic-cl.comparison
   generic-cl.container generic-cl.iterator generic-cl.lazy-seq generic-cl.map
   generic-cl.math generic-cl.object generic-cl.sequence generic-cl.set)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.arithmetic :system-name
  generic-cl.arithmetic :dependencies
  (asdf generic-cl.comparison generic-cl.internal static-dispatch trivia)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.collector :system-name
  generic-cl.collector :dependencies
  (alexandria anaphora arrows asdf generic-cl.iterator generic-cl.object
   static-dispatch)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.comparison :system-name
  generic-cl.comparison :dependencies
  (alexandria asdf generic-cl.internal static-dispatch) :source
  (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.container :system-name
  generic-cl.container :dependencies (asdf generic-cl.object static-dispatch)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.internal :system-name
  generic-cl.internal :dependencies
  (alexandria asdf cl-form-types static-dispatch trivia) :source
  (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.iterator :system-name
  generic-cl.iterator :dependencies
  (agutil alexandria anaphora arrows asdf cl-form-types generic-cl.container
   generic-cl.internal generic-cl.object parse-declarations-1.0 static-dispatch
   trivia)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.lazy-seq :system-name
  generic-cl.lazy-seq :dependencies
  (agutil arrows asdf cl-custom-hash-table generic-cl.collector
   generic-cl.comparison generic-cl.container generic-cl.iterator
   generic-cl.map generic-cl.object generic-cl.sequence static-dispatch trivia)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.map :system-name
  generic-cl.map :dependencies
  (agutil alexandria anaphora arrows asdf cl-custom-hash-table
   generic-cl.collector generic-cl.comparison generic-cl.container
   generic-cl.internal generic-cl.iterator generic-cl.object static-dispatch
   trivia)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.math :system-name
  generic-cl.math :dependencies
  (agutil alexandria anaphora arrows asdf generic-cl.arithmetic static-dispatch
   trivia)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.object :system-name
  generic-cl.object :dependencies
  (alexandria arrows asdf generic-cl.comparison static-dispatch) :source
  (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.sequence :system-name
  generic-cl.sequence :dependencies
  (alexandria anaphora arrows asdf cl-custom-hash-table cl-form-types
   generic-cl.collector generic-cl.comparison generic-cl.container
   generic-cl.internal generic-cl.iterator generic-cl.map generic-cl.object
   static-dispatch)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.set :system-name
  generic-cl.set :dependencies
  (anaphora asdf generic-cl.arithmetic generic-cl.collector
   generic-cl.comparison generic-cl.container generic-cl.iterator
   generic-cl.map generic-cl.object generic-cl.sequence static-dispatch)
  :source (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.util :system-name
  generic-cl.util :dependencies (asdf generic-cl) :source
  (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl.util :system-name
  generic-cl.util/test :dependencies
  (alexandria anaphora arrows fiveam generic-cl.util) :source
  (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-cl :system-file generic-cl :system-name generic-cl/test
  :dependencies (fiveam generic-cl) :source
  (("git" "https://github.com/alex-gutev/generic-cl.git")))
 (:ql-project generic-comparability :system-file generic-comparability
  :system-name generic-comparability :dependencies (alexandria asdf) :source
  (("git" "https://github.com/pnathan/generic-comparability.git")))
 (:ql-project generic-comparability :system-file generic-comparability
  :system-name generic-comparability-test :dependencies
  (alexandria fiveam generic-comparability) :source
  (("git" "https://github.com/pnathan/generic-comparability.git")))
 (:ql-project generic-sequences :system-file generic-sequences :system-name
  generic-sequences :dependencies nil :source
  (("git" "https://github.com/dsorokin/generic-sequences.git")))
 (:ql-project generic-sequences :system-file generic-sequences-cont
  :system-name generic-sequences-cont :dependencies (cl-cont generic-sequences)
  :source (("git" "https://github.com/dsorokin/generic-sequences.git")))
 (:ql-project generic-sequences :system-file generic-sequences-iterate
  :system-name generic-sequences-iterate :dependencies
  (generic-sequences iterate) :source
  (("git" "https://github.com/dsorokin/generic-sequences.git")))
 (:ql-project generic-sequences :system-file generic-sequences-stream
  :system-name generic-sequences-stream :dependencies
  (bordeaux-threads generic-sequences) :source
  (("git" "https://github.com/dsorokin/generic-sequences.git")))
 (:ql-project generic-sequences :system-file generic-sequences-test
  :system-name generic-sequences-test :dependencies
  (generic-sequences generic-sequences-cont generic-sequences-iterate
   generic-sequences-stream)
  :source (("git" "https://github.com/dsorokin/generic-sequences.git")))
 (:ql-project geneva :system-file geneva :system-name geneva :dependencies
  (named-readtables split-sequence) :source
  (("git" "https://github.com/inters/geneva.git")))
 (:ql-project geneva :system-file geneva-cl :system-name geneva-cl
  :dependencies
  (geneva geneva-mk2 named-readtables split-sequence trivial-documentation)
  :source (("git" "https://github.com/inters/geneva.git")))
 (:ql-project geneva :system-file geneva-html :system-name geneva-html
  :dependencies (file-types geneva macro-html) :source
  (("git" "https://github.com/inters/geneva.git")))
 (:ql-project geneva :system-file geneva-latex :system-name geneva-latex
  :dependencies (geneva geneva-tex named-readtables texp) :source
  (("git" "https://github.com/inters/geneva.git")))
 (:ql-project geneva :system-file geneva-mk2 :system-name geneva-mk2
  :dependencies (geneva maxpc split-sequence) :source
  (("git" "https://github.com/inters/geneva.git")))
 (:ql-project geneva :system-file geneva-plain-text :system-name
  geneva-plain-text :dependencies (geneva geneva-mk2) :source
  (("git" "https://github.com/inters/geneva.git")))
 (:ql-project geneva :system-file geneva-tex :system-name geneva-tex
  :dependencies (file-types geneva named-readtables texp) :source
  (("git" "https://github.com/inters/geneva.git")))
 (:ql-project geneva :system-file open-geneva :system-name open-geneva
  :dependencies
  (geneva geneva-cl geneva-html geneva-latex geneva-mk2 geneva-plain-text
   geneva-tex)
  :source (("git" "https://github.com/inters/geneva.git")))
 (:ql-project genhash :system-file genhash :system-name genhash :dependencies
  (asdf) :source (("git" "https://github.com/pnathan/genhash.git")))
 (:ql-project geodesic :system-file geodesic :system-name geodesic
  :dependencies (asdf) :source (("git" "https://github.com/mgi/geodesic.git")))
 (:ql-project geodesic :system-file geodesic :system-name geodesic/test
  :dependencies (1am geodesic parse-number split-sequence) :source
  (("git" "https://github.com/mgi/geodesic.git")))
 (:ql-project geowkt :system-file geowkt :system-name geowkt :dependencies
  (asdf) :source (("git" "https://github.com/mgi/geowkt.git")))
 (:ql-project geowkt :system-file geowkt-update :system-name geowkt-update
  :dependencies (asdf cl-ppcre drakma parse-number) :source
  (("git" "https://github.com/mgi/geowkt.git")))
 (:ql-project getopt :system-file getopt :system-name getopt :dependencies nil
  :source (("kmr-git" "getopt")))
 (:ql-project getopt :system-file getopt :system-name getopt-tests
  :dependencies (getopt ptester) :source (("kmr-git" "getopt")))
 (:ql-project gettext :system-file gettext :system-name gettext :dependencies
  (flexi-streams split-sequence yacc) :source
  (("git" "https://github.com/rotatef/gettext.git")))
 (:ql-project gettext :system-file gettext-example :system-name gettext-example
  :dependencies (gettext) :source
  (("git" "https://github.com/rotatef/gettext.git")))
 (:ql-project gettext :system-file gettext-tests :system-name gettext-tests
  :dependencies (gettext stefil) :source
  (("git" "https://github.com/rotatef/gettext.git")))
 (:ql-project git-file-history :system-file git-file-history :system-name
  git-file-history :dependencies (cl-ppcre legit local-time uiop) :source
  (("git" "https://github.com/eudoxia0/git-file-history.git")))
 (:ql-project git-file-history :system-file git-file-history-test :system-name
  git-file-history-test :dependencies (fiveam git-file-history) :source
  (("git" "https://github.com/eudoxia0/git-file-history.git")))
 (:ql-project github-api-cl :system-file github-api-cl :system-name
  github-api-cl :dependencies
  (alexandria asdf cffi-grovel cl-base64 clack dexador str trivial-features woo
   yason)
  :source (("git" "https://github.com/ccqpein/Github-API-CL.git")))
 (:ql-project github-api-cl :system-file github-api-cl :system-name
  github-api-cl/tests :dependencies (github-api-cl lisp-unit) :source
  (("git" "https://github.com/ccqpein/Github-API-CL.git")))
 (:ql-project github-api-cl :system-file github-gist-api-cl :system-name
  github-gist-api-cl :dependencies
  (alexandria asdf cffi-grovel cl-base64 clack dexador github-api-cl str
   trivial-features woo yason)
  :source (("git" "https://github.com/ccqpein/Github-API-CL.git")))
 (:ql-project glacier :system-file glacier :system-name glacier :dependencies
  (alexandria asdf bordeaux-threads cl-json cl-ppcre dexador simple-config str
   tooter websocket-driver)
  :source (("git" "https://github.com/compufox/glacier.git")))
 (:ql-project glad-blob :system-file glad-blob :system-name glad-blob
  :dependencies (asdf bodge-blobs-support trivial-features) :source
  (("tagged-git" "https://github.com/borodust/glad-blob.git" "stable")))
 (:ql-project glass :system-file glass :system-name glass :dependencies nil
  :source (("git" "https://github.com/fjames86/glass.git")))
 (:ql-project glaw :system-file glaw :system-name glaw :dependencies
  (asdf cl-alc cl-openal cl-opengl) :source
  (("git" "https://github.com/patzy/glaw.git")))
 (:ql-project glaw :system-file glaw-examples :system-name glaw-examples
  :dependencies (asdf glaw glaw-imago glop) :source
  (("git" "https://github.com/patzy/glaw.git")))
 (:ql-project glaw :system-file glaw-imago :system-name glaw-imago
  :dependencies (asdf glaw imago) :source
  (("git" "https://github.com/patzy/glaw.git")))
 (:ql-project glaw :system-file glaw-sdl :system-name glaw-sdl :dependencies
  (asdf glaw lispbuilder-sdl lispbuilder-sdl-image) :source
  (("git" "https://github.com/patzy/glaw.git")))
 (:ql-project glfw :system-file glfw :system-name glfw :dependencies
  (asdf cffi documentation-utils float-features) :source
  (("git" "https://github.com/shirakumo/glfw.git")))
 (:ql-project glfw-blob :system-file glfw-blob :system-name glfw-blob
  :dependencies (asdf bodge-blobs-support trivial-features) :source
  (("tagged-git" "https://github.com/borodust/glfw-blob.git" "stable")))
 (:ql-project glisph :system-file glisph :system-name glisph :dependencies
  (cl-annot cl-glu cl-opengl cl-reexport zpb-ttf) :source
  (("git" "https://github.com/tamamu/glisph.git")))
 (:ql-project glisph :system-file glisph-test :system-name glisph-test
  :dependencies (cl-glut glisph prove prove-asdf) :source
  (("git" "https://github.com/tamamu/glisph.git")))
 (:ql-project glkit :system-file glkit :system-name glkit :dependencies
  (alexandria asdf cl-opengl defpackage-plus mathkit static-vectors) :source
  (("git" "https://github.com/lispgames/glkit.git")))
 (:ql-project glkit :system-file glkit-examples :system-name glkit-examples
  :dependencies (asdf glkit sdl2kit-examples) :source
  (("git" "https://github.com/lispgames/glkit.git")))
 (:ql-project global-vars :system-file global-vars :system-name global-vars
  :dependencies nil :source (("git" "https://github.com/lmj/global-vars.git")))
 (:ql-project global-vars :system-file global-vars-test :system-name
  global-vars-test :dependencies (global-vars) :source
  (("git" "https://github.com/lmj/global-vars.git")))
 (:ql-project glop :system-file glop :system-name glop :dependencies
  (cffi split-sequence trivial-garbage) :source
  (("git" "https://github.com/lispgames/glop.git")))
 (:ql-project glop :system-file glop-test :system-name glop-test :dependencies
  (cl-glu cl-opengl glop) :source
  (("git" "https://github.com/lispgames/glop.git")))
 (:ql-project glsl-packing :system-file glsl-packing :system-name glsl-packing
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/3b/glsl-packing.git")))
 (:ql-project glsl-spec :system-file glsl-docs :system-name glsl-docs
  :dependencies (asdf glsl-symbols) :source
  (("branched-git" "https://github.com/cbaggers/glsl-spec.git"
    "release-quicklisp")))
 (:ql-project glsl-spec :system-file glsl-spec :system-name glsl-spec
  :dependencies (asdf) :source
  (("branched-git" "https://github.com/cbaggers/glsl-spec.git"
    "release-quicklisp")))
 (:ql-project glsl-spec :system-file glsl-symbols :system-name glsl-symbols
  :dependencies (asdf) :source
  (("branched-git" "https://github.com/cbaggers/glsl-spec.git"
    "release-quicklisp")))
 (:ql-project glsl-toolkit :system-file glsl-toolkit :system-name glsl-toolkit
  :dependencies (asdf cl-ppcre documentation-utils parse-float trivial-indent)
  :source (("git" "https://github.com/Shirakumo/glsl-toolkit.git")))
 (:ql-project glu-tessellate :system-file glu-tessellate :system-name
  glu-tessellate :dependencies (cffi) :source
  (("git" "https://github.com/orthecreedence/glu-tessellate.git")))
 (:ql-project glyphs :system-file glyphs :system-name glyphs :dependencies
  (asdf cl-ppcre named-readtables parenscript) :source
  (("git" "https://github.com/ahungry/glyphs.git")))
 (:ql-project glyphs :system-file glyphs-test :system-name glyphs-test
  :dependencies (asdf glyphs stefil) :source
  (("git" "https://github.com/ahungry/glyphs.git")))
 (:ql-project gooptest :system-file gooptest :system-name gooptest
  :dependencies (alexandria asdf babel cffi cl-autowrap cl-plus-c uiop) :source
  (("git" "https://github.com/markasoftware/gooptest.git")))
 (:ql-project gooptest :system-file gooptest :system-name gooptest/examples
  :dependencies (gooptest) :source
  (("git" "https://github.com/markasoftware/gooptest.git")))
 (:ql-project graph :system-file graph :system-name graph :dependencies
  (alexandria asdf asdf-package-system curry-compose-reader-macros
   damn-fast-priority-queue metabang-bind named-readtables)
  :source (("git" "https://github.com/eschulte/graph.git")))
 (:ql-project graylex :system-file graylex :system-name graylex :dependencies
  (alexandria cl-ppcre trivial-gray-streams) :source
  (("git" "https://github.com/e-user/graylex.git")))
 (:ql-project graylex :system-file graylex-m4-example :system-name
  graylex-m4-example :dependencies (cl-heredoc graylex) :source
  (("git" "https://github.com/e-user/graylex.git")))
 (:ql-project green-threads :system-file green-threads :system-name
  green-threads :dependencies (cl-async-future cl-cont) :source
  (("git" "https://github.com/thezerobit/green-threads.git")))
 (:ql-project grid-formation :system-file grid-formation :system-name
  grid-formation :dependencies (asdf mfiano-utils origin) :source
  (("git" "https://github.com/mfiano/grid-formation.git")))
 (:ql-project group-by :system-file group-by :system-name group-by
  :dependencies (alexandria iterate) :source
  (("git" "https://github.com/AccelerationNet/group-by.git")))
 (:ql-project group-by :system-file group-by :system-name group-by-test
  :dependencies (group-by lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/group-by.git")))
 (:ql-project grovel-locally :system-file grovel-locally :system-name
  grovel-locally :dependencies
  (alexandria asdf cffi cffi-grovel cl-ppcre with-cached-reader-conditionals)
  :source (("git" "https://github.com/cbaggers/grovel-locally.git")))
 (:ql-project gsll :system-file gsll :system-name gsll :dependencies
  (alexandria asdf cffi-grovel cffi-libffi foreign-array lisp-unit
   metabang-bind trivial-features trivial-garbage)
  :source
  (("branched-git" "https://gitlab.common-lisp.net/antik/gsll.git" "quicklisp")
   nil nil))
 (:ql-project gtirb :system-file gtirb :system-name gtirb :dependencies
  (alexandria asdf asdf-package-system cl-intbytes cl-interval
   curry-compose-reader-macros graph named-readtables proto protobuf trivia
   trivial-package-local-nicknames trivial-utf-8)
  :source
  (("branched-git" "https://github.com/grammatech/gtirb.git" "quicklisp")))
 (:ql-project gtirb :system-file gtirb :system-name gtirb/run-dot :dependencies
  nil :source
  (("branched-git" "https://github.com/grammatech/gtirb.git" "quicklisp")))
 (:ql-project gtirb :system-file gtirb :system-name gtirb/run-update
  :dependencies nil :source
  (("branched-git" "https://github.com/grammatech/gtirb.git" "quicklisp")))
 (:ql-project gtirb :system-file gtirb :system-name proto :dependencies
  (protobuf) :source
  (("branched-git" "https://github.com/grammatech/gtirb.git" "quicklisp")))
 (:ql-project gtirb :system-file gtirb :system-name proto-v0 :dependencies
  (protobuf) :source
  (("branched-git" "https://github.com/grammatech/gtirb.git" "quicklisp")))
 (:ql-project gtirb-capstone :system-file gtirb-capstone :system-name
  gtirb-capstone :dependencies
  (asdf asdf-package-system capstone graph gt gtirb keystone stefil) :source
  (("git" "https://github.com/grammatech/gtirb-capstone.git")))
 (:ql-project gtirb-functions :system-file gtirb-functions :system-name
  gtirb-functions :dependencies
  (asdf asdf-package-system graph gt gtirb stefil) :source
  (("git" "https://github.com/grammatech/gtirb-functions.git")))
 (:ql-project gtk-tagged-streams :system-file gtk-tagged-streams :system-name
  gtk-tagged-streams :dependencies
  (asdf bordeaux-threads cl-cffi-gtk trivial-gray-streams) :source
  (("branched-git" "https://github.com/stacksmith/gtk-tagged-streams.git"
    "quicklisp")))
 (:ql-project gtwiwtg :system-file gtwiwtg :system-name gtwiwtg :dependencies
  (asdf) :source (("git" "https://cicadas.surf/cgit/colin/gtwiwtg.git")))
 (:ql-project gtype :system-file gtype :system-name gtype :dependencies
  (alexandria asdf iterate trivia trivial-cltl2 trivialib.type-unify type-r)
  :source (("git" "https://github.com/numcl/gtype.git")))
 (:ql-project gtype :system-file gtype.test :system-name gtype.test
  :dependencies (asdf fiveam gtype) :source
  (("git" "https://github.com/numcl/gtype.git")))
 (:ql-project gute :system-file gute :system-name gute :dependencies
  (alexandria asdf bordeaux-threads cl-mathstats cl-ppcre cl-strings conium)
  :source (("git" "https://github.com/genelkim/gute.git")))
 (:ql-project gute :system-file gute :system-name gute/tests :dependencies
  (gute lisp-unit) :source (("git" "https://github.com/genelkim/gute.git")))
 (:ql-project gzip-stream :system-file gzip-stream :system-name gzip-stream
  :dependencies (flexi-streams salza2 trivial-gray-streams) :source
  (("https"
    "https://common-lisp.net/project/gzip-stream/files/gzip-stream_latest.tgz")))
 (:ql-project harmony :system-file harmony :system-name harmony :dependencies
  (asdf atomics bordeaux-threads cl-mixed cl-mixed-alsa cl-mixed-pulse
   stealth-mixin trivial-features)
  :source (("git" "https://github.com/Shirakumo/harmony.git")))
 (:ql-project hash-set :system-file hash-set :system-name hash-set
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/samebchase/hash-set.git")))
 (:ql-project hash-set :system-file hash-set-tests :system-name hash-set-tests
  :dependencies (asdf fiveam hash-set) :source
  (("git" "https://github.com/samebchase/hash-set.git")))
 (:ql-project hash-table-ext :system-file hash-table-ext :system-name
  hash-table-ext :dependencies (alexandria asdf jingoh.documentizer) :source
  (("git" "https://github.com/hyotang666/hash-table-ext.git")))
 (:ql-project hash-table-ext :system-file hash-table-ext.test :system-name
  hash-table-ext.test :dependencies (asdf hash-table-ext jingoh) :source
  (("git" "https://github.com/hyotang666/hash-table-ext.git")))
 (:ql-project hashtrie :system-file hashtrie :system-name hashtrie
  :dependencies (asdf) :source
  (("git" "https://github.com/DanielKeogh/hashtrie.git")))
 (:ql-project hashtrie :system-file hashtrie-tests :system-name hashtrie-tests
  :dependencies (asdf fiveam hashtrie) :source
  (("git" "https://github.com/DanielKeogh/hashtrie.git")))
 (:ql-project hdf5-cffi :system-file hdf5-cffi :system-name hdf5-cffi
  :dependencies (asdf cffi cffi-grovel) :source
  (("git" "https://github.com/HDFGroup/hdf5-cffi.git")))
 (:ql-project hdf5-cffi :system-file hdf5-cffi.examples :system-name
  hdf5-cffi.examples :dependencies (asdf hdf5-cffi) :source
  (("git" "https://github.com/HDFGroup/hdf5-cffi.git")))
 (:ql-project hdf5-cffi :system-file hdf5-cffi.test :system-name hdf5-cffi.test
  :dependencies (asdf cffi cffi-grovel fiveam hdf5-cffi hdf5-cffi.examples)
  :source (("git" "https://github.com/HDFGroup/hdf5-cffi.git")))
 (:ql-project heap :system-file heap :system-name heap :dependencies (asdf)
  :source (("git" "https://github.com/massung/heap.git")))
 (:ql-project helambdap :system-file helambdap :system-name helambdap
  :dependencies (asdf cl-fad clad split-sequence xhtmlambda) :source
  (("git" "git://git.code.sf.net/p/helambdap/code")))
 (:ql-project hemlock :system-file hemlock.base :system-name hemlock.base
  :dependencies
  (alexandria asdf bordeaux-threads cl-ppcre command-line-arguments conium
   iolib iterate osicat prepl trivial-gray-streams)
  :source (("git" "https://github.com/bluelisp/hemlock.git")))
 (:ql-project hemlock :system-file hemlock.clx :system-name hemlock.clx
  :dependencies (asdf clx hemlock.base) :source
  (("git" "https://github.com/bluelisp/hemlock.git")))
 (:ql-project hemlock :system-file hemlock.tty :system-name hemlock.tty
  :dependencies (asdf hemlock.base) :source
  (("git" "https://github.com/bluelisp/hemlock.git")))
 (:ql-project hermetic :system-file hermetic :system-name hermetic
  :dependencies (asdf cl-pass clack) :source
  (("git" "https://github.com/eudoxia0/hermetic.git")))
 (:ql-project herodotus :system-file herodotus :system-name herodotus
  :dependencies (alexandria asdf cl-ppcre yason) :source
  (("git" "https://github.com/HenryS1/herodotus.git")))
 (:ql-project herodotus :system-file herodotus :system-name herodotus/tests
  :dependencies (herodotus rove) :source
  (("git" "https://github.com/HenryS1/herodotus.git")))
 (:ql-project hh-aws :system-file hh-aws :system-name hh-aws :dependencies
  (cl-base64 drakma ironclad puri s-xml) :source
  (("git" "https://github.com/hargettp/hh-aws.git")))
 (:ql-project hh-aws :system-file hh-aws :system-name hh-aws-tests
  :dependencies (hh-aws lisp-unit uuid) :source
  (("git" "https://github.com/hargettp/hh-aws.git")))
 (:ql-project hh-redblack :system-file hh-redblack :system-name hh-redblack
  :dependencies nil :source
  (("git" "https://github.com/hargettp/hh-redblack.git")))
 (:ql-project hh-redblack :system-file hh-redblack :system-name
  hh-redblack-tests :dependencies (hh-redblack lisp-unit) :source
  (("git" "https://github.com/hargettp/hh-redblack.git")))
 (:ql-project hh-web :system-file hh-web :system-name hh-web :dependencies
  (bordeaux-threads cl-base64 cl-fad cl-ppcre drakma hunchentoot ironclad
   local-time log5 parenscript trivial-backtrace uuid vecto)
  :source (("git" "https://github.com/hargettp/hh-web.git")))
 (:ql-project hl7-client :system-file hl7-client :system-name hl7-client
  :dependencies (usocket) :source
  (("git" "https://github.com/MartinEnders/hl7-client.git")))
 (:ql-project hl7-parser :system-file hl7-parser :system-name hl7-parser
  :dependencies nil :source
  (("git" "https://github.com/MartinEnders/hl7-parser.git")))
 (:ql-project horner :system-file horner :system-name horner :dependencies
  (alexandria asdf infix-math serapeum) :source
  (("git" "https://github.com/ruricolist/horner.git")))
 (:ql-project horse-html :system-file horse-html :system-name horse-html
  :dependencies (asdf parenscript) :source
  (("git" "https://gitlab.com/ralt/horse-html.git")))
 (:ql-project horse-html :system-file horse-html :system-name horse-html/tests
  :dependencies (fiveam horse-html) :source
  (("git" "https://gitlab.com/ralt/horse-html.git")))
 (:ql-project house :system-file house :system-name house :dependencies
  (alexandria anaphora asdf bordeaux-threads cl-fad cl-json cl-ppcre
   flexi-streams lisp-unit optima prove-asdf quri session-token split-sequence
   trivial-features usocket)
  :source (("git" "https://github.com/inaimathi/house.git")))
 (:ql-project house :system-file house :system-name house/test :dependencies
  (house prove-asdf test-utils) :source
  (("git" "https://github.com/inaimathi/house.git")))
 (:ql-project ht-simple-ajax :system-file ht-simple-ajax :system-name
  ht-simple-ajax :dependencies (hunchentoot) :source
  (("git" "https://github.com/martin-loetzsch/ht-simple-ajax.git")))
 (:ql-project html-encode :system-file html-encode :system-name html-encode
  :dependencies nil :source
  (("http" "http://beta.quicklisp.org/orphans/html-encode-1.2.tgz")))
 (:ql-project html-entities :system-file html-entities :system-name
  html-entities :dependencies (cl-ppcre) :source
  (("git" "https://github.com/BnMcGn/html-entities.git")))
 (:ql-project html-entities :system-file html-entities :system-name
  html-entities-tests :dependencies (fiveam html-entities) :source
  (("git" "https://github.com/BnMcGn/html-entities.git")))
 (:ql-project html-template :system-file html-template :system-name
  html-template :dependencies nil :source (("ediware-http" "html-template")))
 (:ql-project http-body :system-file http-body :system-name http-body
  :dependencies
  (asdf babel cl-ppcre cl-utilities fast-http flexi-streams jonathan quri
   trivial-gray-streams)
  :source (("git" "https://github.com/fukamachi/http-body.git")))
 (:ql-project http-body :system-file http-body-test :system-name http-body-test
  :dependencies
  (asdf assoc-utils cl-ppcre flexi-streams http-body prove prove-asdf
   trivial-utf-8)
  :source (("git" "https://github.com/fukamachi/http-body.git")))
 (:ql-project http-get-cache :system-file http-get-cache :system-name
  http-get-cache :dependencies (asdf drakma) :source
  (("git" "https://github.com/michaeljforster/http-get-cache.git")))
 (:ql-project http-parse :system-file http-parse :system-name http-parse
  :dependencies (babel cl-ppcre) :source
  (("git" "https://github.com/orthecreedence/http-parse.git")))
 (:ql-project http-parse :system-file http-parse-test :system-name
  http-parse-test :dependencies (babel eos http-parse) :source
  (("git" "https://github.com/orthecreedence/http-parse.git")))
 (:ql-project http2 :system-file http2 :system-name http2 :dependencies
  (alexandria anaphora asdf flexi-streams gzip-stream trivial-gray-streams)
  :source (("git" "https://github.com/zellerin/http2.git")))
 (:ql-project http2 :system-file http2 :system-name http2/all :dependencies
  (bordeaux-threads cl+ssl cl-who fiasco http2 parenscript puri
   trivial-gray-streams)
  :source (("git" "https://github.com/zellerin/http2.git")))
 (:ql-project http2 :system-file http2 :system-name http2/client :dependencies
  (cl+ssl http2 puri) :source
  (("git" "https://github.com/zellerin/http2.git")))
 (:ql-project http2 :system-file http2 :system-name http2/server :dependencies
  (bordeaux-threads cl+ssl http2 puri) :source
  (("git" "https://github.com/zellerin/http2.git")))
 (:ql-project http2 :system-file http2 :system-name http2/server/example
  :dependencies (bordeaux-threads cl+ssl cl-who http2 parenscript puri) :source
  (("git" "https://github.com/zellerin/http2.git")))
 (:ql-project http2 :system-file http2 :system-name http2/test :dependencies
  (bordeaux-threads cl+ssl cl-who fiasco http2 parenscript puri
   trivial-gray-streams)
  :source (("git" "https://github.com/zellerin/http2.git")))
 (:ql-project http2 :system-file http2 :system-name http2/tls :dependencies
  (bordeaux-threads cl+ssl http2) :source
  (("git" "https://github.com/zellerin/http2.git")))
 (:ql-project hu.dwim.asdf :system-file hu.dwim.asdf :system-name hu.dwim.asdf
  :dependencies (asdf uiop) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.asdf.git" "stable")))
 (:ql-project hu.dwim.asdf :system-file hu.dwim.asdf.documentation :system-name
  hu.dwim.asdf.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.presentation) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.asdf.git" "stable")))
 (:ql-project hu.dwim.bluez :system-file hu.dwim.bluez :system-name
  hu.dwim.bluez :dependencies (alexandria asdf cffi cffi-libffi hu.dwim.asdf)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.bluez.git" "stable")))
 (:ql-project hu.dwim.bluez :system-file hu.dwim.bluez :system-name
  hu.dwim.bluez/fancy :dependencies
  (hu.dwim.asdf hu.dwim.bluez hu.dwim.def+hu.dwim.common
   hu.dwim.defclass-star+hu.dwim.def hu.dwim.syntax-sugar)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.bluez.git" "stable")))
 (:ql-project hu.dwim.common :system-file hu.dwim.common :system-name
  hu.dwim.common :dependencies
  (alexandria anaphora closer-mop hu.dwim.asdf hu.dwim.common-lisp iterate
   metabang-bind)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.common.git" "stable")))
 (:ql-project hu.dwim.common :system-file hu.dwim.common.documentation
  :system-name hu.dwim.common.documentation :dependencies
  (hu.dwim.asdf hu.dwim.common hu.dwim.presentation) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.common.git" "stable")))
 (:ql-project hu.dwim.common-lisp :system-file hu.dwim.common-lisp :system-name
  hu.dwim.common-lisp :dependencies (asdf hu.dwim.asdf) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.common-lisp.git"
    "stable")))
 (:ql-project hu.dwim.common-lisp :system-file
  hu.dwim.common-lisp.documentation :system-name
  hu.dwim.common-lisp.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.common-lisp hu.dwim.presentation) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.common-lisp.git"
    "stable")))
 (:ql-project hu.dwim.computed-class :system-file hu.dwim.computed-class
  :system-name hu.dwim.computed-class :dependencies
  (asdf hu.dwim.asdf hu.dwim.def+hu.dwim.common
   hu.dwim.defclass-star+hu.dwim.def hu.dwim.syntax-sugar hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.computed-class.git"
    "stable")))
 (:ql-project hu.dwim.computed-class :system-file
  hu.dwim.computed-class+hu.dwim.logger :system-name
  hu.dwim.computed-class+hu.dwim.logger :dependencies
  (asdf hu.dwim.asdf hu.dwim.computed-class hu.dwim.logger) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.computed-class.git"
    "stable")))
 (:ql-project hu.dwim.computed-class :system-file hu.dwim.computed-class+swank
  :system-name hu.dwim.computed-class+swank :dependencies
  (asdf hu.dwim.asdf hu.dwim.computed-class swank) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.computed-class.git"
    "stable")))
 (:ql-project hu.dwim.computed-class :system-file
  hu.dwim.computed-class.documentation :system-name
  hu.dwim.computed-class.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.computed-class.test hu.dwim.presentation) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.computed-class.git"
    "stable")))
 (:ql-project hu.dwim.computed-class :system-file hu.dwim.computed-class.test
  :system-name hu.dwim.computed-class.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.computed-class+hu.dwim.logger
   hu.dwim.stefil+hu.dwim.def)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.computed-class.git"
    "stable")))
 (:ql-project hu.dwim.debug :system-file hu.dwim.debug :system-name
  hu.dwim.debug :dependencies
  (asdf hu.dwim.asdf hu.dwim.common hu.dwim.def+swank hu.dwim.defclass-star
   hu.dwim.util hu.dwim.walker swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.debug.git" "stable")))
 (:ql-project hu.dwim.debug :system-file hu.dwim.debug.documentation
  :system-name hu.dwim.debug.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.debug.test hu.dwim.presentation) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.debug.git" "stable")))
 (:ql-project hu.dwim.debug :system-file hu.dwim.debug.test :system-name
  hu.dwim.debug.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.debug hu.dwim.stefil+hu.dwim.def+swank) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.debug.git" "stable")))
 (:ql-project hu.dwim.def :system-file hu.dwim.def :system-name hu.dwim.def
  :dependencies (alexandria anaphora asdf hu.dwim.asdf iterate metabang-bind)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.def.git" "stable")))
 (:ql-project hu.dwim.def :system-file hu.dwim.def+cl-l10n :system-name
  hu.dwim.def+cl-l10n :dependencies (asdf cl-l10n hu.dwim.asdf hu.dwim.def)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.def.git" "stable")))
 (:ql-project hu.dwim.def :system-file hu.dwim.def+contextl :system-name
  hu.dwim.def+contextl :dependencies (asdf contextl hu.dwim.asdf hu.dwim.def)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.def.git" "stable")))
 (:ql-project hu.dwim.def :system-file hu.dwim.def+hu.dwim.common :system-name
  hu.dwim.def+hu.dwim.common :dependencies
  (asdf hu.dwim.asdf hu.dwim.common hu.dwim.def) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.def.git" "stable")))
 (:ql-project hu.dwim.def :system-file hu.dwim.def+hu.dwim.delico :system-name
  hu.dwim.def+hu.dwim.delico :dependencies
  (asdf hu.dwim.asdf hu.dwim.def hu.dwim.delico) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.def.git" "stable")))
 (:ql-project hu.dwim.def :system-file hu.dwim.def+swank :system-name
  hu.dwim.def+swank :dependencies (asdf hu.dwim.asdf hu.dwim.def swank) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.def.git" "stable")))
 (:ql-project hu.dwim.def :system-file hu.dwim.def :system-name
  hu.dwim.def/documentation :dependencies
  (hu.dwim.asdf hu.dwim.common hu.dwim.presentation hu.dwim.stefil+hu.dwim.def
   optima)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.def.git" "stable")))
 (:ql-project hu.dwim.def :system-file hu.dwim.def :system-name
  hu.dwim.def/namespace :dependencies
  (bordeaux-threads hu.dwim.asdf hu.dwim.def hu.dwim.util trivial-garbage)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.def.git" "stable")))
 (:ql-project hu.dwim.def :system-file hu.dwim.def :system-name
  hu.dwim.def/test :dependencies
  (hu.dwim.asdf hu.dwim.common hu.dwim.stefil+hu.dwim.def optima) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.def.git" "stable")))
 (:ql-project hu.dwim.defclass-star :system-file hu.dwim.defclass-star
  :system-name hu.dwim.defclass-star :dependencies (asdf hu.dwim.asdf) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.defclass-star.git"
    "stable")))
 (:ql-project hu.dwim.defclass-star :system-file hu.dwim.defclass-star+contextl
  :system-name hu.dwim.defclass-star+contextl :dependencies
  (asdf contextl hu.dwim.asdf hu.dwim.defclass-star) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.defclass-star.git"
    "stable")))
 (:ql-project hu.dwim.defclass-star :system-file
  hu.dwim.defclass-star+hu.dwim.def :system-name
  hu.dwim.defclass-star+hu.dwim.def :dependencies
  (asdf hu.dwim.asdf hu.dwim.def hu.dwim.defclass-star) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.defclass-star.git"
    "stable")))
 (:ql-project hu.dwim.defclass-star :system-file
  hu.dwim.defclass-star+hu.dwim.def+contextl :system-name
  hu.dwim.defclass-star+hu.dwim.def+contextl :dependencies
  (asdf hu.dwim.asdf hu.dwim.defclass-star+contextl
   hu.dwim.defclass-star+hu.dwim.def)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.defclass-star.git"
    "stable")))
 (:ql-project hu.dwim.defclass-star :system-file hu.dwim.defclass-star+swank
  :system-name hu.dwim.defclass-star+swank :dependencies
  (asdf hu.dwim.asdf hu.dwim.defclass-star swank) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.defclass-star.git"
    "stable")))
 (:ql-project hu.dwim.defclass-star :system-file hu.dwim.defclass-star
  :system-name hu.dwim.defclass-star/documentation :dependencies
  (hu.dwim.asdf hu.dwim.common hu.dwim.defclass-star hu.dwim.presentation
   hu.dwim.stefil+hu.dwim.def+swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.defclass-star.git"
    "stable")))
 (:ql-project hu.dwim.defclass-star :system-file hu.dwim.defclass-star
  :system-name hu.dwim.defclass-star/test :dependencies
  (hu.dwim.asdf hu.dwim.common hu.dwim.defclass-star
   hu.dwim.stefil+hu.dwim.def+swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.defclass-star.git"
    "stable")))
 (:ql-project hu.dwim.delico :system-file hu.dwim.delico :system-name
  hu.dwim.delico :dependencies
  (asdf contextl hu.dwim.asdf hu.dwim.def+hu.dwim.common hu.dwim.walker)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.delico.git" "stable")))
 (:ql-project hu.dwim.delico :system-file hu.dwim.delico :system-name
  hu.dwim.delico/documentation :dependencies
  (hu.dwim.asdf hu.dwim.def hu.dwim.delico hu.dwim.presentation
   hu.dwim.stefil+hu.dwim.def+swank hu.dwim.util hu.dwim.walker)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.delico.git" "stable")))
 (:ql-project hu.dwim.delico :system-file hu.dwim.delico :system-name
  hu.dwim.delico/test :dependencies
  (hu.dwim.asdf hu.dwim.def hu.dwim.delico hu.dwim.stefil+hu.dwim.def+swank
   hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.delico.git" "stable")))
 (:ql-project hu.dwim.graphviz :system-file hu.dwim.graphviz :system-name
  hu.dwim.graphviz :dependencies (asdf cffi hu.dwim.asdf metabang-bind) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.graphviz.git" "stable")))
 (:ql-project hu.dwim.graphviz :system-file hu.dwim.graphviz.documentation
  :system-name hu.dwim.graphviz.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.graphviz.test hu.dwim.presentation) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.graphviz.git" "stable")))
 (:ql-project hu.dwim.graphviz :system-file hu.dwim.graphviz.test :system-name
  hu.dwim.graphviz.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.common hu.dwim.graphviz
   hu.dwim.stefil+hu.dwim.def+swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.graphviz.git" "stable")))
 (:ql-project hu.dwim.logger :system-file hu.dwim.logger :system-name
  hu.dwim.logger :dependencies
  (asdf bordeaux-threads hu.dwim.asdf hu.dwim.def hu.dwim.def+hu.dwim.common
   hu.dwim.defclass-star+hu.dwim.def hu.dwim.util local-time)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.logger.git" "stable")))
 (:ql-project hu.dwim.logger :system-file hu.dwim.logger+iolib :system-name
  hu.dwim.logger+iolib :dependencies
  (asdf hu.dwim.asdf hu.dwim.logger hu.dwim.util+iolib) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.logger.git" "stable")))
 (:ql-project hu.dwim.logger :system-file hu.dwim.logger+swank :system-name
  hu.dwim.logger+swank :dependencies (asdf hu.dwim.asdf hu.dwim.logger swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.logger.git" "stable")))
 (:ql-project hu.dwim.logger :system-file hu.dwim.logger.documentation
  :system-name hu.dwim.logger.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.logger.test hu.dwim.presentation) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.logger.git" "stable")))
 (:ql-project hu.dwim.logger :system-file hu.dwim.logger.test :system-name
  hu.dwim.logger.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.logger hu.dwim.stefil+hu.dwim.def+swank) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.logger.git" "stable")))
 (:ql-project hu.dwim.partial-eval :system-file hu.dwim.partial-eval
  :system-name hu.dwim.partial-eval :dependencies
  (hu.dwim.asdf hu.dwim.common hu.dwim.def
   hu.dwim.defclass-star+hu.dwim.def+contextl hu.dwim.logger
   hu.dwim.syntax-sugar hu.dwim.util hu.dwim.walker swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.partial-eval.git"
    "stable")))
 (:ql-project hu.dwim.partial-eval :system-file
  hu.dwim.partial-eval.documentation :system-name
  hu.dwim.partial-eval.documentation :dependencies
  (hu.dwim.asdf hu.dwim.partial-eval.test hu.dwim.presentation) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.partial-eval.git"
    "stable")))
 (:ql-project hu.dwim.partial-eval :system-file hu.dwim.partial-eval.test
  :system-name hu.dwim.partial-eval.test :dependencies
  (hu.dwim.asdf hu.dwim.partial-eval hu.dwim.stefil+hu.dwim.def+swank
   hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.partial-eval.git"
    "stable")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec :system-name
  hu.dwim.perec :dependencies
  (asdf babel cl-containers cl-ppcre contextl hu.dwim.asdf hu.dwim.common
   hu.dwim.computed-class hu.dwim.def+contextl hu.dwim.def+hu.dwim.common
   hu.dwim.def+hu.dwim.delico hu.dwim.defclass-star+hu.dwim.def hu.dwim.logger
   hu.dwim.rdbms hu.dwim.serializer hu.dwim.syntax-sugar hu.dwim.util
   hu.dwim.walker ironclad local-time metacopy-with-contextl parse-number)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec+hu.dwim.quasi-quote.xml
  :system-name hu.dwim.perec+hu.dwim.quasi-quote.xml :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec hu.dwim.quasi-quote.xml) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec+iolib :system-name
  hu.dwim.perec+iolib :dependencies (asdf hu.dwim.asdf hu.dwim.perec iolib)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec+swank :system-name
  hu.dwim.perec+swank :dependencies (asdf hu.dwim.asdf hu.dwim.perec swank)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.all :system-name
  hu.dwim.perec.all :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec.oracle hu.dwim.perec.postgresql
   hu.dwim.perec.sqlite)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.all.test :system-name
  hu.dwim.perec.all.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec.oracle.test hu.dwim.perec.postgresql.test
   hu.dwim.perec.sqlite.test)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.documentation
  :system-name hu.dwim.perec.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec.all.test hu.dwim.presentation) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.oracle :system-name
  hu.dwim.perec.oracle :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec hu.dwim.rdbms.oracle) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.oracle.test :system-name
  hu.dwim.perec.oracle.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec.oracle hu.dwim.perec.test) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.postgresql :system-name
  hu.dwim.perec.postgresql :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec hu.dwim.rdbms.postgresql) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.postgresql.test
  :system-name hu.dwim.perec.postgresql.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec.postgresql hu.dwim.perec.test) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.sqlite :system-name
  hu.dwim.perec.sqlite :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec hu.dwim.rdbms.sqlite) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.sqlite.test :system-name
  hu.dwim.perec.sqlite.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec.sqlite hu.dwim.perec.test) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.perec :system-file hu.dwim.perec.test :system-name
  hu.dwim.perec.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec+hu.dwim.quasi-quote.xml hu.dwim.perec+iolib
   hu.dwim.perec+swank hu.dwim.util.test)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.perec/")))
 (:ql-project hu.dwim.presentation :system-file hu.dwim.presentation
  :system-name hu.dwim.presentation :dependencies
  (asdf cl-graph+hu.dwim.graphviz contextl hu.dwim.asdf hu.dwim.def+contextl
   hu.dwim.logger hu.dwim.stefil+hu.dwim.def hu.dwim.util
   hu.dwim.web-server.application iolib moptilities)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.presentation/") nil))
 (:ql-project hu.dwim.presentation :system-file
  hu.dwim.presentation+cl-graph+cl-typesetting :system-name
  hu.dwim.presentation+cl-graph+cl-typesetting :dependencies
  (asdf cl-graph hu.dwim.asdf hu.dwim.presentation+cl-typesetting) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.presentation/") nil))
 (:ql-project hu.dwim.presentation :system-file
  hu.dwim.presentation+cl-typesetting :system-name
  hu.dwim.presentation+cl-typesetting :dependencies
  (asdf cl-typesetting hu.dwim.asdf hu.dwim.presentation) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.presentation/") nil))
 (:ql-project hu.dwim.presentation :system-file
  hu.dwim.presentation+hu.dwim.stefil :system-name
  hu.dwim.presentation+hu.dwim.stefil :dependencies
  (asdf hu.dwim.asdf hu.dwim.presentation hu.dwim.stefil) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.presentation/") nil))
 (:ql-project hu.dwim.presentation :system-file
  hu.dwim.presentation+hu.dwim.web-server :system-name
  hu.dwim.presentation+hu.dwim.web-server :dependencies
  (asdf hu.dwim.asdf hu.dwim.presentation hu.dwim.web-server) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.presentation/") nil))
 (:ql-project hu.dwim.quasi-quote :system-file hu.dwim.quasi-quote :system-name
  hu.dwim.quasi-quote :dependencies
  (asdf babel babel-streams hu.dwim.asdf hu.dwim.common
   hu.dwim.defclass-star+hu.dwim.def hu.dwim.syntax-sugar hu.dwim.util
   hu.dwim.walker)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.quasi-quote.git"
    "stable")))
 (:ql-project hu.dwim.quasi-quote :system-file hu.dwim.quasi-quote.css
  :system-name hu.dwim.quasi-quote.css :dependencies
  (asdf hu.dwim.asdf hu.dwim.quasi-quote) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.quasi-quote.git"
    "stable")))
 (:ql-project hu.dwim.quasi-quote :system-file hu.dwim.quasi-quote.js
  :system-name hu.dwim.quasi-quote.js :dependencies
  (asdf cl-ppcre hu.dwim.asdf hu.dwim.quasi-quote hu.dwim.util hu.dwim.walker)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.quasi-quote.git"
    "stable")))
 (:ql-project hu.dwim.quasi-quote :system-file hu.dwim.quasi-quote.pdf
  :system-name hu.dwim.quasi-quote.pdf :dependencies
  (asdf cffi hu.dwim.asdf hu.dwim.quasi-quote) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.quasi-quote.git"
    "stable")))
 (:ql-project hu.dwim.quasi-quote :system-file hu.dwim.quasi-quote.xml
  :system-name hu.dwim.quasi-quote.xml :dependencies
  (asdf hu.dwim.asdf hu.dwim.quasi-quote) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.quasi-quote.git"
    "stable")))
 (:ql-project hu.dwim.quasi-quote :system-file hu.dwim.quasi-quote.xml+cxml
  :system-name hu.dwim.quasi-quote.xml+cxml :dependencies
  (asdf cxml hu.dwim.asdf hu.dwim.quasi-quote.xml) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.quasi-quote.git"
    "stable")))
 (:ql-project hu.dwim.quasi-quote :system-file
  hu.dwim.quasi-quote.xml+hu.dwim.quasi-quote.js :system-name
  hu.dwim.quasi-quote.xml+hu.dwim.quasi-quote.js :dependencies
  (asdf hu.dwim.asdf hu.dwim.quasi-quote.js hu.dwim.quasi-quote.xml) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.quasi-quote.git"
    "stable")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms :system-name
  hu.dwim.rdbms :dependencies
  (asdf babel hu.dwim.asdf hu.dwim.defclass-star+hu.dwim.def hu.dwim.logger
   hu.dwim.syntax-sugar hu.dwim.util hu.dwim.walker ironclad local-time)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.all :system-name
  hu.dwim.rdbms.all :dependencies
  (asdf hu.dwim.asdf hu.dwim.rdbms.oracle hu.dwim.rdbms.postgresql
   hu.dwim.rdbms.sqlite)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.all.test :system-name
  hu.dwim.rdbms.all.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.rdbms.oracle.test hu.dwim.rdbms.postgresql.test
   hu.dwim.rdbms.sqlite.test)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.documentation
  :system-name hu.dwim.rdbms.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.presentation hu.dwim.rdbms.all.test) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.oracle :system-name
  hu.dwim.rdbms.oracle :dependencies (asdf cffi hu.dwim.asdf hu.dwim.rdbms)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.oracle.test :system-name
  hu.dwim.rdbms.oracle.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.rdbms.oracle hu.dwim.rdbms.test) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.postgresql :system-name
  hu.dwim.rdbms.postgresql :dependencies
  (asdf cl-postgres+local-time hu.dwim.asdf hu.dwim.rdbms) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.postgresql.test
  :system-name hu.dwim.rdbms.postgresql.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.rdbms.postgresql hu.dwim.rdbms.test) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.sqlite :system-name
  hu.dwim.rdbms.sqlite :dependencies (asdf cffi hu.dwim.asdf hu.dwim.rdbms)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.sqlite.test :system-name
  hu.dwim.rdbms.sqlite.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.rdbms.sqlite hu.dwim.rdbms.test) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.rdbms :system-file hu.dwim.rdbms.test :system-name
  hu.dwim.rdbms.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.rdbms hu.dwim.stefil+hu.dwim.def+swank) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.rdbms/")))
 (:ql-project hu.dwim.reiterate :system-file hu.dwim.reiterate :system-name
  hu.dwim.reiterate :dependencies
  (alexandria anaphora asdf hu.dwim.asdf hu.dwim.common-lisp hu.dwim.def
   hu.dwim.defclass-star hu.dwim.syntax-sugar hu.dwim.util metabang-bind)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.reiterate.git" "stable")))
 (:ql-project hu.dwim.reiterate :system-file hu.dwim.reiterate+hu.dwim.logger
  :system-name hu.dwim.reiterate+hu.dwim.logger :dependencies
  (asdf hu.dwim.asdf hu.dwim.logger hu.dwim.reiterate) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.reiterate.git" "stable")))
 (:ql-project hu.dwim.sdl :system-file hu.dwim.sdl :system-name hu.dwim.sdl
  :dependencies (alexandria asdf cffi cffi-libffi hu.dwim.asdf) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.sdl.git" "stable")))
 (:ql-project hu.dwim.sdl :system-file hu.dwim.sdl :system-name
  hu.dwim.sdl/fancy :dependencies
  (alexandria cffi cffi-libffi hu.dwim.asdf hu.dwim.def+hu.dwim.common
   hu.dwim.defclass-star+hu.dwim.def hu.dwim.sdl hu.dwim.syntax-sugar)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.sdl.git" "stable")))
 (:ql-project hu.dwim.sdl :system-file hu.dwim.sdl :system-name hu.dwim.sdl/gfx
  :dependencies (alexandria cffi cffi-libffi hu.dwim.sdl) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.sdl.git" "stable")))
 (:ql-project hu.dwim.sdl :system-file hu.dwim.sdl :system-name
  hu.dwim.sdl/image :dependencies (alexandria cffi cffi-libffi hu.dwim.sdl)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.sdl.git" "stable")))
 (:ql-project hu.dwim.sdl :system-file hu.dwim.sdl :system-name hu.dwim.sdl/ttf
  :dependencies (alexandria cffi cffi-libffi hu.dwim.sdl) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.sdl.git" "stable")))
 (:ql-project hu.dwim.serializer :system-file hu.dwim.serializer :system-name
  hu.dwim.serializer :dependencies
  (babel hu.dwim.asdf hu.dwim.common hu.dwim.def hu.dwim.syntax-sugar
   hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.serializer.git"
    "stable")))
 (:ql-project hu.dwim.serializer :system-file hu.dwim.serializer.documentation
  :system-name hu.dwim.serializer.documentation :dependencies
  (hu.dwim.asdf hu.dwim.presentation hu.dwim.serializer.test) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.serializer.git"
    "stable")))
 (:ql-project hu.dwim.serializer :system-file hu.dwim.serializer.test
  :system-name hu.dwim.serializer.test :dependencies
  (hu.dwim.asdf hu.dwim.serializer hu.dwim.stefil+hu.dwim.def+swank) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.serializer.git"
    "stable")))
 (:ql-project hu.dwim.stefil :system-file hu.dwim.stefil :system-name
  hu.dwim.stefil :dependencies (alexandria asdf) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.stefil.git" "stable")))
 (:ql-project hu.dwim.stefil :system-file hu.dwim.stefil+hu.dwim.def
  :system-name hu.dwim.stefil+hu.dwim.def :dependencies
  (asdf hu.dwim.asdf hu.dwim.def hu.dwim.stefil) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.stefil.git" "stable")))
 (:ql-project hu.dwim.stefil :system-file hu.dwim.stefil+hu.dwim.def+swank
  :system-name hu.dwim.stefil+hu.dwim.def+swank :dependencies
  (asdf hu.dwim.asdf hu.dwim.def+swank hu.dwim.stefil+hu.dwim.def
   hu.dwim.stefil+swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.stefil.git" "stable")))
 (:ql-project hu.dwim.stefil :system-file hu.dwim.stefil+swank :system-name
  hu.dwim.stefil+swank :dependencies (asdf hu.dwim.asdf hu.dwim.stefil swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.stefil.git" "stable")))
 (:ql-project hu.dwim.stefil :system-file hu.dwim.stefil :system-name
  hu.dwim.stefil/test :dependencies (hu.dwim.stefil) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.stefil.git" "stable")))
 (:ql-project hu.dwim.syntax-sugar :system-file hu.dwim.syntax-sugar
  :system-name hu.dwim.syntax-sugar :dependencies
  (asdf hu.dwim.asdf hu.dwim.common) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.syntax-sugar.git"
    "stable")))
 (:ql-project hu.dwim.syntax-sugar :system-file
  hu.dwim.syntax-sugar.documentation :system-name
  hu.dwim.syntax-sugar.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.presentation hu.dwim.syntax-sugar.test) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.syntax-sugar.git"
    "stable")))
 (:ql-project hu.dwim.syntax-sugar :system-file hu.dwim.syntax-sugar.test
  :system-name hu.dwim.syntax-sugar.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.stefil+hu.dwim.def+swank hu.dwim.syntax-sugar
   hu.dwim.walker)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.syntax-sugar.git"
    "stable")))
 (:ql-project hu.dwim.syntax-sugar :system-file hu.dwim.syntax-sugar
  :system-name hu.dwim.syntax-sugar/lambda-with-bang-args :dependencies
  (hu.dwim.asdf hu.dwim.syntax-sugar hu.dwim.walker) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.syntax-sugar.git"
    "stable")))
 (:ql-project hu.dwim.syntax-sugar :system-file hu.dwim.syntax-sugar
  :system-name hu.dwim.syntax-sugar/unicode :dependencies
  (hu.dwim.asdf hu.dwim.syntax-sugar) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.syntax-sugar.git"
    "stable")))
 (:ql-project hu.dwim.uri :system-file hu.dwim.uri :system-name hu.dwim.uri
  :dependencies (asdf babel cl-ppcre hu.dwim.asdf hu.dwim.util iolib) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.uri.git" "stable")))
 (:ql-project hu.dwim.uri :system-file hu.dwim.uri.test :system-name
  hu.dwim.uri.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.stefil+hu.dwim.def+swank hu.dwim.uri hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.uri.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name hu.dwim.util
  :dependencies
  (asdf hu.dwim.asdf hu.dwim.def+hu.dwim.common
   hu.dwim.defclass-star+hu.dwim.def hu.dwim.syntax-sugar)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util+iolib :system-name
  hu.dwim.util+iolib :dependencies (asdf hu.dwim.asdf hu.dwim.util iolib)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util.documentation :system-name
  hu.dwim.util.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.presentation hu.dwim.stefil+hu.dwim.def+swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util.test :system-name
  hu.dwim.util.test :dependencies
  (asdf babel babel-streams bordeaux-threads cl-l10n cl-ppcre closer-mop
   command-line-arguments cxml drakma hu.dwim.asdf hu.dwim.def
   hu.dwim.def+hu.dwim.common hu.dwim.defclass-star+hu.dwim.def hu.dwim.delico
   hu.dwim.logger hu.dwim.perec.postgresql hu.dwim.quasi-quote.xml
   hu.dwim.stefil+hu.dwim.def+swank hu.dwim.syntax-sugar hu.dwim.util
   hu.dwim.util+iolib hu.dwim.web-server.application iolib swank uiop)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/authorization :dependencies
  (hu.dwim.asdf hu.dwim.defclass-star+hu.dwim.def hu.dwim.logger
   hu.dwim.partial-eval hu.dwim.util hu.dwim.walker)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/command-line :dependencies
  (command-line-arguments hu.dwim.asdf hu.dwim.util uiop) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/error-handling :dependencies
  (hu.dwim.asdf hu.dwim.defclass-star+hu.dwim.def hu.dwim.util) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/error-handling+swank :dependencies
  (hu.dwim.asdf hu.dwim.defclass-star+hu.dwim.def hu.dwim.util swank) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/finite-state-machine :dependencies
  (hu.dwim.asdf hu.dwim.def hu.dwim.defclass-star+hu.dwim.def hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/flexml :dependencies
  (cl-ppcre cxml hu.dwim.asdf hu.dwim.def hu.dwim.defclass-star+hu.dwim.def
   hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/i18n :dependencies (cl-l10n hu.dwim.asdf hu.dwim.util) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/linear-mapping :dependencies
  (bordeaux-threads hu.dwim.asdf hu.dwim.util) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/mop :dependencies (closer-mop hu.dwim.asdf hu.dwim.util) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/production :dependencies
  (command-line-arguments hu.dwim.asdf hu.dwim.defclass-star+hu.dwim.def
   hu.dwim.logger hu.dwim.perec.postgresql hu.dwim.util hu.dwim.util+iolib
   hu.dwim.web-server.application iolib swank uiop)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/soap :dependencies
  (babel babel-streams cl-ppcre cxml drakma hu.dwim.asdf hu.dwim.def
   hu.dwim.defclass-star+hu.dwim.def hu.dwim.logger hu.dwim.quasi-quote.xml
   hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/source :dependencies
  (hu.dwim.asdf hu.dwim.def+hu.dwim.common hu.dwim.syntax-sugar hu.dwim.util
   swank)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/standard-process :dependencies
  (hu.dwim.asdf hu.dwim.def hu.dwim.defclass-star+hu.dwim.def hu.dwim.delico
   hu.dwim.logger hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/temporary-files :dependencies
  (hu.dwim.asdf hu.dwim.util+iolib iolib) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/threads :dependencies
  (bordeaux-threads hu.dwim.asdf hu.dwim.def hu.dwim.util) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.util :system-file hu.dwim.util :system-name
  hu.dwim.util/worker-group :dependencies
  (bordeaux-threads hu.dwim.asdf hu.dwim.defclass-star+hu.dwim.def
   hu.dwim.logger hu.dwim.util)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.util.git" "stable")))
 (:ql-project hu.dwim.walker :system-file hu.dwim.walker :system-name
  hu.dwim.walker :dependencies
  (alexandria anaphora asdf closer-mop contextl hu.dwim.asdf
   hu.dwim.def+contextl hu.dwim.defclass-star+hu.dwim.def hu.dwim.util
   metabang-bind)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.walker.git" "stable")))
 (:ql-project hu.dwim.walker :system-file hu.dwim.walker :system-name
  hu.dwim.walker/documentation :dependencies
  (hu.dwim.asdf hu.dwim.presentation hu.dwim.stefil+hu.dwim.def
   hu.dwim.stefil+swank hu.dwim.util hu.dwim.walker)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.walker.git" "stable")))
 (:ql-project hu.dwim.walker :system-file hu.dwim.walker :system-name
  hu.dwim.walker/test :dependencies
  (hu.dwim.asdf hu.dwim.stefil+hu.dwim.def hu.dwim.stefil+swank hu.dwim.util
   hu.dwim.walker)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.walker.git" "stable")))
 (:ql-project hu.dwim.web-server :system-file hu.dwim.web-server :system-name
  hu.dwim.web-server :dependencies
  (asdf babel babel-streams bordeaux-threads cffi cl+ssl hu.dwim.asdf
   hu.dwim.common hu.dwim.computed-class hu.dwim.def hu.dwim.def+cl-l10n
   hu.dwim.def+contextl hu.dwim.def+hu.dwim.delico hu.dwim.logger+iolib
   hu.dwim.quasi-quote.xml+hu.dwim.quasi-quote.js hu.dwim.syntax-sugar
   hu.dwim.uri hu.dwim.util hu.dwim.zlib iolib local-time parse-number rfc2109
   rfc2388-binary swank)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.web-server/")))
 (:ql-project hu.dwim.web-server :system-file hu.dwim.web-server+swank
  :system-name hu.dwim.web-server+swank :dependencies
  (asdf hu.dwim.asdf hu.dwim.def+swank hu.dwim.web-server) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.web-server/")))
 (:ql-project hu.dwim.web-server :system-file hu.dwim.web-server.application
  :system-name hu.dwim.web-server.application :dependencies
  (asdf hu.dwim.asdf hu.dwim.web-server) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.web-server/")))
 (:ql-project hu.dwim.web-server :system-file
  hu.dwim.web-server.application+hu.dwim.perec :system-name
  hu.dwim.web-server.application+hu.dwim.perec :dependencies
  (asdf hu.dwim.asdf hu.dwim.perec hu.dwim.web-server.application) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.web-server/")))
 (:ql-project hu.dwim.web-server :system-file
  hu.dwim.web-server.application.test :system-name
  hu.dwim.web-server.application.test :dependencies
  (asdf hu.dwim.asdf hu.dwim.web-server.application hu.dwim.web-server.test)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.web-server/")))
 (:ql-project hu.dwim.web-server :system-file hu.dwim.web-server.documentation
  :system-name hu.dwim.web-server.documentation :dependencies
  (asdf hu.dwim.asdf hu.dwim.presentation hu.dwim.web-server.test) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.web-server/")))
 (:ql-project hu.dwim.web-server :system-file hu.dwim.web-server.test
  :system-name hu.dwim.web-server.test :dependencies
  (asdf drakma hu.dwim.asdf hu.dwim.computed-class+hu.dwim.logger
   hu.dwim.stefil+hu.dwim.def+swank hu.dwim.web-server
   hu.dwim.web-server+swank)
  :source (("darcs" "http://dwim.hu/live/hu.dwim.web-server/")))
 (:ql-project hu.dwim.web-server :system-file hu.dwim.web-server.websocket
  :system-name hu.dwim.web-server.websocket :dependencies
  (asdf cl-base64 hu.dwim.asdf hu.dwim.web-server ironclad) :source
  (("darcs" "http://dwim.hu/live/hu.dwim.web-server/")))
 (:ql-project hu.dwim.zlib :system-file hu.dwim.zlib :system-name hu.dwim.zlib
  :dependencies (alexandria asdf cffi cffi-libffi hu.dwim.asdf) :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.zlib.git" "stable")))
 (:ql-project hu.dwim.zlib :system-file hu.dwim.zlib :system-name
  hu.dwim.zlib/fancy :dependencies
  (hu.dwim.asdf hu.dwim.def+hu.dwim.common hu.dwim.syntax-sugar hu.dwim.zlib)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.zlib.git" "stable")))
 (:ql-project hu.dwim.zlib :system-file hu.dwim.zlib :system-name
  hu.dwim.zlib/test :dependencies (hu.dwim.asdf hu.dwim.stefil hu.dwim.zlib)
  :source
  (("tagged-git" "https://github.com/hu-dwim/hu.dwim.zlib.git" "stable")))
 (:ql-project huffman :system-file huffman :system-name huffman :dependencies
  (asdf) :source (("git" "https://github.com/massung/huffman.git")))
 (:ql-project humbler :system-file humbler :system-name humbler :dependencies
  (asdf cl-ppcre closer-mop local-time north-core trivial-mimes yason) :source
  (("git" "https://github.com/Shinmera/humbler.git")))
 (:ql-project hunchenissr :system-file issr :system-name issr :dependencies
  (alexandria asdf bordeaux-threads cl-base64 do-urlencode hunchentoot jonathan
   plump portal str trivia trivial-garbage yxorp)
  :source (("git" "https://github.com/interactive-ssr/hunchenissr.git")))
 (:ql-project hunchensocket :system-file hunchensocket :system-name
  hunchensocket :dependencies
  (alexandria asdf bordeaux-threads chunga cl-base64 cl-fad flexi-streams
   hunchentoot sha1 trivial-backtrace trivial-utf-8)
  :source (("git" "https://github.com/joaotavora/hunchensocket.git")))
 (:ql-project hunchensocket :system-file hunchensocket :system-name
  hunchensocket-tests :dependencies (fiasco hunchensocket) :source
  (("git" "https://github.com/joaotavora/hunchensocket.git")))
 (:ql-project hunchentools :system-file hunchentools :system-name hunchentools
  :dependencies (alexandria cl-ppcre hunchentoot ironclad) :source
  (("git" "https://github.com/michaeljforster/hunchentools.git")))
 (:ql-project hunchentoot :system-file hunchentoot :system-name hunchentoot
  :dependencies
  (alexandria asdf bordeaux-threads chunga cl+ssl cl-base64 cl-fad cl-ppcre
   flexi-streams md5 rfc2388 trivial-backtrace usocket)
  :source
  (("latest-github-release" "https://github.com/edicl/hunchentoot.git") nil
   nil))
 (:ql-project hunchentoot :system-file hunchentoot :system-name hunchentoot-dev
  :dependencies (cxml-stp hunchentoot hunchentoot-test swank xpath) :source
  (("latest-github-release" "https://github.com/edicl/hunchentoot.git") nil
   nil))
 (:ql-project hunchentoot :system-file hunchentoot :system-name
  hunchentoot-test :dependencies (cl-ppcre cl-who drakma hunchentoot) :source
  (("latest-github-release" "https://github.com/edicl/hunchentoot.git") nil
   nil))
 (:ql-project hunchentoot-auth :system-file hunchentoot-auth :system-name
  hunchentoot-auth :dependencies (bordeaux-threads cl-store cl-who hunchentoot)
  :source (("git" "https://github.com/slyrus/hunchentoot-auth.git")))
 (:ql-project hunchentoot-cgi :system-file hunchentoot-cgi :system-name
  hunchentoot-cgi :dependencies (hunchentoot puri) :source
  (("git" "https://github.com/slyrus/hunchentoot-cgi.git")))
 (:ql-project hunchentoot-errors :system-file hunchentoot-errors :system-name
  hunchentoot-errors :dependencies
  (asdf cl-mimeparse hunchentoot parse-number string-case) :source
  (("git" "https://github.com/mmontone/hunchentoot-errors.git")))
 (:ql-project hunchentoot-multi-acceptor :system-file
  hunchentoot-multi-acceptor :system-name hunchentoot-multi-acceptor
  :dependencies (alexandria asdf hunchentoot str usocket) :source
  (("git"
    "https://github.com/moderninterpreters/hunchentoot-multi-acceptor.git")))
 (:ql-project hunchentoot-single-signon :system-file hunchentoot-single-signon
  :system-name hunchentoot-single-signon :dependencies
  (cl-base64 cl-gss hunchentoot split-sequence) :source
  (("git" "https://github.com/lokedhs/hunchentoot-single-signon.git")))
 (:ql-project hyperlattices :system-file hyperlattices :system-name
  hyperlattices :dependencies
  (alexandria asdf closer-mop serapeum trivial-types) :source
  (("git" "https://github.com/thephoeron/hyperlattices.git")))
 (:ql-project hyperlattices :system-file hyperlattices :system-name
  hyperlattices/test :dependencies (hyperlattices parachute) :source
  (("git" "https://github.com/thephoeron/hyperlattices.git")))
 (:ql-project hyperluminal-mem :system-file hyperluminal-mem :system-name
  hyperluminal-mem :dependencies
  (asdf cffi osicat stmx swap-bytes trivial-features) :source
  (("git" "https://github.com/cosmos72/hyperluminal-mem.git")))
 (:ql-project hyperluminal-mem :system-file hyperluminal-mem-test :system-name
  hyperluminal-mem-test :dependencies (asdf fiveam hyperluminal-mem log4cl)
  :source (("git" "https://github.com/cosmos72/hyperluminal-mem.git")))
 (:ql-project hyperobject :system-file hyperobject :system-name hyperobject
  :dependencies (asdf clsql kmrcl) :source (("kmr-git" "hyperobject")))
 (:ql-project hyperobject :system-file hyperobject :system-name
  hyperobject/test :dependencies (hyperobject rt) :source
  (("kmr-git" "hyperobject")))
 (:ql-project hyperspec :system-file hyperspec :system-name hyperspec
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/fisxoj/hyperspec.git")))
 (:ql-project ia-hash-table :system-file ia-hash-table :system-name
  ia-hash-table :dependencies (alexandria split-sequence) :source
  (("git" "https://github.com/deadtrickster/ia-hash-table.git")))
 (:ql-project ia-hash-table :system-file ia-hash-table.test :system-name
  ia-hash-table.test :dependencies
  (cl-interpol ia-hash-table log4cl mw-equiv prove prove-asdf) :source
  (("git" "https://github.com/deadtrickster/ia-hash-table.git")))
 (:ql-project iclendar :system-file iclendar :system-name iclendar
  :dependencies
  (asdf cl-base64 closer-mop documentation-utils trivial-gray-streams) :source
  (("git" "https://github.com/Shinmera/iclendar.git")))
 (:ql-project id3v2 :system-file id3v2 :system-name id3v2 :dependencies
  (babel trivial-gray-streams) :source
  (("git" "https://github.com/fukamachi/id3v2.git")))
 (:ql-project id3v2 :system-file id3v2-test :system-name id3v2-test
  :dependencies (flexi-streams id3v2 prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/id3v2.git")))
 (:ql-project identifier-pool :system-file identifier-pool :system-name
  identifier-pool :dependencies (asdf dynamic-array mfiano-utils) :source
  (("git" "https://github.com/mfiano/identifier-pool.git")))
 (:ql-project idna :system-file idna :system-name idna :dependencies
  (split-sequence) :source (("git" "https://github.com/antifuchs/idna")))
 (:ql-project ieee-floats :system-file ieee-floats :system-name ieee-floats
  :dependencies (asdf) :source
  (("git" "https://github.com/marijnh/ieee-floats.git")))
 (:ql-project ieee-floats :system-file ieee-floats :system-name
  ieee-floats/tests :dependencies (fiveam ieee-floats) :source
  (("git" "https://github.com/marijnh/ieee-floats.git")))
 (:ql-project illogical-pathnames :system-file illogical-pathnames :system-name
  illogical-pathnames :dependencies nil :source
  (("git" "https://github.com/stylewarning/illogical-pathnames.git")))
 (:ql-project illusion :system-file illusion :system-name illusion
  :dependencies (alexandria asdf let-over-lambda named-readtables) :source
  (("git" "https://github.com/ailisp/illusion.git")))
 (:ql-project illusion :system-file illusion-test :system-name illusion-test
  :dependencies (asdf fiveam illusion split-sequence) :source
  (("git" "https://github.com/ailisp/illusion.git")))
 (:ql-project image :system-file image :system-name image :dependencies
  (flexi-streams gzip-stream skippy zpng) :source
  (("git" "https://github.com/kevinlynx/image.git")))
 (:ql-project imago :system-file imago :system-name imago :dependencies
  (alexandria array-operations asdf cl-jpeg flexi-streams serapeum
   trivial-gray-streams zlib)
  :source (("git" "https://github.com/tokenrove/imago.git")))
 (:ql-project imago :system-file imago :system-name imago/bit-io :dependencies
  (alexandria serapeum trivial-gray-streams) :source
  (("git" "https://github.com/tokenrove/imago.git")))
 (:ql-project imago :system-file imago :system-name imago/jpeg-turbo
  :dependencies (imago jpeg-turbo) :source
  (("git" "https://github.com/tokenrove/imago.git")))
 (:ql-project imago :system-file imago :system-name imago/jupyter :dependencies
  (cl-base64 common-lisp-jupyter flexi-streams imago pngload zpng) :source
  (("git" "https://github.com/tokenrove/imago.git")))
 (:ql-project imago :system-file imago :system-name imago/pngio :dependencies
  (imago pngload zpng) :source
  (("git" "https://github.com/tokenrove/imago.git")))
 (:ql-project imago :system-file imago :system-name imago/pngload :dependencies
  (imago pngload zpng) :source
  (("git" "https://github.com/tokenrove/imago.git")))
 (:ql-project imago :system-file imago :system-name imago/tests :dependencies
  (fiveam imago) :source (("git" "https://github.com/tokenrove/imago.git")))
 (:ql-project immutable-struct :system-file immutable-struct :system-name
  immutable-struct :dependencies (alexandria closer-mop trivia) :source
  (("git" "https://github.com/guicho271828/immutable-struct.git")))
 (:ql-project in-nomine :system-file in-nomine :system-name in-nomine
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/phoe/in-nomine.git")))
 (:ql-project in-nomine :system-file in-nomine :system-name in-nomine/test
  :dependencies
  (alexandria closer-mop fiveam in-nomine introspect-environment lisp-namespace
   uiop)
  :source (("git" "https://github.com/phoe/in-nomine.git")))
 (:ql-project incf-cl :system-file incf-cl :system-name incf-cl :dependencies
  (asdf cl-ppcre) :source (("git" "https://git.sr.ht/~jmbr/incf-cl")))
 (:ql-project incf-cl :system-file incf-cl :system-name incf-cl/tests
  :dependencies (fiasco incf-cl uiop) :source
  (("git" "https://git.sr.ht/~jmbr/incf-cl")))
 (:ql-project incognito-keywords :system-file incognito-keywords :system-name
  incognito-keywords :dependencies (enhanced-eval-when map-bind) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/incognito-keywords_latest.tar.gz")))
 (:ql-project incongruent-methods :system-file incongruent-methods :system-name
  incongruent-methods :dependencies (closer-mop) :source
  (("git" "https://github.com/pve1/incongruent-methods.git")))
 (:ql-project inferior-shell :system-file inferior-shell :system-name
  inferior-shell :dependencies
  (alexandria asdf fare-mop fare-quasiquote-extras fare-utils trivia
   trivia.quasiquote)
  :source (("git" "https://gitlab.common-lisp.net/qitab/inferior-shell.git")))
 (:ql-project inferior-shell :system-file inferior-shell :system-name
  inferior-shell/test :dependencies (hu.dwim.stefil inferior-shell) :source
  (("git" "https://gitlab.common-lisp.net/qitab/inferior-shell.git")))
 (:ql-project infix-dollar-reader :system-file infix-dollar-reader :system-name
  infix-dollar-reader :dependencies (cl-syntax) :source
  (("git" "https://github.com/ichimal/infix-dollar-reader.git")))
 (:ql-project infix-dollar-reader :system-file infix-dollar-reader-test
  :system-name infix-dollar-reader-test :dependencies (infix-dollar-reader rt)
  :source (("git" "https://github.com/ichimal/infix-dollar-reader.git")))
 (:ql-project infix-math :system-file infix-math :system-name infix-math
  :dependencies
  (alexandria asdf asdf-package-system parse-number serapeum wu-decimal)
  :source (("git" "https://github.com/ruricolist/infix-math.git")))
 (:ql-project infix-reader :system-file infix-reader :system-name infix-reader
  :dependencies (asdf) :source
  (("git" "https://github.com/timeolord/infix-reader.git")))
 (:ql-project inheriting-readers :system-file inheriting-readers :system-name
  inheriting-readers :dependencies
  (asdf class-options closer-mop compatible-metaclasses) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/inheriting-readers_latest.tar.gz")))
 (:ql-project inheriting-readers :system-file inheriting-readers_tests
  :system-name inheriting-readers_tests :dependencies
  (asdf compatible-metaclasses inheriting-readers parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/inheriting-readers_latest.tar.gz")))
 (:ql-project injection :system-file injection :system-name injection
  :dependencies (cl-yaml) :source
  (("git" "https://github.com/ahungry/injection.git")))
 (:ql-project injection :system-file injection-test :system-name injection-test
  :dependencies (fiveam injection) :source
  (("git" "https://github.com/ahungry/injection.git")))
 (:ql-project inkwell :system-file inkwell :system-name inkwell :dependencies
  (alexandria asdf documentation-utils drakma local-time yason) :source
  (("git" "https://github.com/Shinmera/inkwell.git")))
 (:ql-project inlined-generic-function :system-file inlined-generic-function
  :system-name inlined-generic-function :dependencies
  (alexandria asdf closer-mop introspect-environment iterate trivia) :source
  (("git" "https://github.com/guicho271828/inlined-generic-function.git")))
 (:ql-project inlined-generic-function :system-file
  inlined-generic-function.test :system-name inlined-generic-function.test
  :dependencies (asdf fiveam inlined-generic-function) :source
  (("git" "https://github.com/guicho271828/inlined-generic-function.git")))
 (:ql-project inner-conditional :system-file inner-conditional :system-name
  inner-conditional :dependencies
  (alexandria asdf cl-syntax-annot iterate trivia) :source
  (("git" "https://github.com/guicho271828/inner-conditional.git")))
 (:ql-project inner-conditional :system-file inner-conditional-test
  :system-name inner-conditional-test :dependencies
  (asdf cl-test-more inner-conditional) :source
  (("git" "https://github.com/guicho271828/inner-conditional.git")))
 (:ql-project inotify :system-file inotify :system-name inotify :dependencies
  (cffi cffi-grovel iolib) :source
  (("git" "https://github.com/stassats/inotify.git")))
 (:ql-project input-event-codes :system-file input-event-codes :system-name
  input-event-codes :dependencies (asdf trivial-features) :source
  (("git" "https://git.sr.ht/~shunter/input-event-codes")))
 (:ql-project input-event-codes :system-file input-event-codes :system-name
  input-event-codes/test :dependencies (input-event-codes parachute) :source
  (("git" "https://git.sr.ht/~shunter/input-event-codes")))
 (:ql-project inquisitor :system-file inquisitor :system-name inquisitor
  :dependencies (alexandria anaphora asdf) :source
  (("git" "https://github.com/t-sin/inquisitor.git")))
 (:ql-project inquisitor :system-file inquisitor-flexi :system-name
  inquisitor-flexi :dependencies (asdf flexi-streams inquisitor) :source
  (("git" "https://github.com/t-sin/inquisitor.git")))
 (:ql-project inquisitor :system-file inquisitor-flexi-test :system-name
  inquisitor-flexi-test :dependencies (asdf inquisitor-flexi prove prove-asdf)
  :source (("git" "https://github.com/t-sin/inquisitor.git")))
 (:ql-project inquisitor :system-file inquisitor-test :system-name
  inquisitor-test :dependencies
  (asdf babel flexi-streams inquisitor prove prove-asdf) :source
  (("git" "https://github.com/t-sin/inquisitor.git")))
 (:ql-project instance-tracking :system-file instance-tracking :system-name
  instance-tracking :dependencies (asdf bordeaux-threads) :source
  (("git" "https://github.com/plkrueger/instance-tracking.git")))
 (:ql-project integral :system-file integral :system-name integral
  :dependencies
  (alexandria asdf cl-ppcre cl-syntax-annot clos-fixtures closer-mop dbi
   group-by iterate split-sequence sxql trivial-types)
  :source (("git" "https://github.com/fukamachi/integral.git")))
 (:ql-project integral :system-file integral-test :system-name integral-test
  :dependencies (asdf integral local-time prove prove-asdf split-sequence uiop)
  :source (("git" "https://github.com/fukamachi/integral.git")))
 (:ql-project integral-rest :system-file integral-rest :system-name
  integral-rest :dependencies
  (alexandria cl-inflector closer-mop integral jonathan map-set ningle) :source
  (("git" "https://github.com/Rudolph-Miller/integral-rest.git")))
 (:ql-project integral-rest :system-file integral-rest-test :system-name
  integral-rest-test :dependencies (integral integral-rest prove prove-asdf)
  :source (("git" "https://github.com/Rudolph-Miller/integral-rest.git")))
 (:ql-project intel-hex :system-file intel-hex :system-name intel-hex
  :dependencies nil :source
  (("git" "https://github.com/takagi/intel-hex.git")))
 (:ql-project intel-hex :system-file intel-hex-test :system-name intel-hex-test
  :dependencies (intel-hex prove prove-asdf) :source
  (("git" "https://github.com/takagi/intel-hex.git")))
 (:ql-project intercom :system-file intercom :system-name intercom
  :dependencies (alexandria bordeaux-threads hunchentoot jsown split-sequence)
  :source (("git" "https://github.com/madnificent/intercom.git")))
 (:ql-project intercom :system-file intercom-examples :system-name
  intercom-examples :dependencies (intercom jsown) :source
  (("git" "https://github.com/madnificent/intercom.git")))
 (:ql-project interface :system-file interface :system-name interface
  :dependencies (alexandria asdf global-vars) :source
  (("git" "https://github.com/stylewarning/interface.git")))
 (:ql-project introspect-environment :system-file introspect-environment
  :system-name introspect-environment :dependencies (asdf) :source
  (("git" "https://github.com/Bike/introspect-environment.git")))
 (:ql-project introspect-environment :system-file introspect-environment-test
  :system-name introspect-environment-test :dependencies
  (asdf fiveam introspect-environment) :source
  (("git" "https://github.com/Bike/introspect-environment.git")))
 (:ql-project iolib :system-file iolib :system-name iolib :dependencies
  (asdf babel bordeaux-threads cffi cffi-grovel idna iolib.asdf iolib.base
   iolib.conf swap-bytes trivial-features)
  :source (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib.asdf :system-name iolib.asdf
  :dependencies (alexandria asdf) :source
  (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib.base :system-name iolib.base
  :dependencies
  (alexandria asdf iolib.asdf iolib.common-lisp iolib.conf split-sequence)
  :source (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib.common-lisp :system-name
  iolib.common-lisp :dependencies (alexandria asdf iolib.asdf iolib.conf)
  :source (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib.conf :system-name iolib.conf
  :dependencies (asdf iolib.asdf) :source
  (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib.examples :system-name iolib.examples
  :dependencies (asdf bordeaux-threads iolib iolib.asdf iolib.base iolib.conf)
  :source (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib :system-name iolib/multiplex
  :dependencies
  (cffi cffi-grovel iolib.asdf iolib.base iolib.conf trivial-features) :source
  (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib :system-name iolib/os :dependencies
  (cffi cffi-grovel iolib.asdf iolib.base iolib.conf trivial-features) :source
  (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib :system-name iolib/pathnames
  :dependencies
  (cffi cffi-grovel iolib.asdf iolib.base iolib.conf trivial-features) :source
  (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib :system-name iolib/sockets :dependencies
  (babel bordeaux-threads cffi cffi-grovel idna iolib.asdf iolib.base
   iolib.conf swap-bytes trivial-features)
  :source (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib :system-name iolib/streams :dependencies
  (cffi cffi-grovel iolib.asdf iolib.base iolib.conf trivial-features) :source
  (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib :system-name iolib/syscalls
  :dependencies
  (cffi cffi-grovel iolib.asdf iolib.base iolib.conf trivial-features) :source
  (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib :system-name iolib/tests :dependencies
  (cffi cffi-grovel fiveam iolib iolib.asdf iolib.base iolib.conf
   trivial-features)
  :source (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib :system-name iolib/trivial-sockets
  :dependencies
  (babel bordeaux-threads cffi cffi-grovel idna iolib.asdf iolib.base
   iolib.conf swap-bytes trivial-features)
  :source (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project iolib :system-file iolib :system-name iolib/zstreams
  :dependencies
  (bordeaux-threads cffi cffi-grovel iolib.asdf iolib.base iolib.conf
   trivial-features)
  :source (("latest-github-release" "https://github.com/sionescu/iolib.git")))
 (:ql-project ip-interfaces :system-file ip-interfaces :system-name
  ip-interfaces :dependencies (asdf cffi) :source
  (("https"
    "https://common-lisp.net/project/ip-interfaces/releases/ip-interfaces-latest.tar.gz")))
 (:ql-project ip-interfaces :system-file ip-interfaces-test :system-name
  ip-interfaces-test :dependencies (asdf ip-interfaces prove prove-asdf)
  :source
  (("https"
    "https://common-lisp.net/project/ip-interfaces/releases/ip-interfaces-latest.tar.gz")))
 (:ql-project irc-logger :system-file irc-logger :system-name irc-logger
  :dependencies (cl-irc cl-ppcre) :source (("kmr-git" "irc-logger")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad
  :dependencies (asdf bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad-text :system-name ironclad-text
  :dependencies (asdf flexi-streams ironclad) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/aead/eax
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/aead/etm
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/aead/gcm
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/aeads
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/aes
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/arcfour :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/aria
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/blowfish :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/camellia :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/cast5
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/chacha :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/des
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/idea
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/kalyna :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/keystream :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/kuznyechik :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/misty1 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/rc2
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/rc5
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/rc6
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/salsa20 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/seed
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/serpent :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/sm4
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/sosemanuk :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/square :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/tea
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/threefish :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/twofish :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/xchacha :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/xor
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/cipher/xsalsa20 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/cipher/xtea
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/ciphers
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/core
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/adler32 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/blake2 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/blake2s :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/crc24
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/crc32
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/groestl :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/jh
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/kupyna :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/md2
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/md4
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/md5
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/ripemd-128 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/ripemd-160 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/sha1
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/sha256 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/sha3
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/sha512 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/skein
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/sm3
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/streebog :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digest/tiger
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/tree-hash :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/digest/whirlpool :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/digests
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/kdf/argon2
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/kdf/bcrypt
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/kdf/hmac
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/kdf/password-hash :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/kdf/pkcs5
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/kdf/scrypt
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/kdfs
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/mac/blake2-mac :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/mac/blake2s-mac :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/mac/cmac
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/mac/gmac
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/mac/hmac
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/mac/poly1305
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/mac/siphash
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/mac/skein-mac :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/macs
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/prng/fortuna
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/prngs
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/curve25519 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/curve448 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/dsa :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/ed25519 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/ed448 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/elgamal :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/rsa :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/secp256k1 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/secp256r1 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/secp384r1 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name
  ironclad/public-key/secp521r1 :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/public-keys
  :dependencies (bordeaux-threads) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project ironclad :system-file ironclad :system-name ironclad/tests
  :dependencies (ironclad rt) :source
  (("latest-github-tag" "https://github.com/sharplispers/ironclad.git")))
 (:ql-project iso-8601-date :system-file eclecticse.iso-8601-date :system-name
  eclecticse.iso-8601-date :dependencies (asdf local-time) :source
  (("git" "https://gitlab.com/DataLinkDroid/iso-8601-date.git")))
 (:ql-project iterate :system-file iterate :system-name iterate :dependencies
  (asdf) :source
  (("branched-git" "https://gitlab.common-lisp.net/iterate/iterate.git"
    "release")
   nil))
 (:ql-project iterate :system-file iterate :system-name iterate/tests
  :dependencies (iterate) :source
  (("branched-git" "https://gitlab.common-lisp.net/iterate/iterate.git"
    "release")
   nil))
 (:ql-project iterate-clsql :system-file iterate-clsql :system-name
  iterate-clsql :dependencies (clsql iterate) :source
  (("https"
    "https://common-lisp.net/project/iterate-clsql/releases/iterate-clsql-0.2.tar.gz")))
 (:ql-project jenkins :system-file jenkins.api :system-name jenkins.api
  :dependencies
  (alexandria cl-json cl-ppcre closer-mop drakma iterate let-plus
   more-conditions puri split-sequence xml.location)
  :source (("git" "https://github.com/scymtym/jenkins.git")))
 (:ql-project jingoh :system-file jingoh :system-name jingoh :dependencies
  (asdf jingoh.examiner jingoh.org jingoh.reader jingoh.tester
   named-readtables)
  :source (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.documentizer :system-name
  jingoh.documentizer :dependencies
  (3bmd 3bmd-ext-code-blocks asdf cl-ppcre eclector read-as-string uiop)
  :source (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.documentizer.test :system-name
  jingoh.documentizer.test :dependencies (asdf jingoh jingoh.documentizer)
  :source (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.examiner :system-name jingoh.examiner
  :dependencies
  (asdf cl-ansi-text jingoh.documentizer jingoh.org jingoh.tester) :source
  (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.examiner.test :system-name
  jingoh.examiner.test :dependencies (asdf cl-ansi-text jingoh jingoh.examiner)
  :source (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.generator :system-name
  jingoh.generator :dependencies
  (alexandria asdf cl-unification closer-mop jingoh.documentizer lambda-fiddle
   millet named-readtables prompt-for trivial-cltl2 uiop)
  :source (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.generator.test :system-name
  jingoh.generator.test :dependencies (asdf jingoh jingoh.generator) :source
  (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.org :system-name jingoh.org
  :dependencies (alexandria asdf check-bnf jingoh.documentizer) :source
  (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.org.test :system-name jingoh.org.test
  :dependencies (asdf jingoh jingoh.org) :source
  (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.parallel :system-name jingoh.parallel
  :dependencies (asdf bordeaux-threads cl-cpus jingoh lparallel) :source
  (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.parallel.test :system-name
  jingoh.parallel.test :dependencies (asdf jingoh jingoh.parallel) :source
  (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.reader :system-name jingoh.reader
  :dependencies
  (asdf eclector jingoh.documentizer jingoh.tester named-readtables uiop)
  :source (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.reader.test :system-name
  jingoh.reader.test :dependencies (asdf jingoh jingoh.reader) :source
  (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.tester :system-name jingoh.tester
  :dependencies
  (alexandria asdf bordeaux-threads check-bnf cl-ansi-text cl-colors2
   closer-mop fuzzy-match jingoh.documentizer jingoh.org structure-ext uiop
   vivid-colors vivid-diff)
  :source (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh.tester.test :system-name
  jingoh.tester.test :dependencies (asdf jingoh jingoh.tester) :source
  (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jingoh :system-file jingoh :system-name jingoh/test :dependencies
  (jingoh named-readtables) :source
  (("git" "https://github.com/hyotang666/jingoh.git")))
 (:ql-project jonathan :system-file jonathan :system-name jonathan
  :dependencies
  (asdf babel cl-annot cl-ppcre cl-syntax cl-syntax-annot fast-io proc-parse
   trivial-types)
  :source (("git" "https://github.com/Rudolph-Miller/jonathan.git")))
 (:ql-project jonathan :system-file jonathan-test :system-name jonathan-test
  :dependencies (asdf jonathan legion prove prove-asdf) :source
  (("git" "https://github.com/Rudolph-Miller/jonathan.git")))
 (:ql-project jose :system-file jose :system-name jose :dependencies
  (alexandria asdf assoc-utils cl-base64 ironclad jonathan split-sequence
   trivial-utf-8)
  :source (("git" "https://github.com/fukamachi/jose.git")))
 (:ql-project journal :system-file journal :system-name journal :dependencies
  (alexandria asdf bordeaux-threads local-time mgl-pax trivial-features
   trivial-garbage)
  :source (("git" "https://github.com/melisgl/journal.git")))
 (:ql-project journal :system-file journal :system-name journal/test
  :dependencies (alexandria journal try) :source
  (("git" "https://github.com/melisgl/journal.git")))
 (:ql-project jp-numeral :system-file jp-numeral :system-name jp-numeral
  :dependencies (alexandria asdf babel) :source
  (("git" "https://github.com/y2q-actionman/jp-numeral.git")))
 (:ql-project jp-numeral :system-file jp-numeral-test :system-name
  jp-numeral-test :dependencies (1am alexandria asdf jp-numeral) :source
  (("git" "https://github.com/y2q-actionman/jp-numeral.git")))
 (:ql-project jpeg-turbo :system-file jpeg-turbo :system-name jpeg-turbo
  :dependencies (asdf cffi cffi-grovel) :source
  (("git" "https://github.com/shamazmazum/jpeg-turbo.git")))
 (:ql-project jpeg-turbo :system-file jpeg-turbo :system-name jpeg-turbo/tests
  :dependencies (fiveam jpeg-turbo) :source
  (("git" "https://github.com/shamazmazum/jpeg-turbo.git")))
 (:ql-project jpl-queues :system-file jpl-queues :system-name jpl-queues
  :dependencies (bordeaux-threads jpl-util) :source
  (("https"
    "https://www.thoughtcrime.us/software/jpl-queues/jpl-queues-0.1.tar.gz")))
 (:ql-project js :system-file cl-js :system-name cl-js :dependencies
  (asdf cl-ppcre local-time parse-js) :source
  (("git" "https://github.com/akapav/js.git")))
 (:ql-project js-parser :system-file js-parser :system-name js-parser
  :dependencies (cl-ppcre) :source
  (("git" "https://github.com/gonzojive/js-parser")))
 (:ql-project js-parser :system-file js-parser-tests :system-name
  js-parser-tests :dependencies (js-parser) :source
  (("git" "https://github.com/gonzojive/js-parser")))
 (:ql-project json-lib :system-file json-lib :system-name json-lib
  :dependencies (alexandria asdf babel cl-fad parse-float str) :source
  (("git" "https://github.com/KinaKnowledge/json-lib.git")))
 (:ql-project json-mop :system-file json-mop :system-name json-mop
  :dependencies (anaphora asdf closer-mop yason) :source
  (("git" "https://github.com/gschjetne/json-mop.git")))
 (:ql-project json-mop :system-file json-mop-tests :system-name json-mop-tests
  :dependencies (asdf fiveam json-mop) :source
  (("git" "https://github.com/gschjetne/json-mop.git")))
 (:ql-project json-responses :system-file json-responses :system-name
  json-responses :dependencies (asdf cl-json hunchentoot) :source
  (("mercurial" "https://bitbucket.org/bradJM/json-responses")))
 (:ql-project json-responses :system-file json-responses :system-name
  json-responses-test :dependencies (fiveam json-responses) :source
  (("mercurial" "https://bitbucket.org/bradJM/json-responses")))
 (:ql-project json-schema :system-file json-schema :system-name json-schema
  :dependencies
  (alexandria arrows asdf cl-ppcre dexador function-cache local-time
   local-time-duration quri sanity-clause st-json str trivial-types)
  :source (("git" "https://github.com/fisxoj/json-schema.git")))
 (:ql-project json-schema :system-file json-schema :system-name
  json-schema/json-schema-test-suite :dependencies (json-schema rove) :source
  (("git" "https://github.com/fisxoj/json-schema.git")))
 (:ql-project json-schema :system-file json-schema :system-name
  json-schema/test :dependencies nil :source
  (("git" "https://github.com/fisxoj/json-schema.git")))
 (:ql-project json-schema :system-file json-schema :system-name
  json-schema/unit-tests :dependencies (json-schema rove) :source
  (("git" "https://github.com/fisxoj/json-schema.git")))
 (:ql-project json-streams :system-file json-streams :system-name json-streams
  :dependencies nil :source
  (("git" "https://github.com/rotatef/json-streams.git")))
 (:ql-project json-streams :system-file json-streams-tests :system-name
  json-streams-tests :dependencies (cl-quickcheck flexi-streams json-streams)
  :source (("git" "https://github.com/rotatef/json-streams.git")))
 (:ql-project jsonrpc :system-file jsonrpc :system-name jsonrpc :dependencies
  (alexandria asdf bordeaux-threads chanl dissect event-emitter usocket vom
   yason)
  :source (("git" "https://github.com/cxxxr/jsonrpc.git")))
 (:ql-project jsown :system-file jsown :system-name jsown :dependencies (asdf)
  :source (("git" "https://github.com/madnificent/jsown.git")))
 (:ql-project jsown :system-file jsown-tests :system-name jsown-tests
  :dependencies (asdf fiveam jsown) :source
  (("git" "https://github.com/madnificent/jsown.git")))
 (:ql-project jsown-utils :system-file jsown-utils :system-name jsown-utils
  :dependencies (asdf closer-mop jsown) :source
  (("git" "https://github.com/muyinliu/jsown-utils.git")))
 (:ql-project jwacs :system-file jwacs :system-name jwacs :dependencies
  (asdf cl-ppcre) :source
  (("git" "https://github.com/chumsley/jwacs.git") nil))
 (:ql-project jwacs :system-file jwacs-tests :system-name jwacs-tests
  :dependencies (asdf jwacs) :source
  (("git" "https://github.com/chumsley/jwacs.git") nil))
 (:ql-project jzon :system-file com.inuoe.jzon :system-name com.inuoe.jzon
  :dependencies
  (asdf closer-mop flexi-streams float-features trivial-gray-streams uiop)
  :source (("latest-github-release" "https://github.com/Zulu-Inuoe/jzon.git")))
 (:ql-project jzon :system-file com.inuoe.jzon-tests :system-name
  com.inuoe.jzon-tests :dependencies
  (alexandria asdf com.inuoe.jzon fiveam flexi-streams float-features uiop)
  :source (("latest-github-release" "https://github.com/Zulu-Inuoe/jzon.git")))
 (:ql-project kdlcl :system-file kdl :system-name kdl :dependencies
  (asdf esrap parse-number uiop) :source
  (("git" "https://github.com/chee/kdlcl.git")))
 (:ql-project kdlcl :system-file kdl :system-name kdl/t :dependencies (kdl)
  :source (("git" "https://github.com/chee/kdlcl.git")))
 (:ql-project kdtree-jk :system-file kdtree-jk :system-name kdtree-jk
  :dependencies (asdf) :source
  (("git" "https://github.com/jetmonk/kdtree-jk.git")))
 (:ql-project kdtree-jk :system-file kdtree-jk :system-name kdtree-jk/latlon
  :dependencies (kdtree-jk) :source
  (("git" "https://github.com/jetmonk/kdtree-jk.git")))
 (:ql-project kdtree-jk :system-file kdtree-jk :system-name kdtree-jk/tests
  :dependencies (kdtree-jk) :source
  (("git" "https://github.com/jetmonk/kdtree-jk.git")))
 (:ql-project kebab :system-file kebab :system-name kebab :dependencies
  (alexandria cl-interpol cl-ppcre split-sequence) :source
  (("git" "https://github.com/pocket7878/kebab.git")))
 (:ql-project kebab :system-file kebab-test :system-name kebab-test
  :dependencies (kebab prove prove-asdf) :source
  (("git" "https://github.com/pocket7878/kebab.git")))
 (:ql-project kekule-clj :system-file kekule-clj :system-name kekule-clj
  :dependencies (asdf common-lisp-jupyter jupyter-lab-extension) :source
  (("git" "https://github.com/yitzchak/kekule-clj.git")))
 (:ql-project kenzo :system-file kenzo :system-name kenzo :dependencies (asdf)
  :source (("git" "https://github.com/gheber/kenzo.git")))
 (:ql-project kenzo :system-file kenzo-test :system-name kenzo-test
  :dependencies (asdf fiveam kenzo) :source
  (("git" "https://github.com/gheber/kenzo.git")))
 (:ql-project keystone :system-file keystone :system-name keystone
  :dependencies (asdf cffi cffi-grovel gt static-vectors trivial-features)
  :source (("git" "https://github.com/GrammaTech/keystone.git")))
 (:ql-project keystone :system-file keystone :system-name keystone/raw
  :dependencies (cffi cffi-grovel gt static-vectors) :source
  (("git" "https://github.com/GrammaTech/keystone.git")))
 (:ql-project keystone :system-file keystone :system-name keystone/raw-test
  :dependencies (cffi cffi-grovel gt static-vectors stefil) :source
  (("git" "https://github.com/GrammaTech/keystone.git")))
 (:ql-project keystone :system-file keystone :system-name keystone/test
  :dependencies (cffi cffi-grovel gt keystone static-vectors stefil) :source
  (("git" "https://github.com/GrammaTech/keystone.git")))
 (:ql-project khazern :system-file khazern :system-name khazern :dependencies
  (acclimation asdf) :source
  (("git" "https://github.com/s-expressionists/Khazern.git")))
 (:ql-project khazern :system-file khazern-extrinsic :system-name
  khazern-extrinsic :dependencies (asdf khazern) :source
  (("git" "https://github.com/s-expressionists/Khazern.git")))
 (:ql-project khazern :system-file khazern-extrinsic :system-name
  khazern-extrinsic/test :dependencies (khazern-extrinsic parachute) :source
  (("git" "https://github.com/s-expressionists/Khazern.git")))
 (:ql-project khazern :system-file khazern-intrinsic :system-name
  khazern-intrinsic :dependencies (asdf khazern trivial-package-locks) :source
  (("git" "https://github.com/s-expressionists/Khazern.git")))
 (:ql-project khazern :system-file khazern-intrinsic :system-name
  khazern-intrinsic/test :dependencies (alexandria khazern-intrinsic) :source
  (("git" "https://github.com/s-expressionists/Khazern.git")))
 (:ql-project khazern :system-file khazern-sequence :system-name
  khazern-sequence :dependencies (asdf khazern trivial-extensible-sequences)
  :source (("git" "https://github.com/s-expressionists/Khazern.git")))
 (:ql-project khazern :system-file khazern-sequence-extrinsic :system-name
  khazern-sequence-extrinsic :dependencies
  (asdf khazern-extrinsic khazern-sequence) :source
  (("git" "https://github.com/s-expressionists/Khazern.git")))
 (:ql-project khazern :system-file khazern-sequence-extrinsic :system-name
  khazern-sequence-extrinsic/test :dependencies
  (khazern-sequence-extrinsic parachute) :source
  (("git" "https://github.com/s-expressionists/Khazern.git")))
 (:ql-project khazern :system-file khazern-sequence-intrinsic :system-name
  khazern-sequence-intrinsic :dependencies
  (asdf khazern-intrinsic khazern-sequence) :source
  (("git" "https://github.com/s-expressionists/Khazern.git")))
 (:ql-project kl-verify :system-file kl-verify :system-name kl-verify
  :dependencies (image) :source
  (("git" "https://github.com/kevinlynx/kl-verify.git")))
 (:ql-project km :system-file km :system-name km :dependencies nil :source
  (("https" "https://www.cs.utexas.edu/users/mfkb/km/km-latest.tgz")))
 (:ql-project kmrcl :system-file kmrcl :system-name kmrcl :dependencies (asdf)
  :source (("kmr-git" "kmrcl")))
 (:ql-project kmrcl :system-file kmrcl :system-name kmrcl/test :dependencies
  (kmrcl rt) :source (("kmr-git" "kmrcl")))
 (:ql-project l-math :system-file l-math :system-name l-math :dependencies
  (asdf) :source (("git" "https://github.com/TheRiver/L-MATH.git")))
 (:ql-project l-system :system-file l-system :system-name l-system
  :dependencies (asdf iterate) :source
  (("git" "https://github.com/ebrasca/l-system.git")))
 (:ql-project l-system :system-file l-system-examples :system-name
  l-system-examples :dependencies (asdf l-system) :source
  (("git" "https://github.com/ebrasca/l-system.git")))
 (:ql-project laap :system-file laap :system-name laap :dependencies
  (bordeaux-threads cffi cl-base32 cl-ppcre uiop) :source
  (("git" "https://gitlab.com/ralt/laap.git")))
 (:ql-project lack :system-file lack :system-name lack :dependencies
  (asdf lack-component lack-util) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-app-directory :system-name
  lack-app-directory :dependencies
  (asdf cl-ppcre lack-app-file quri trivial-mimes trivial-rfc-1123) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-app-file :system-name lack-app-file
  :dependencies (alexandria asdf lack-component trivial-mimes trivial-rfc-1123)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-component :system-name lack-component
  :dependencies (asdf) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-middleware-accesslog :system-name
  lack-middleware-accesslog :dependencies (asdf lack-util local-time) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-middleware-auth-basic :system-name
  lack-middleware-auth-basic :dependencies (asdf cl-base64 split-sequence)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-middleware-backtrace :system-name
  lack-middleware-backtrace :dependencies (asdf uiop) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-middleware-csrf :system-name
  lack-middleware-csrf :dependencies (asdf lack-request lack-util) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-middleware-mount :system-name
  lack-middleware-mount :dependencies (asdf lack-component) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-middleware-session :system-name
  lack-middleware-session :dependencies
  (asdf bordeaux-threads cl-ppcre lack-request lack-response lack-util) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-middleware-static :system-name
  lack-middleware-static :dependencies
  (alexandria asdf lack-app-file lack-component) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-request :system-name lack-request
  :dependencies (asdf circular-streams cl-ppcre http-body quri) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-response :system-name lack-response
  :dependencies (asdf local-time quri) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-session-store-dbi :system-name
  lack-session-store-dbi :dependencies
  (asdf cl-base64 dbi lack-middleware-session marshal trivial-utf-8) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-session-store-redis :system-name
  lack-session-store-redis :dependencies
  (asdf cl-base64 cl-redis lack-middleware-session marshal trivial-utf-8)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-test :system-name lack-test :dependencies
  (asdf cl-cookie flexi-streams lack quri) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-util :system-name lack-util :dependencies
  (asdf cl-isaac) :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file lack-util-writer-stream :system-name
  lack-util-writer-stream :dependencies (asdf babel trivial-gray-streams)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack :system-name t-lack :dependencies
  (asdf clack lack prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-component :system-name t-lack-component
  :dependencies (asdf lack-component lack-test prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-middleware-accesslog :system-name
  t-lack-middleware-accesslog :dependencies
  (asdf lack lack-test prove prove-asdf split-sequence) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-middleware-auth-basic :system-name
  t-lack-middleware-auth-basic :dependencies
  (alexandria asdf cl-base64 lack lack-middleware-auth-basic lack-test prove
   prove-asdf)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-middleware-backtrace :system-name
  t-lack-middleware-backtrace :dependencies
  (alexandria asdf lack lack-test prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-middleware-csrf :system-name
  t-lack-middleware-csrf :dependencies
  (asdf cl-ppcre lack lack-middleware-csrf lack-request lack-test prove
   prove-asdf)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-middleware-mount :system-name
  t-lack-middleware-mount :dependencies
  (asdf lack lack-component lack-middleware-mount lack-test prove prove-asdf)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-middleware-session :system-name
  t-lack-middleware-session :dependencies
  (asdf cl-cookie lack lack-middleware-session lack-test prove prove-asdf)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-middleware-static :system-name
  t-lack-middleware-static :dependencies
  (alexandria asdf lack lack-test prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-request :system-name t-lack-request
  :dependencies
  (alexandria asdf clack-test dexador flexi-streams hunchentoot lack-request
   prove prove-asdf)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-session-store-dbi :system-name
  t-lack-session-store-dbi :dependencies
  (asdf dbi lack lack-session-store-dbi lack-test prove prove-asdf sqlite)
  :source (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-session-store-redis :system-name
  t-lack-session-store-redis :dependencies
  (asdf lack lack-session-store-redis lack-test prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lack :system-file t-lack-util :system-name t-lack-util
  :dependencies (asdf lack-test lack-util prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/lack.git")))
 (:ql-project lake :system-file lake :system-name lake :dependencies
  (alexandria asdf cl-ppcre cl-syntax cl-syntax-interpol split-sequence)
  :source (("git" "https://github.com/takagi/lake.git")))
 (:ql-project lake :system-file lake-cli :system-name lake-cli :dependencies
  (asdf deploy lake) :source (("git" "https://github.com/takagi/lake.git")))
 (:ql-project lake :system-file lake-test :system-name lake-test :dependencies
  (asdf lake prove prove-asdf) :source
  (("git" "https://github.com/takagi/lake.git")))
 (:ql-project lambda-fiddle :system-file lambda-fiddle :system-name
  lambda-fiddle :dependencies (asdf) :source
  (("git" "https://github.com/Shinmera/lambda-fiddle.git")))
 (:ql-project lambda-reader :system-file lambda-reader :system-name
  lambda-reader :dependencies (named-readtables) :source
  (("git" "https://gitlab.common-lisp.net/frideau/lambda-reader.git")))
 (:ql-project lambda-reader :system-file lambda-reader-8bit :system-name
  lambda-reader-8bit :dependencies (asdf asdf-encodings named-readtables)
  :source (("git" "https://gitlab.common-lisp.net/frideau/lambda-reader.git")))
 (:ql-project lambdalite :system-file lambdalite :system-name lambdalite
  :dependencies (bordeaux-threads wu-sugar) :source
  (("git" "https://github.com/Wukix/LambdaLite.git")))
 (:ql-project language-codes :system-file language-codes :system-name
  language-codes :dependencies (asdf documentation-utils) :source
  (("git" "https://github.com/Shinmera/language-codes.git")))
 (:ql-project lass :system-file binary-lass :system-name binary-lass
  :dependencies (asdf lass) :source
  (("git" "https://github.com/Shinmera/LASS.git")))
 (:ql-project lass :system-file lass :system-name lass :dependencies
  (asdf cl-base64 trivial-indent trivial-mimes) :source
  (("git" "https://github.com/Shinmera/LASS.git")))
 (:ql-project lass-flexbox :system-file lass-flexbox :system-name lass-flexbox
  :dependencies (lass) :source
  (("git" "https://github.com/eudoxia0/lass-flexbox.git")))
 (:ql-project lass-flexbox :system-file lass-flexbox-test :system-name
  lass-flexbox-test :dependencies (fiveam lass-flexbox) :source
  (("git" "https://github.com/eudoxia0/lass-flexbox.git")))
 (:ql-project lassie :system-file lassie :system-name lassie :dependencies
  (fsvd) :source (("git" "https://github.com/melisgl/lassie.git")))
 (:ql-project lastfm :system-file lastfm :system-name lastfm :dependencies
  (alexandria asdf defmemo drakma generators ironclad lquery plump
   trivial-open-browser)
  :source (("git" "https://github.com/mihaiolteanu/lastfm.git")))
 (:ql-project latex-table :system-file latex-table :system-name latex-table
  :dependencies (alexandria anaphora array-operations asdf let-plus) :source
  (("git" "https://github.com/tpapp/latex-table.git")))
 (:ql-project latter-day-paypal :system-file latter-day-paypal :system-name
  latter-day-paypal :dependencies
  (asdf cl-base64 cl-tls closer-mop dexador do-urlencode hunchentoot ironclad
   jonathan local-time ningle quri str)
  :source (("git" "https://github.com/K1D77A/latter-day-paypal.git")))
 (:ql-project lazy :system-file lazy :system-name lazy :dependencies (asdf)
  :source (("git" "https://github.com/massung/lazy.git")))
 (:ql-project legion :system-file legion :system-name legion :dependencies
  (asdf bordeaux-threads cl-speedy-queue vom) :source
  (("git" "https://github.com/fukamachi/legion.git")))
 (:ql-project legion :system-file legion-test :system-name legion-test
  :dependencies (asdf legion local-time prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/legion.git")))
 (:ql-project legit :system-file legit :system-name legit :dependencies
  (asdf cl-ppcre documentation-utils lambda-fiddle simple-inferiors uiop)
  :source (("git" "https://github.com/Shinmera/legit.git")))
 (:ql-project lemmy-api :system-file lemmy-api :system-name lemmy-api
  :dependencies (asdf closer-mop dexador) :source
  (("git" "https://git.sr.ht/~yana/lemmy-api")))
 (:ql-project lemmy-api :system-file lemmy-api :system-name lemmy-api/0.18.3
  :dependencies (closer-mop dexador) :source
  (("git" "https://git.sr.ht/~yana/lemmy-api")))
 (:ql-project lemmy-api :system-file lemmy-api :system-name lemmy-api/base
  :dependencies (closer-mop dexador) :source
  (("git" "https://git.sr.ht/~yana/lemmy-api")))
 (:ql-project lense :system-file lense :system-name lense :dependencies
  (alexandria asdf closer-mop documentation-utils-extensions) :source
  (("git" "https://github.com/sirherrbatka/lense.git")))
 (:ql-project let-over-lambda :system-file let-over-lambda :system-name
  let-over-lambda :dependencies
  (alexandria asdf cl-ppcre fare-quasiquote-extras named-readtables) :source
  (("git" "https://github.com/thephoeron/let-over-lambda.git")))
 (:ql-project let-over-lambda :system-file let-over-lambda-test :system-name
  let-over-lambda-test :dependencies
  (asdf let-over-lambda named-readtables prove prove-asdf) :source
  (("git" "https://github.com/thephoeron/let-over-lambda.git")))
 (:ql-project let-plus :system-file let-plus :system-name let-plus
  :dependencies (alexandria anaphora asdf) :source
  (("git" "https://github.com/sharplispers/let-plus.git")))
 (:ql-project let-plus :system-file let-plus :system-name let-plus/tests
  :dependencies (let-plus lift) :source
  (("git" "https://github.com/sharplispers/let-plus.git")))
 (:ql-project letrec :system-file letrec :system-name letrec :dependencies
  (alexandria asdf) :source
  (("git" "https://github.com/stylewarning/letrec.git")))
 (:ql-project letv :system-file letv :system-name letv :dependencies (asdf)
  :source (("git" "https://gitlab.common-lisp.net/mantoniotti/letv.git")))
 (:ql-project lev :system-file lev :system-name lev :dependencies
  (asdf cffi lev-config) :source
  (("git" "https://github.com/fukamachi/lev.git")))
 (:ql-project lev :system-file lev-config :system-name lev-config :dependencies
  (asdf cffi-grovel) :source (("git" "https://github.com/fukamachi/lev.git")))
 (:ql-project leveldb :system-file leveldb :system-name leveldb :dependencies
  (babel cffi cffi-grovel trivial-garbage) :source
  (("git" "https://github.com/death/leveldb.git")))
 (:ql-project levenshtein :system-file levenshtein :system-name levenshtein
  :dependencies nil :source
  (("http" "http://abstractnonsense.com/levenshtein-1.0.tgz")))
 (:ql-project lfarm :system-file lfarm-admin :system-name lfarm-admin
  :dependencies (lfarm-common usocket) :source
  (("git" "https://github.com/lmj/lfarm.git")))
 (:ql-project lfarm :system-file lfarm-client :system-name lfarm-client
  :dependencies (lfarm-common lparallel usocket) :source
  (("git" "https://github.com/lmj/lfarm.git")))
 (:ql-project lfarm :system-file lfarm-common :system-name lfarm-common
  :dependencies (alexandria bordeaux-threads cl-store flexi-streams usocket)
  :source (("git" "https://github.com/lmj/lfarm.git")))
 (:ql-project lfarm :system-file lfarm-gss :system-name lfarm-gss :dependencies
  (cl-gss lfarm-common trivial-gray-streams) :source
  (("git" "https://github.com/lmj/lfarm.git")))
 (:ql-project lfarm :system-file lfarm-launcher :system-name lfarm-launcher
  :dependencies (external-program lfarm-admin lfarm-server) :source
  (("git" "https://github.com/lmj/lfarm.git")))
 (:ql-project lfarm :system-file lfarm-server :system-name lfarm-server
  :dependencies (lfarm-common usocket) :source
  (("git" "https://github.com/lmj/lfarm.git")))
 (:ql-project lfarm :system-file lfarm-ssl :system-name lfarm-ssl :dependencies
  (cl+ssl lfarm-common) :source (("git" "https://github.com/lmj/lfarm.git")))
 (:ql-project lfarm :system-file lfarm-test :system-name lfarm-test
  :dependencies (lfarm-admin lfarm-client lfarm-launcher lfarm-server) :source
  (("git" "https://github.com/lmj/lfarm.git")))
 (:ql-project lhstats :system-file lhstats :system-name lhstats :dependencies
  nil :source (("git" "https://github.com/mrc/lhstats.git") nil))
 (:ql-project liblmdb :system-file liblmdb :system-name liblmdb :dependencies
  (cffi) :source (("git" "https://github.com/antimer/liblmdb.git")))
 (:ql-project lichat-ldap :system-file lichat-ldap :system-name lichat-ldap
  :dependencies (asdf documentation-utils lichat-serverlib trivial-ldap)
  :source (("git" "https://github.com/Shirakumo/lichat-ldap.git")))
 (:ql-project lichat-protocol :system-file lichat-protocol :system-name
  lichat-protocol :dependencies
  (asdf closer-mop documentation-utils trivial-package-local-nicknames) :source
  (("git" "https://github.com/Shirakumo/lichat-protocol.git")))
 (:ql-project lichat-serverlib :system-file lichat-serverlib :system-name
  lichat-serverlib :dependencies
  (asdf crypto-shortcuts documentation-utils lichat-protocol trivial-mimes)
  :source (("git" "https://github.com/Shirakumo/lichat-serverlib.git")))
 (:ql-project lichat-tcp-client :system-file lichat-tcp-client :system-name
  lichat-tcp-client :dependencies
  (asdf bordeaux-threads cl-base64 documentation-utils lichat-protocol
   trivial-mimes usocket verbose)
  :source (("git" "https://github.com/Shirakumo/lichat-tcp-client.git")))
 (:ql-project lichat-tcp-server :system-file lichat-tcp-server :system-name
  lichat-tcp-server :dependencies
  (asdf bordeaux-threads documentation-utils lichat-protocol lichat-serverlib
   usocket verbose)
  :source (("git" "https://github.com/Shirakumo/lichat-tcp-server.git")))
 (:ql-project lichat-ws-server :system-file lichat-ws-server :system-name
  lichat-ws-server :dependencies
  (asdf bordeaux-threads documentation-utils hunchensocket lichat-protocol
   lichat-serverlib verbose)
  :source (("git" "https://github.com/Shirakumo/lichat-ws-server.git")))
 (:ql-project lift :system-file lift :system-name lift :dependencies (asdf)
  :source (("git" "https://github.com/gwkkwg/lift")))
 (:ql-project lift :system-file lift-documentation :system-name
  lift-documentation :dependencies (asdf lift) :source
  (("git" "https://github.com/gwkkwg/lift")))
 (:ql-project lift :system-file lift-test :system-name lift-test :dependencies
  (asdf lift) :source (("git" "https://github.com/gwkkwg/lift")))
 (:ql-project lila :system-file lila :system-name lila :dependencies (asdf)
  :source (("git" "https://github.com/codr7/lila.git")))
 (:ql-project lime :system-file lime :system-name lime :dependencies
  (alexandria asdf swank-protocol trivial-types) :source
  (("git" "https://github.com/eudoxia0/lime.git")))
 (:ql-project lime :system-file lime-example :system-name lime-example
  :dependencies (asdf bordeaux-threads lime) :source
  (("git" "https://github.com/eudoxia0/lime.git")))
 (:ql-project lime :system-file lime-test :system-name lime-test :dependencies
  (alexandria asdf external-program fiveam lime) :source
  (("git" "https://github.com/eudoxia0/lime.git")))
 (:ql-project linear-programming :system-file linear-programming :system-name
  linear-programming :dependencies (alexandria asdf iterate) :source
  (("git" "https://github.com/neil-lindquist/linear-programming.git")))
 (:ql-project linear-programming :system-file linear-programming-test
  :system-name linear-programming-test :dependencies
  (asdf fiveam iterate linear-programming) :source
  (("git" "https://github.com/neil-lindquist/linear-programming.git")))
 (:ql-project linear-programming-glpk :system-file linear-programming-glpk
  :system-name linear-programming-glpk :dependencies
  (asdf cffi linear-programming) :source
  (("git" "https://github.com/neil-lindquist/linear-programming-glpk.git")))
 (:ql-project linear-programming-glpk :system-file linear-programming-glpk
  :system-name linear-programming-glpk/test :dependencies
  (fiveam linear-programming-glpk) :source
  (("git" "https://github.com/neil-lindquist/linear-programming-glpk.git")))
 (:ql-project linedit :system-file linedit :system-name linedit :dependencies
  (alexandria asdf cffi osicat terminfo) :source
  (("git" "https://github.com/sharplispers/linedit.git")))
 (:ql-project lineva :system-file lineva :system-name lineva :dependencies
  (asdf) :source (("git" "https://github.com/dzangfan/lineva.git")))
 (:ql-project lineva :system-file lineva :system-name lineva/test :dependencies
  (fiveam lineva) :source (("git" "https://github.com/dzangfan/lineva.git")))
 (:ql-project linewise-template :system-file linewise-template :system-name
  linewise-template :dependencies (asdf cl-fad cl-ppcre) :source
  (("git" "https://github.com/agrostis/linewise-template.git")))
 (:ql-project linux-packaging :system-file linux-packaging :system-name
  linux-packaging :dependencies
  (asdf cffi cffi-grovel cffi-toolchain cl-ppcre wild-package-inferred-system)
  :source (("git" "https://gitlab.com/ralt/linux-packaging.git")))
 (:ql-project linux-packaging :system-file linux-packaging-tests :system-name
  linux-packaging-tests :dependencies
  (asdf linux-packaging osicat sqlite wild-package-inferred-system) :source
  (("git" "https://gitlab.com/ralt/linux-packaging.git")))
 (:ql-project linux-packaging :system-file linux-packaging-tests :system-name
  linux-packaging-tests/deb :dependencies
  (linux-packaging linux-packaging-tests) :source
  (("git" "https://gitlab.com/ralt/linux-packaging.git")))
 (:ql-project linux-packaging :system-file linux-packaging-tests :system-name
  linux-packaging-tests/pacman :dependencies
  (linux-packaging linux-packaging-tests) :source
  (("git" "https://gitlab.com/ralt/linux-packaging.git")))
 (:ql-project linux-packaging :system-file linux-packaging-tests :system-name
  linux-packaging-tests/rpm :dependencies
  (linux-packaging linux-packaging-tests) :source
  (("git" "https://gitlab.com/ralt/linux-packaging.git")))
 (:ql-project lisa :system-file lisa :system-name lisa :dependencies nil
  :source (("git" "https://github.com/johanlindberg/lisa.git")))
 (:ql-project lisp-binary :system-file lisp-binary :system-name lisp-binary
  :dependencies
  (alexandria asdf cffi closer-mop flexi-streams moptilities quasiquote-2.0)
  :source
  (("git" "https://github.com/heegaiximephoomeeghahyaiseekh/lisp-binary.git")))
 (:ql-project lisp-binary :system-file lisp-binary-test :system-name
  lisp-binary-test :dependencies (asdf lisp-binary) :source
  (("git" "https://github.com/heegaiximephoomeeghahyaiseekh/lisp-binary.git")))
 (:ql-project lisp-chat :system-file lisp-chat :system-name lisp-chat
  :dependencies (asdf bordeaux-threads cl-readline usocket) :source
  (("git" "https://github.com/ryukinix/lisp-chat.git")))
 (:ql-project lisp-chat :system-file lisp-chat :system-name lisp-chat/client
  :dependencies (bordeaux-threads cl-readline usocket) :source
  (("git" "https://github.com/ryukinix/lisp-chat.git")))
 (:ql-project lisp-chat :system-file lisp-chat :system-name lisp-chat/server
  :dependencies (bordeaux-threads usocket) :source
  (("git" "https://github.com/ryukinix/lisp-chat.git")))
 (:ql-project lisp-critic :system-file ckr-tables :system-name ckr-tables
  :dependencies (asdf) :source
  (("git" "https://github.com/g000001/lisp-critic.git")))
 (:ql-project lisp-critic :system-file lisp-critic :system-name lisp-critic
  :dependencies (asdf ckr-tables) :source
  (("git" "https://github.com/g000001/lisp-critic.git")))
 (:ql-project lisp-executable :system-file lisp-executable :system-name
  lisp-executable :dependencies (alexandria asdf) :source
  (("git" "https://github.com/markcox80/lisp-executable.git")))
 (:ql-project lisp-executable :system-file lisp-executable-example :system-name
  lisp-executable-example :dependencies (asdf lisp-executable) :source
  (("git" "https://github.com/markcox80/lisp-executable.git")))
 (:ql-project lisp-executable :system-file lisp-executable-tests :system-name
  lisp-executable-tests :dependencies (asdf lisp-executable lisp-unit) :source
  (("git" "https://github.com/markcox80/lisp-executable.git")))
 (:ql-project lisp-gflags :system-file com.google.flag :system-name
  com.google.flag :dependencies (asdf com.google.base) :source
  (("git" "https://github.com/brown/lisp-gflags.git")))
 (:ql-project lisp-gflags :system-file com.google.flag :system-name
  com.google.flag/test :dependencies (com.google.flag hu.dwim.stefil) :source
  (("git" "https://github.com/brown/lisp-gflags.git")))
 (:ql-project lisp-interface-library :system-file lil :system-name lil
  :dependencies (alexandria asdf closer-mop fare-memoization fare-utils)
  :source (("git" "https://github.com/fare/lisp-interface-library.git")))
 (:ql-project lisp-interface-library :system-file lil :system-name lil/test
  :dependencies nil :source
  (("git" "https://github.com/fare/lisp-interface-library.git")))
 (:ql-project lisp-interface-library :system-file lisp-interface-library
  :system-name lisp-interface-library :dependencies (asdf lil) :source
  (("git" "https://github.com/fare/lisp-interface-library.git")))
 (:ql-project lisp-invocation :system-file lisp-invocation :system-name
  lisp-invocation :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/qitab/lisp-invocation.git")))
 (:ql-project lisp-invocation :system-file lisp-invocation :system-name
  lisp-invocation/all :dependencies (lisp-invocation) :source
  (("git" "https://gitlab.common-lisp.net/qitab/lisp-invocation.git")))
 (:ql-project lisp-namespace :system-file lisp-namespace :system-name
  lisp-namespace :dependencies (alexandria asdf) :source
  (("git" "https://github.com/guicho271828/lisp-namespace.git")))
 (:ql-project lisp-namespace :system-file lisp-namespace.test :system-name
  lisp-namespace.test :dependencies (asdf fiveam lisp-namespace uiop) :source
  (("git" "https://github.com/guicho271828/lisp-namespace.git")))
 (:ql-project lisp-pay :system-file lisp-pay :system-name lisp-pay
  :dependencies
  (alexandria asdf babel cl-base64 cl-tls closer-mop dexador
   hu.dwim.defclass-star hunchentoot ironclad jonathan lack ningle shasht str)
  :source (("git" "https://github.com/K1D77A/lisp-pay.git")))
 (:ql-project lisp-preprocessor :system-file lisp-preprocessor :system-name
  lisp-preprocessor :dependencies
  (alexandria asdf cl-ppcre split-sequence trivia trivial-gray-streams) :source
  (("git" "https://github.com/cxxxr/lisp-preprocessor.git")))
 (:ql-project lisp-preprocessor :system-file lisp-preprocessor :system-name
  lisp-preprocessor-tests :dependencies (lisp-preprocessor rove) :source
  (("git" "https://github.com/cxxxr/lisp-preprocessor.git")))
 (:ql-project lisp-stat :system-file lisp-stat :system-name lisp-stat
  :dependencies
  (alexandria alexandria+ array-operations asdf data-frame dexador dfio
   distributions num-utils org.tfeb.conduit-packages select statistics)
  :source (("git" "https://github.com/Lisp-Stat/lisp-stat.git")))
 (:ql-project lisp-unit :system-file lisp-unit :system-name lisp-unit
  :dependencies nil :source
  (("git" "https://github.com/OdonataResearchLLC/lisp-unit.git") nil))
 (:ql-project lisp-unit2 :system-file lisp-unit2 :system-name lisp-unit2
  :dependencies (alexandria asdf cl-interpol iterate symbol-munger) :source
  (("git" "https://github.com/AccelerationNet/lisp-unit2.git")))
 (:ql-project lisp-unit2 :system-file lisp-unit2 :system-name lisp-unit2/tests
  :dependencies (lisp-unit2) :source
  (("git" "https://github.com/AccelerationNet/lisp-unit2.git")))
 (:ql-project lisp-zmq :system-file zmq :system-name zmq :dependencies
  (asdf bordeaux-threads cffi cffi-grovel trivial-features) :source
  (("git" "https://github.com/galdor/lisp-zmq.git")))
 (:ql-project lisp-zmq :system-file zmq-examples :system-name zmq-examples
  :dependencies (asdf bordeaux-threads zmq) :source
  (("git" "https://github.com/galdor/lisp-zmq.git")))
 (:ql-project lisp-zmq :system-file zmq-test :system-name zmq-test
  :dependencies (asdf bordeaux-threads fiveam zmq) :source
  (("git" "https://github.com/galdor/lisp-zmq.git")))
 (:ql-project lispbuilder :system-file cocoahelper :system-name cocoahelper
  :dependencies (asdf cffi lispbuilder-sdl-binaries) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-lexer :system-name
  lispbuilder-lexer :dependencies (asdf lispbuilder-regex) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-net :system-name
  lispbuilder-net :dependencies (asdf cffi lispbuilder-net-cffi) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-net-cffi :system-name
  lispbuilder-net-cffi :dependencies (asdf cffi) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-opengl-1-1 :system-name
  lispbuilder-opengl-1-1 :dependencies (asdf cffi) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-opengl-examples :system-name
  lispbuilder-opengl-examples :dependencies
  (asdf cffi lispbuilder-opengl-1-1 lispbuilder-sdl) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-regex :system-name
  lispbuilder-regex :dependencies (asdf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl :system-name
  lispbuilder-sdl :dependencies
  (asdf cffi lispbuilder-sdl-assets lispbuilder-sdl-base trivial-garbage)
  :source (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-assets :system-name
  lispbuilder-sdl-assets :dependencies (asdf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-base :system-name
  lispbuilder-sdl-base :dependencies (asdf cffi lispbuilder-sdl-cffi) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-binaries :system-name
  lispbuilder-sdl-binaries :dependencies (asdf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-cffi :system-name
  lispbuilder-sdl-cffi :dependencies (asdf cffi lispbuilder-sdl-binaries)
  :source (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-cl-vectors :system-name
  lispbuilder-sdl-cl-vectors :dependencies
  (asdf cl-aa-misc cl-paths-ttf cl-vectors lispbuilder-sdl zpb-ttf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-cl-vectors-examples
  :system-name lispbuilder-sdl-cl-vectors-examples :dependencies
  (asdf lispbuilder-sdl-cl-vectors) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-examples :system-name
  lispbuilder-sdl-examples :dependencies (asdf lispbuilder-sdl) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-gfx :system-name
  lispbuilder-sdl-gfx :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-gfx-cffi) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-gfx-binaries
  :system-name lispbuilder-sdl-gfx-binaries :dependencies (asdf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-gfx-cffi :system-name
  lispbuilder-sdl-gfx-cffi :dependencies (asdf cffi lispbuilder-sdl) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-gfx-examples
  :system-name lispbuilder-sdl-gfx-examples :dependencies
  (asdf lispbuilder-sdl-gfx) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-image :system-name
  lispbuilder-sdl-image :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-image-cffi) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-image-binaries
  :system-name lispbuilder-sdl-image-binaries :dependencies (asdf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-image-cffi :system-name
  lispbuilder-sdl-image-cffi :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-image-binaries) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-image-examples
  :system-name lispbuilder-sdl-image-examples :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-image) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-mixer :system-name
  lispbuilder-sdl-mixer :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-mixer-cffi) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-mixer-binaries
  :system-name lispbuilder-sdl-mixer-binaries :dependencies (asdf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-mixer-cffi :system-name
  lispbuilder-sdl-mixer-cffi :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-mixer-binaries) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-mixer-examples
  :system-name lispbuilder-sdl-mixer-examples :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-mixer) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-ttf :system-name
  lispbuilder-sdl-ttf :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-ttf-cffi) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-ttf-binaries
  :system-name lispbuilder-sdl-ttf-binaries :dependencies (asdf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-ttf-cffi :system-name
  lispbuilder-sdl-ttf-cffi :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-ttf-binaries) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-ttf-examples
  :system-name lispbuilder-sdl-ttf-examples :dependencies
  (asdf cffi lispbuilder-sdl lispbuilder-sdl-ttf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-vecto :system-name
  lispbuilder-sdl-vecto :dependencies
  (asdf lispbuilder-sdl lispbuilder-sdl-cl-vectors vecto) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-sdl-vecto-examples
  :system-name lispbuilder-sdl-vecto-examples :dependencies
  (asdf lispbuilder-sdl-vecto) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-windows :system-name
  lispbuilder-windows :dependencies (asdf cffi) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispbuilder :system-file lispbuilder-yacc :system-name
  lispbuilder-yacc :dependencies (asdf) :source
  (("git" "https://github.com/lispbuilder/lispbuilder.git") nil nil))
 (:ql-project lispcord :system-file example-bot :system-name example-bot
  :dependencies (asdf lispcord) :source
  (("git" "https://github.com/lispcord/lispcord.git")))
 (:ql-project lispcord :system-file lispcord :system-name lispcord
  :dependencies
  (alexandria asdf babel bordeaux-threads drakma jonathan split-sequence
   verbose websocket-driver-client)
  :source (("git" "https://github.com/lispcord/lispcord.git")))
 (:ql-project lispqr :system-file lispqr :system-name lispqr :dependencies
  (asdf zpng) :source (("git" "https://github.com/mare5x/LispQR.git")))
 (:ql-project list-named-class :system-file list-named-class :system-name
  list-named-class :dependencies (alexandria asdf closer-mop) :source
  (("git" "https://github.com/phoe/list-named-class.git")))
 (:ql-project list-named-class :system-file list-named-class :system-name
  list-named-class/protest :dependencies (list-named-class protest) :source
  (("git" "https://github.com/phoe/list-named-class.git")))
 (:ql-project list-named-class :system-file list-named-class :system-name
  list-named-class/test :dependencies (1am list-named-class) :source
  (("git" "https://github.com/phoe/list-named-class.git")))
 (:ql-project listoflist :system-file listoflist :system-name listoflist
  :dependencies (clunit xarray) :source
  (("git" "https://github.com/blindglobe/listoflist.git")))
 (:ql-project listopia :system-file listopia :system-name listopia
  :dependencies (asdf) :source
  (("git" "https://github.com/Dimercel/listopia.git")))
 (:ql-project listopia :system-file listopia-bench :system-name listopia-bench
  :dependencies (asdf listopia prove prove-asdf trivial-benchmark) :source
  (("git" "https://github.com/Dimercel/listopia.git")))
 (:ql-project listopia :system-file listopia :system-name listopia/tests
  :dependencies (listopia rove) :source
  (("git" "https://github.com/Dimercel/listopia.git")))
 (:ql-project literate-lisp :system-file literate-demo :system-name
  literate-demo :dependencies (asdf iterate literate-lisp) :source
  (("git" "https://github.com/jingtaozf/literate-lisp.git")))
 (:ql-project literate-lisp :system-file literate-lisp :system-name
  literate-lisp :dependencies (asdf cl-fad cl-ppcre iterate) :source
  (("git" "https://github.com/jingtaozf/literate-lisp.git")))
 (:ql-project litterae :system-file litterae :system-name litterae
  :dependencies (3bmd 3bmd-ext-code-blocks asdf cl-yaml docparser lsx str)
  :source (("git" "https://github.com/stefandevai/litterae.git")))
 (:ql-project litterae :system-file litterae-test-system :system-name
  litterae-test-system :dependencies (asdf) :source
  (("git" "https://github.com/stefandevai/litterae.git")))
 (:ql-project litterae :system-file litterae :system-name litterae/tests
  :dependencies (litterae litterae-test-system rove) :source
  (("git" "https://github.com/stefandevai/litterae.git")))
 (:ql-project livesupport :system-file livesupport :system-name livesupport
  :dependencies (asdf) :source
  (("branched-git" "https://github.com/cbaggers/livesupport.git"
    "release-quicklisp")))
 (:ql-project lla :system-file lla :system-name lla :dependencies
  (alexandria anaphora asdf cffi let-plus num-utils select) :source
  (("git" "https://github.com/Lisp-Stat/lla.git")))
 (:ql-project lla :system-file lla :system-name lla/tests :dependencies
  (clunit2 lla select) :source
  (("git" "https://github.com/Lisp-Stat/lla.git")))
 (:ql-project lmdb :system-file lmdb :system-name lmdb :dependencies
  (alexandria asdf bordeaux-threads cl-reexport mgl-pax osicat trivial-features
   trivial-garbage trivial-utf-8)
  :source (("git" "https://github.com/antimer/lmdb.git")))
 (:ql-project lmdb :system-file lmdb :system-name lmdb/test :dependencies
  (lmdb try) :source (("git" "https://github.com/antimer/lmdb.git")))
 (:ql-project lml :system-file lml :system-name lml :dependencies nil :source
  (("kmr-git" "lml")))
 (:ql-project lml :system-file lml-tests :system-name lml-tests :dependencies
  (lml rt) :source (("kmr-git" "lml")))
 (:ql-project lml2 :system-file lml2 :system-name lml2 :dependencies (kmrcl)
  :source (("kmr-git" "lml2")))
 (:ql-project lml2 :system-file lml2-tests :system-name lml2-tests
  :dependencies (lml2 rt) :source (("kmr-git" "lml2")))
 (:ql-project local-package-aliases :system-file local-package-aliases
  :system-name local-package-aliases :dependencies (asdf) :source
  (("git" "https://github.com/avodonosov/local-package-aliases.git")))
 (:ql-project local-time :system-file cl-postgres+local-time :system-name
  cl-postgres+local-time :dependencies (asdf cl-postgres local-time) :source
  (("git" "https://github.com/dlowe-net/local-time.git")))
 (:ql-project local-time :system-file local-time :system-name local-time
  :dependencies (asdf uiop) :source
  (("git" "https://github.com/dlowe-net/local-time.git")))
 (:ql-project local-time :system-file local-time :system-name local-time/test
  :dependencies (hu.dwim.stefil local-time) :source
  (("git" "https://github.com/dlowe-net/local-time.git")))
 (:ql-project local-time-duration :system-file cl-postgres+local-time-duration
  :system-name cl-postgres+local-time-duration :dependencies
  (asdf cl-postgres local-time-duration) :source
  (("git" "https://github.com/enaeher/local-time-duration.git")))
 (:ql-project local-time-duration :system-file local-time-duration :system-name
  local-time-duration :dependencies (alexandria asdf esrap local-time) :source
  (("git" "https://github.com/enaeher/local-time-duration.git")))
 (:ql-project log4cl :system-file log4cl :system-name log4cl :dependencies
  (asdf bordeaux-threads) :source
  (("git" "https://github.com/sharplispers/log4cl.git")
   ("git" "https://github.com/7max/log4cl.git")))
 (:ql-project log4cl :system-file log4cl-examples :system-name log4cl-examples
  :dependencies (asdf log4cl swank) :source
  (("git" "https://github.com/sharplispers/log4cl.git")
   ("git" "https://github.com/7max/log4cl.git")))
 (:ql-project log4cl :system-file log4cl.log4slime :system-name
  log4cl.log4slime :dependencies (asdf log4cl swank) :source
  (("git" "https://github.com/sharplispers/log4cl.git")
   ("git" "https://github.com/7max/log4cl.git")))
 (:ql-project log4cl :system-file log4cl.log4sly :system-name log4cl.log4sly
  :dependencies (asdf log4cl slynk) :source
  (("git" "https://github.com/sharplispers/log4cl.git")
   ("git" "https://github.com/7max/log4cl.git")))
 (:ql-project log4cl :system-file log4cl :system-name log4cl/syslog
  :dependencies (log4cl) :source
  (("git" "https://github.com/sharplispers/log4cl.git")
   ("git" "https://github.com/7max/log4cl.git")))
 (:ql-project log4cl :system-file log4cl :system-name log4cl/test :dependencies
  (log4cl stefil) :source
  (("git" "https://github.com/sharplispers/log4cl.git")
   ("git" "https://github.com/7max/log4cl.git")))
 (:ql-project log4cl-extras :system-file log4cl-extras :system-name
  log4cl-extras :dependencies
  (40ants-asdf-system 40ants-doc alexandria asdf cl-strings dissect global-vars
   jonathan local-time log4cl named-readtables pythonic-string-reader
   with-output-to-stream)
  :source (("git" "https://github.com/40ants/log4cl-extras.git")))
 (:ql-project log4cl-extras :system-file log4cl-extras-test :system-name
  log4cl-extras-test :dependencies (asdf hamcrest jonathan rove secret-values)
  :source (("git" "https://github.com/40ants/log4cl-extras.git")))
 (:ql-project log5 :system-file log5 :system-name log5 :dependencies nil
  :source (("git" "https://github.com/sharplispers/log5.git")))
 (:ql-project logging :system-file 40ants-logging :system-name 40ants-logging
  :dependencies (40ants-asdf-system asdf global-vars log4cl-extras) :source
  (("git" "https://github.com/40ants/logging.git")))
 (:ql-project logging :system-file 40ants-logging-ci :system-name
  40ants-logging-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/logging.git")))
 (:ql-project logging :system-file 40ants-logging-docs :system-name
  40ants-logging-docs :dependencies
  (40ants-doc 40ants-logging asdf docs-config named-readtables
   pythonic-string-reader)
  :source (("git" "https://github.com/40ants/logging.git")))
 (:ql-project logging :system-file 40ants-logging-example :system-name
  40ants-logging-example :dependencies
  (40ants-logging 40ants-slynk asdf defmain log4cl log4cl-extras) :source
  (("git" "https://github.com/40ants/logging.git")))
 (:ql-project logging :system-file 40ants-logging-tests :system-name
  40ants-logging-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/logging.git")))
 (:ql-project lorem-ipsum :system-file lorem-ipsum :system-name lorem-ipsum
  :dependencies (asdf) :source
  (("git" "https://github.com/phoe/lorem-ipsum.git")))
 (:ql-project lowlight :system-file lowlight :system-name lowlight
  :dependencies (alexandria cl-ppcre cl-who graylex spinneret yacc) :source
  (("git" "https://github.com/chfin/lowlight.git")))
 (:ql-project lowlight :system-file lowlight.doc :system-name lowlight.doc
  :dependencies (cl-gendoc lowlight lowlight.tests) :source
  (("git" "https://github.com/chfin/lowlight.git")))
 (:ql-project lowlight :system-file lowlight.old :system-name lowlight.old
  :dependencies (alexandria cl-ppcre cl-who spinneret) :source
  (("git" "https://github.com/chfin/lowlight.git")))
 (:ql-project lowlight :system-file lowlight.tests :system-name lowlight.tests
  :dependencies (fiveam lowlight) :source
  (("git" "https://github.com/chfin/lowlight.git")))
 (:ql-project lparallel :system-file lparallel :system-name lparallel
  :dependencies (alexandria bordeaux-threads) :source
  (("git" "https://github.com/lmj/lparallel.git")))
 (:ql-project lparallel :system-file lparallel-bench :system-name
  lparallel-bench :dependencies (lparallel trivial-garbage) :source
  (("git" "https://github.com/lmj/lparallel.git")))
 (:ql-project lparallel :system-file lparallel-test :system-name lparallel-test
  :dependencies (lparallel) :source
  (("git" "https://github.com/lmj/lparallel.git")))
 (:ql-project lquery :system-file lquery :system-name lquery :dependencies
  (array-utils asdf clss form-fiddle plump) :source
  (("git" "https://github.com/Shinmera/lquery.git")))
 (:ql-project lquery :system-file lquery-test :system-name lquery-test
  :dependencies (asdf fiveam lquery) :source
  (("git" "https://github.com/Shinmera/lquery.git")))
 (:ql-project lredis :system-file lredis :system-name lredis :dependencies
  (babel babel-streams usocket) :source
  (("git" "https://github.com/death/lredis")))
 (:ql-project lru-cache :system-file lru-cache :system-name lru-cache
  :dependencies (asdf documentation-utils) :source
  (("git" "https://github.com/shinmera/lru-cache.git")))
 (:ql-project lru-cache :system-file lru-cache-test :system-name lru-cache-test
  :dependencies (asdf lru-cache parachute) :source
  (("git" "https://github.com/shinmera/lru-cache.git")))
 (:ql-project lsx :system-file cl-syntax-lsx :system-name cl-syntax-lsx
  :dependencies (asdf cl-syntax lsx) :source
  (("git" "https://github.com/fukamachi/lsx.git")))
 (:ql-project lsx :system-file lsx :system-name lsx :dependencies
  (asdf closer-mop named-readtables) :source
  (("git" "https://github.com/fukamachi/lsx.git")))
 (:ql-project lsx :system-file lsx :system-name lsx/tests :dependencies (rove)
  :source (("git" "https://github.com/fukamachi/lsx.git")))
 (:ql-project ltk :system-file ltk :system-name ltk :dependencies (asdf)
  :source (("git" "https://github.com/ghollisjr/ltk.git")))
 (:ql-project ltk :system-file ltk-mw :system-name ltk-mw :dependencies
  (asdf ltk) :source (("git" "https://github.com/ghollisjr/ltk.git")))
 (:ql-project ltk :system-file ltk-remote :system-name ltk-remote :dependencies
  (asdf ltk) :source (("git" "https://github.com/ghollisjr/ltk.git")))
 (:ql-project luckless :system-file luckless :system-name luckless
  :dependencies (asdf atomics documentation-utils) :source
  (("git" "https://github.com/shinmera/luckless.git")))
 (:ql-project luckless :system-file luckless-test :system-name luckless-test
  :dependencies (alexandria asdf bordeaux-threads luckless parachute) :source
  (("git" "https://github.com/shinmera/luckless.git")))
 (:ql-project lunamech-matrix-api :system-file lunamech-matrix-api :system-name
  lunamech-matrix-api :dependencies
  (asdf cl-json closer-mop dexador do-urlencode drakma jonathan plump quri
   reader shasht str)
  :source (("git" "https://github.com/K1D77A/lunamech-matrix-api.git")))
 (:ql-project lw-compat :system-file lw-compat :system-name lw-compat
  :dependencies nil :source
  (("git" "https://github.com/pcostanza/lw-compat.git")))
 (:ql-project lyrics :system-file lyrics :system-name lyrics :dependencies
  (alexandria asdf bordeaux-threads cl-ppcre defmemo drakma lquery plump
   sqlite)
  :source (("git" "https://github.com/mihaiolteanu/lyrics.git")))
 (:ql-project macro-html :system-file macro-html :system-name macro-html
  :dependencies (named-readtables) :source
  (("git" "https://github.com/eugeneia/macro-html.git")))
 (:ql-project macro-level :system-file macro-level :system-name macro-level
  :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/macro-level_latest.tar.gz")))
 (:ql-project macro-level :system-file macro-level_tests :system-name
  macro-level_tests :dependencies (asdf macro-level parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/macro-level_latest.tar.gz")))
 (:ql-project macrodynamics :system-file macrodynamics :system-name
  macrodynamics :dependencies (alexandria asdf) :source
  (("git" "https://github.com/DalekBaldwin/macrodynamics.git")))
 (:ql-project macrodynamics :system-file macrodynamics :system-name
  macrodynamics/test :dependencies (check-it fiasco macrodynamics) :source
  (("git" "https://github.com/DalekBaldwin/macrodynamics.git")))
 (:ql-project macroexpand-dammit :system-file macroexpand-dammit :system-name
  macroexpand-dammit :dependencies nil :source
  (("single-file"
    "http://john.freml.in/static-blog/macroexpand-dammit/macroexpand-dammit.lisp")
   nil))
 (:ql-project madeira-port :system-file madeira-port :system-name madeira-port
  :dependencies nil :source
  (("git" "https://github.com/nikodemus/madeira-port.git")))
 (:ql-project madeira-port :system-file madeira-port :system-name
  madeira-port-tests :dependencies (eos madeira-port) :source
  (("git" "https://github.com/nikodemus/madeira-port.git")))
 (:ql-project magic-ed :system-file magic-ed :system-name magic-ed
  :dependencies (asdf) :source
  (("git" "https://github.com/sanel/magic-ed.git")))
 (:ql-project magicffi :system-file magicffi :system-name magicffi
  :dependencies (asdf cffi cffi-grovel cl-ppcre) :source
  (("git" "https://github.com/guicho271828/magicffi.git")))
 (:ql-project magicffi :system-file magicffi :system-name magicffi/test
  :dependencies (fiveam magicffi) :source
  (("git" "https://github.com/guicho271828/magicffi.git")))
 (:ql-project magicl :system-file magicl :system-name magicl :dependencies
  (abstract-classes alexandria asdf cffi cffi-libffi interface policy-cond)
  :source (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project magicl :system-file magicl-examples :system-name magicl-examples
  :dependencies (asdf magicl) :source
  (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project magicl :system-file magicl-gen :system-name magicl-gen
  :dependencies (abstract-classes asdf cffi cffi-libffi) :source
  (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project magicl :system-file magicl-tests :system-name magicl-tests
  :dependencies (alexandria asdf fiasco magicl magicl-examples uiop) :source
  (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project magicl :system-file magicl-transcendental :system-name
  magicl-transcendental :dependencies
  (abstract-classes alexandria asdf cffi cffi-libffi interface policy-cond)
  :source (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project magicl :system-file magicl :system-name magicl/core :dependencies
  (abstract-classes alexandria cffi cffi-libffi interface policy-cond) :source
  (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project magicl :system-file magicl :system-name magicl/ext :dependencies
  (cffi cffi-libffi) :source
  (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project magicl :system-file magicl :system-name magicl/ext-blas
  :dependencies
  (abstract-classes alexandria cffi cffi-libffi interface policy-cond) :source
  (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project magicl :system-file magicl :system-name magicl/ext-expokit
  :dependencies
  (abstract-classes alexandria cffi cffi-libffi interface policy-cond) :source
  (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project magicl :system-file magicl :system-name magicl/ext-lapack
  :dependencies
  (abstract-classes alexandria cffi cffi-libffi interface policy-cond) :source
  (("latest-github-release" "https://github.com/rigetti/magicl.git")))
 (:ql-project maiden :system-file maiden :system-name maiden :dependencies
  (asdf bordeaux-threads closer-mop deeds documentation-utils form-fiddle
   lambda-fiddle trivial-garbage trivial-indent uuid verbose)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-accounts :system-name maiden-accounts
  :dependencies (asdf maiden-client-entities maiden-commands maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-activatable :system-name
  maiden-activatable :dependencies (asdf maiden maiden-commands maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-api-access :system-name
  maiden-api-access :dependencies (asdf drakma jsown maiden plump) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-blocker :system-name maiden-blocker
  :dependencies
  (asdf cl-ppcre maiden-client-entities maiden-commands maiden-storage) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-channel-relay :system-name
  maiden-channel-relay :dependencies
  (asdf maiden-client-entities maiden-commands maiden-storage) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-chatlog :system-name maiden-chatlog
  :dependencies
  (asdf babel bordeaux-threads maiden-client-entities maiden-commands
   maiden-storage postmodern)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-client-entities :system-name
  maiden-client-entities :dependencies (asdf documentation-utils maiden)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-commands :system-name maiden-commands
  :dependencies (asdf lambda-fiddle maiden maiden-client-entities) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-core-manager :system-name
  maiden-core-manager :dependencies
  (asdf maiden-client-entities maiden-commands maiden-storage) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-counter :system-name maiden-counter
  :dependencies
  (asdf cl-ppcre maiden-activatable maiden-client-entities maiden-commands
   maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-crimes :system-name maiden-crimes
  :dependencies
  (alexandria asdf cl-ppcre maiden-api-access maiden-client-entities
   maiden-commands maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-dictionary :system-name
  maiden-dictionary :dependencies
  (asdf maiden-client-entities maiden-commands maiden-storage oxenfurt) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-emoticon :system-name maiden-emoticon
  :dependencies
  (asdf cl-ppcre maiden-activatable maiden-client-entities maiden-commands
   maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-help :system-name maiden-help
  :dependencies
  (asdf documentation-utils maiden-client-entities maiden-commands) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-irc :system-name maiden-irc
  :dependencies
  (asdf babel cl-base64 cl-ppcre form-fiddle lambda-fiddle
   maiden-client-entities maiden-networking)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-lastfm :system-name maiden-lastfm
  :dependencies
  (asdf bordeaux-threads maiden-api-access maiden-client-entities
   maiden-commands maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-lichat :system-name maiden-lichat
  :dependencies (asdf lichat-protocol maiden-client-entities maiden-networking)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-location :system-name maiden-location
  :dependencies
  (asdf maiden-api-access maiden-client-entities maiden-commands
   maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-markov :system-name maiden-markov
  :dependencies
  (alexandria asdf babel cl-ppcre fast-io maiden-activatable
   maiden-client-entities maiden-commands maiden-storage parse-number)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-medals :system-name maiden-medals
  :dependencies
  (asdf cl-ppcre maiden-accounts maiden-client-entities maiden-commands
   maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-networking :system-name
  maiden-networking :dependencies (asdf cl+ssl maiden usocket) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-notify :system-name maiden-notify
  :dependencies
  (asdf maiden-accounts maiden-client-entities maiden-commands maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-permissions :system-name
  maiden-permissions :dependencies
  (asdf cl-ppcre documentation-utils maiden-client-entities maiden-commands
   maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-relay :system-name maiden-relay
  :dependencies (asdf maiden-networking maiden-serialize) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-serialize :system-name
  maiden-serialize :dependencies (asdf cl-store gzip-stream maiden) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-silly :system-name maiden-silly
  :dependencies
  (alexandria asdf cl-ppcre lquery maiden-activatable maiden-api-access
   maiden-client-entities maiden-commands)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-storage :system-name maiden-storage
  :dependencies (asdf maiden pathname-utils ubiquitous-concurrent) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-talk :system-name maiden-talk
  :dependencies
  (array-utils asdf cl-mixed-mpg123 drakma harmony maiden-commands
   trivial-features)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-throttle :system-name maiden-throttle
  :dependencies (asdf maiden-client-entities maiden-commands maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-time :system-name maiden-time
  :dependencies
  (asdf maiden-api-access maiden-client-entities maiden-commands
   maiden-location)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-trivia :system-name maiden-trivia
  :dependencies
  (alexandria asdf maiden-client-entities maiden-commands maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-twitter :system-name maiden-twitter
  :dependencies (asdf chirp maiden-client-entities) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-urlinfo :system-name maiden-urlinfo
  :dependencies
  (asdf cl-ppcre drakma maiden-activatable maiden-client-entities
   maiden-commands plump)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-vote :system-name maiden-vote
  :dependencies (asdf cl-ppcre maiden-client-entities maiden-commands) :source
  (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maiden :system-file maiden-weather :system-name maiden-weather
  :dependencies
  (asdf local-time maiden-api-access maiden-client-entities maiden-commands
   maiden-location maiden-storage)
  :source (("git" "https://github.com/Shirakumo/maiden.git")))
 (:ql-project maidenhead :system-file maidenhead :system-name maidenhead
  :dependencies (asdf) :source
  (("git" "https://codeberg.org/glv/maidenhead.git")))
 (:ql-project maidenhead :system-file maidenhead :system-name maidenhead/tests
  :dependencies (fiveam maidenhead) :source
  (("git" "https://codeberg.org/glv/maidenhead.git")))
 (:ql-project mailbox :system-file mailbox :system-name mailbox :dependencies
  (bordeaux-threads) :source
  (("git" "https://github.com/drurowin/mailbox.git")))
 (:ql-project mailgun :system-file mailgun :system-name mailgun :dependencies
  (asdf dexador log4cl secret-values spinneret) :source
  (("git" "https://github.com/40ants/mailgun.git")))
 (:ql-project make-hash :system-file make-hash :system-name make-hash
  :dependencies nil :source
  (("git" "https://github.com/genovese/make-hash.git")))
 (:ql-project make-hash :system-file make-hash-tests :system-name
  make-hash-tests :dependencies (fiveam make-hash) :source
  (("git" "https://github.com/genovese/make-hash.git")))
 (:ql-project manifest :system-file manifest :system-name manifest
  :dependencies (alexandria closer-mop monkeylib-html puri split-sequence toot)
  :source (("git" "https://github.com/gigamonkey/manifest.git")))
 (:ql-project manifolds :system-file manifolds :system-name manifolds
  :dependencies (3d-math 3d-spaces asdf documentation-utils) :source
  (("git" "https://github.com/shirakumo/manifolds.git")))
 (:ql-project manifolds :system-file manifolds-test :system-name manifolds-test
  :dependencies (asdf cl-wavefront manifolds parachute) :source
  (("git" "https://github.com/shirakumo/manifolds.git")))
 (:ql-project map-bind :system-file map-bind :system-name map-bind
  :dependencies nil :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/map-bind_latest.tar.gz")))
 (:ql-project map-set :system-file map-set :system-name map-set :dependencies
  (asdf) :source (("git" "https://github.com/stylewarning/map-set.git")))
 (:ql-project marching-cubes :system-file marching-cubes :system-name
  marching-cubes :dependencies nil :source
  (("git" "https://github.com/takagi/marching-cubes.git")))
 (:ql-project marching-cubes :system-file marching-cubes-example :system-name
  marching-cubes-example :dependencies (marching-cubes) :source
  (("git" "https://github.com/takagi/marching-cubes.git")))
 (:ql-project marching-cubes :system-file marching-cubes-test :system-name
  marching-cubes-test :dependencies (cl-test-more marching-cubes) :source
  (("git" "https://github.com/takagi/marching-cubes.git")))
 (:ql-project markdown.cl :system-file markdown.cl :system-name markdown.cl
  :dependencies (asdf cl-ppcre split-sequence xmls) :source
  (("git" "https://github.com/orthecreedence/markdown.cl.git")))
 (:ql-project markdown.cl :system-file markdown.cl-test :system-name
  markdown.cl-test :dependencies (asdf fiveam markdown.cl xmls) :source
  (("git" "https://github.com/orthecreedence/markdown.cl.git")))
 (:ql-project markup :system-file markup :system-name markup :dependencies
  (alexandria asdf named-readtables str trivial-gray-streams) :source
  (("git" "https://github.com/moderninterpreters/markup.git")))
 (:ql-project markup :system-file markup.test :system-name markup.test
  :dependencies (asdf fiveam markup) :source
  (("git" "https://github.com/moderninterpreters/markup.git")))
 (:ql-project marshal :system-file fmarshal :system-name fmarshal :dependencies
  (closer-mop) :source
  (("git" "https://github.com/kaiserprogrammer/marshal.git")))
 (:ql-project marshal :system-file fmarshal-test :system-name fmarshal-test
  :dependencies (fiveam fmarshal) :source
  (("git" "https://github.com/kaiserprogrammer/marshal.git")))
 (:ql-project math :system-file math :system-name math :dependencies
  (asdf cl-utilities font-discovery gsll vgplot) :source
  (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/appr :dependencies
  (cl-utilities) :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/coord :dependencies nil
  :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/core :dependencies nil
  :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/docs :dependencies
  (codex math mnas-package) :source
  (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/equation :dependencies
  nil :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/geom :dependencies nil
  :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/gnuplot :dependencies
  (font-discovery vgplot) :source
  (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/half-div :dependencies
  nil :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/ls-gauss :dependencies
  (cl-utilities) :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/ls-gsll :dependencies
  (cl-utilities gsll) :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/matr :dependencies
  (cl-utilities) :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/rnd :dependencies
  (cl-utilities) :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/series :dependencies nil
  :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/smooth :dependencies nil
  :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/stat :dependencies nil
  :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/tests :dependencies
  (fiveam math) :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project math :system-file math :system-name math/x-o :dependencies
  (cl-utilities) :source (("git" "https://github.com/mnasoft/math.git")))
 (:ql-project mathkit :system-file mathkit :system-name mathkit :dependencies
  (alexandria) :source (("git" "https://github.com/lispgames/mathkit.git")))
 (:ql-project matrix-case :system-file matrix-case :system-name matrix-case
  :dependencies (asdf jingoh.documentizer) :source
  (("git" "https://github.com/hyotang666/matrix-case.git")))
 (:ql-project matrix-case :system-file matrix-case.test :system-name
  matrix-case.test :dependencies (asdf jingoh matrix-case) :source
  (("git" "https://github.com/hyotang666/matrix-case.git")))
 (:ql-project maxpc :system-file maxpc :system-name maxpc :dependencies (asdf)
  :source (("git" "https://github.com/eugeneia/maxpc.git")))
 (:ql-project maxpc :system-file maxpc-test :system-name maxpc-test
  :dependencies (asdf maxpc) :source
  (("git" "https://github.com/eugeneia/maxpc.git")))
 (:ql-project mbe :system-file mbe :system-name mbe :dependencies (asdf)
  :source (("git" "https://github.com/g000001/mbe.git")))
 (:ql-project mcase :system-file mcase :system-name mcase :dependencies
  (asdf jingoh.documentizer millet) :source
  (("git" "https://github.com/hyotang666/mcase.git")))
 (:ql-project mcase :system-file mcase.test :system-name mcase.test
  :dependencies (asdf jingoh mcase) :source
  (("git" "https://github.com/hyotang666/mcase.git")))
 (:ql-project mcclim :system-file automaton :system-name automaton
  :dependencies (asdf) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim :system-name clim :dependencies
  (asdf clim-core drei-mcclim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-core :system-name clim-core
  :dependencies
  (asdf bordeaux-threads closer-mop cluffer spatial-trees trivial-features
   trivial-garbage trivial-gray-streams)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-core :system-name clim-core/frames
  :dependencies
  (bordeaux-threads closer-mop cluffer spatial-trees trivial-features
   trivial-garbage trivial-gray-streams)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-core :system-name clim-core/silex
  :dependencies
  (bordeaux-threads closer-mop spatial-trees trivial-features trivial-garbage
   trivial-gray-streams)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-core :system-name clim-core/system
  :dependencies
  (bordeaux-threads closer-mop trivial-features trivial-gray-streams) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-debugger :system-name clim-debugger
  :dependencies (asdf clouseau mcclim slim swank) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-examples :system-name clim-examples
  :dependencies
  (alexandria asdf clim closer-mop lorem-ipsum mcclim mcclim-raster-image
   mcclim-svg)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-examples :system-name
  clim-examples/superapp :dependencies (bordeaux-threads mcclim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-lisp :system-name clim-lisp
  :dependencies
  (asdf bordeaux-threads closer-mop trivial-features trivial-gray-streams)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-listener :system-name clim-listener
  :dependencies (asdf cl-fad clim-debugger mcclim uiop) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-pdf :system-name clim-pdf :dependencies
  (asdf cl-pdf clim clim-postscript clim-postscript-font flexi-streams) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-pdf :system-name clim-pdf/test
  :dependencies (clim-pdf fiveam mcclim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-postscript :system-name clim-postscript
  :dependencies (asdf clim clim-postscript-font) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-postscript-font :system-name
  clim-postscript-font :dependencies (asdf clim mcclim-backend-common) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clim-postscript :system-name
  clim-postscript/test :dependencies (clim-postscript fiveam mcclim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clouseau :system-name clouseau :dependencies
  (asdf closer-mop mcclim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file clouseau :system-name clouseau/test
  :dependencies (clouseau fiveam) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file conditional-commands :system-name
  conditional-commands :dependencies (asdf clim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file drei-mcclim :system-name drei-mcclim
  :dependencies
  (asdf automaton clim-core esa-mcclim flexichain persistent swank) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file drei-mcclim :system-name drei-mcclim/test
  :dependencies (automaton drei-mcclim fiveam) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file esa-mcclim :system-name esa-mcclim
  :dependencies (alexandria asdf clim-core) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file functional-geometry :system-name
  functional-geometry :dependencies (asdf clim-listener) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim :system-name mcclim :dependencies
  (asdf clim clim-pdf clim-postscript conditional-commands mcclim-bezier
   mcclim-bitmaps mcclim-clx mcclim-clx-fb mcclim-franz mcclim-null)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-backend-common :system-name
  mcclim-backend-common :dependencies (asdf clim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-bezier :system-name mcclim-bezier
  :dependencies
  (asdf clim clim-pdf clim-postscript flexichain mcclim-clx mcclim-null
   mcclim-render)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-bezier :system-name mcclim-bezier/clx
  :dependencies
  (clim clim-pdf clim-postscript flexichain mcclim-clx mcclim-null
   mcclim-render)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-bezier :system-name mcclim-bezier/core
  :dependencies
  (clim clim-pdf clim-postscript flexichain mcclim-null mcclim-render) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-bitmaps :system-name mcclim-bitmaps
  :dependencies (asdf clim opticl) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-clx :system-name mcclim-clx
  :dependencies
  (alexandria asdf babel cl-aa cl-dejavu cl-paths-ttf cl-unicode cl-vectors
   clim clx flexi-streams mcclim-backend-common trivial-garbage zpb-ttf)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-clx-fb :system-name mcclim-clx-fb
  :dependencies (asdf mcclim-backend-common mcclim-clx mcclim-render) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-dot :system-name mcclim-dot
  :dependencies
  (alexandria asdf cl-dot closer-mop mcclim parse-number shasht split-sequence
   uiop)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-dot :system-name mcclim-dot/core
  :dependencies
  (alexandria cl-dot closer-mop mcclim parse-number split-sequence) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-dot :system-name mcclim-dot/graphviz
  :dependencies
  (alexandria cl-dot closer-mop mcclim parse-number shasht split-sequence uiop)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-dot :system-name mcclim-dot/test
  :dependencies
  (alexandria cl-dot closer-mop fiveam mcclim mcclim-raster-image parse-number
   shasht split-sequence uiop)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-fontconfig :system-name
  mcclim-fontconfig :dependencies (alexandria asdf cffi cffi-grovel) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-fonts :system-name mcclim-fonts
  :dependencies (asdf clim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-fonts :system-name
  mcclim-fonts/truetype :dependencies
  (alexandria cl-aa cl-dejavu cl-paths-ttf cl-vectors clim flexi-streams
   zpb-ttf)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-franz :system-name mcclim-franz
  :dependencies (asdf clim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-harfbuzz :system-name mcclim-harfbuzz
  :dependencies (alexandria asdf cffi cffi-grovel trivial-garbage) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-layouts :system-name mcclim-layouts
  :dependencies (asdf) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-layouts :system-name
  mcclim-layouts/tab :dependencies (clim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-null :system-name mcclim-null
  :dependencies (asdf clim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-raster-image :system-name
  mcclim-raster-image :dependencies
  (asdf clim mcclim-backend-common mcclim-render) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-raster-image :system-name
  mcclim-raster-image/test :dependencies (fiveam mcclim mcclim-raster-image)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-render :system-name mcclim-render
  :dependencies
  (alexandria asdf cl-aa cl-dejavu cl-paths-ttf cl-vectors clim flexi-streams
   mcclim-backend-common zpb-ttf)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-svg :system-name mcclim-svg
  :dependencies
  (alexandria asdf cl-aa cl-base64 cl-dejavu cl-paths-ttf cl-vectors cl-who
   clim flexi-streams mcclim mcclim-bitmaps zpb-ttf)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-tooltips :system-name mcclim-tooltips
  :dependencies (asdf clim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim-tree-with-cross-edges :system-name
  mcclim-tree-with-cross-edges :dependencies (asdf mcclim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim :system-name mcclim/extensions
  :dependencies
  (clim clim-pdf clim-postscript conditional-commands mcclim-bezier
   mcclim-bitmaps mcclim-franz)
  :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim :system-name mcclim/looks
  :dependencies (clim mcclim-clx mcclim-clx-fb mcclim-null) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim :system-name mcclim/test :dependencies
  (fiveam mcclim) :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file mcclim :system-name mcclim/test-util
  :dependencies (fiveam mcclim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file persistent :system-name persistent
  :dependencies (asdf) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file scigraph :system-name scigraph :dependencies
  (asdf mcclim) :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file scigraph :system-name scigraph/dwim
  :dependencies (mcclim) :source
  (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project mcclim :system-file slim :system-name slim :dependencies
  (asdf mcclim) :source (("git" "https://codeberg.org/McCLIM/McCLIM.git")))
 (:ql-project md5 :system-file md5 :system-name md5 :dependencies (asdf)
  :source (("git" "https://github.com/pmai/md5.git")))
 (:ql-project media-types :system-file media-types :system-name media-types
  :dependencies (alexandria asdf cl-ppcre serapeum) :source
  (("git" "https://github.com/ruricolist/media-types.git")))
 (:ql-project media-types :system-file media-types :system-name
  media-types/tests :dependencies (fiveam media-types) :source
  (("git" "https://github.com/ruricolist/media-types.git")))
 (:ql-project mel-base :system-file mel-base :system-name mel-base
  :dependencies (asdf cl+ssl flexi-streams usocket) :source
  (("git" "https://github.com/neonsquare/mel-base.git") nil))
 (:ql-project memoize :system-file memoize :system-name memoize :dependencies
  nil :source
  (("single-file" "http://beta.quicklisp.org/orphans/tfeb/memoize.lisp")
   ("single-file" "http://www.tfeb.org/programs/lisp/memoize.lisp")))
 (:ql-project memory-regions :system-file memory-regions :system-name
  memory-regions :dependencies
  (asdf cffi closer-mop documentation-utils mmap static-vectors
   trivial-extensible-sequences trivial-gray-streams)
  :source (("git" "https://github.com/shinmera/memory-regions.git")))
 (:ql-project memory-regions :system-file memory-regions :system-name
  memory-regions/allocator :dependencies (cffi documentation-utils) :source
  (("git" "https://github.com/shinmera/memory-regions.git")))
 (:ql-project memory-regions :system-file memory-regions :system-name
  memory-regions/object :dependencies (cffi closer-mop documentation-utils)
  :source (("git" "https://github.com/shinmera/memory-regions.git")))
 (:ql-project memory-regions :system-file memory-regions :system-name
  memory-regions/pathname :dependencies
  (cffi documentation-utils mmap static-vectors) :source
  (("git" "https://github.com/shinmera/memory-regions.git")))
 (:ql-project memory-regions :system-file memory-regions :system-name
  memory-regions/region :dependencies (cffi documentation-utils) :source
  (("git" "https://github.com/shinmera/memory-regions.git")))
 (:ql-project memory-regions :system-file memory-regions :system-name
  memory-regions/sequence :dependencies
  (cffi documentation-utils trivial-extensible-sequences) :source
  (("git" "https://github.com/shinmera/memory-regions.git")))
 (:ql-project memory-regions :system-file memory-regions :system-name
  memory-regions/stream :dependencies
  (cffi documentation-utils trivial-gray-streams) :source
  (("git" "https://github.com/shinmera/memory-regions.git")))
 (:ql-project message-oo :system-file message-oo :system-name message-oo
  :dependencies nil :source
  (("git" "https://github.com/Kalimehtar/message-oo.git")))
 (:ql-project messagebox :system-file messagebox :system-name messagebox
  :dependencies (asdf documentation-utils trivial-features uiop) :source
  (("git" "https://github.com/Shinmera/messagebox.git")))
 (:ql-project meta :system-file meta :system-name meta :dependencies
  (named-readtables) :source
  (("git" "https://gitlab.common-lisp.net/frideau/meta.git")))
 (:ql-project meta-sexp :system-file meta-sexp :system-name meta-sexp
  :dependencies (asdf) :source (("git" "https://github.com/vy/meta-sexp.git")))
 (:ql-project metabang-bind :system-file metabang-bind :system-name
  metabang-bind :dependencies (asdf) :source
  (("git" "https://github.com/gwkkwg/metabang-bind")))
 (:ql-project metabang-bind :system-file metabang-bind-test :system-name
  metabang-bind-test :dependencies (asdf lift metabang-bind) :source
  (("git" "https://github.com/gwkkwg/metabang-bind")))
 (:ql-project metacopy :system-file metacopy :system-name metacopy
  :dependencies (moptilities) :source
  (("darcs" "http://dwim.hu/live/metacopy/") nil nil))
 (:ql-project metacopy :system-file metacopy-with-contextl :system-name
  metacopy-with-contextl :dependencies (contextl metacopy) :source
  (("darcs" "http://dwim.hu/live/metacopy/") nil nil))
 (:ql-project metacopy :system-file metacopy-with-contextl :system-name
  metacopy-with-contextl/test :dependencies
  (lift metacopy metacopy-with-contextl) :source
  (("darcs" "http://dwim.hu/live/metacopy/") nil nil))
 (:ql-project metacopy :system-file metacopy :system-name metacopy/test
  :dependencies (lift metacopy) :source
  (("darcs" "http://dwim.hu/live/metacopy/") nil nil))
 (:ql-project metalock :system-file metalock :system-name metalock
  :dependencies (asdf bordeaux-threads closer-mop) :source
  (("git" "https://github.com/K1D77A/metalock.git")))
 (:ql-project metap :system-file metap :system-name metap :dependencies
  (closer-mop) :source (("git" "https://github.com/hipeta/metap.git")))
 (:ql-project metap :system-file metap-test :system-name metap-test
  :dependencies (fiveam metap) :source
  (("git" "https://github.com/hipeta/metap.git")))
 (:ql-project metatilities :system-file metatilities :system-name metatilities
  :dependencies
  (asdf asdf-system-connections cl-containers metabang-bind metatilities-base
   moptilities)
  :source (("git" "https://github.com/gwkkwg/metatilities.git")))
 (:ql-project metatilities :system-file metatilities-test :system-name
  metatilities-test :dependencies (asdf lift metatilities) :source
  (("git" "https://github.com/gwkkwg/metatilities.git")))
 (:ql-project metatilities :system-file metatilities :system-name
  metatilities/with-lift :dependencies (lift metatilities-base) :source
  (("git" "https://github.com/gwkkwg/metatilities.git")))
 (:ql-project metatilities-base :system-file metatilities-base :system-name
  metatilities-base :dependencies (asdf) :source
  (("git" "https://github.com/gwkkwg/metatilities-base.git")))
 (:ql-project metatilities-base :system-file metatilities-base-test
  :system-name metatilities-base-test :dependencies
  (asdf lift metatilities-base) :source
  (("git" "https://github.com/gwkkwg/metatilities-base.git")))
 (:ql-project metering :system-file metering :system-name metering
  :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/dkochmanski/metering.git")))
 (:ql-project metering :system-file metering :system-name metering/test
  :dependencies (fiveam metering) :source
  (("git" "https://gitlab.common-lisp.net/dkochmanski/metering.git")))
 (:ql-project method-combination-utilities :system-file
  method-combination-utilities :system-name method-combination-utilities
  :dependencies (closer-mop) :source
  (("git" "https://github.com/sellout/method-combination-utilities.git")))
 (:ql-project method-combination-utilities :system-file
  method-combination-utilities :system-name method-combination-utilities.tests
  :dependencies (fiveam method-combination-utilities) :source
  (("git" "https://github.com/sellout/method-combination-utilities.git")))
 (:ql-project method-hooks :system-file method-hooks :system-name method-hooks
  :dependencies (asdf) :source
  (("git" "https://github.com/Gnuxie/method-hooks.git")))
 (:ql-project method-hooks :system-file method-hooks-test :system-name
  method-hooks-test :dependencies (asdf method-hooks parachute uiop) :source
  (("git" "https://github.com/Gnuxie/method-hooks.git")))
 (:ql-project method-versions :system-file method-versions :system-name
  method-versions :dependencies nil :source
  (("http"
    "http://nklein.com/wp-content/uploads/2011/05/method-versions_0.1.2011.05.18.tar.gz")))
 (:ql-project mexpr :system-file mexpr :system-name mexpr :dependencies
  (alexandria cl-syntax) :source
  (("git" "https://github.com/tmccombs/mexpr.git")))
 (:ql-project mexpr :system-file mexpr-tests :system-name mexpr-tests
  :dependencies (mexpr named-readtables should-test) :source
  (("git" "https://github.com/tmccombs/mexpr.git")))
 (:ql-project mfiano-utils :system-file mfiano-utils :system-name mfiano-utils
  :dependencies (alexandria asdf serapeum uiop) :source
  (("git" "https://github.com/mfiano/mfiano-utils.git")))
 (:ql-project mgl :system-file mgl :system-name mgl :dependencies
  (alexandria array-operations asdf cl-reexport closer-mop lla mgl-gnuplot
   mgl-mat mgl-pax named-readtables num-utils pythonic-string-reader swank)
  :source (("git" "https://github.com/melisgl/mgl.git")))
 (:ql-project mgl :system-file mgl-example :system-name mgl-example
  :dependencies (asdf mgl) :source
  (("git" "https://github.com/melisgl/mgl.git")))
 (:ql-project mgl :system-file mgl-gnuplot :system-name mgl-gnuplot
  :dependencies (alexandria asdf external-program) :source
  (("git" "https://github.com/melisgl/mgl.git")))
 (:ql-project mgl :system-file mgl :system-name mgl/test :dependencies
  (mgl mgl-mat) :source (("git" "https://github.com/melisgl/mgl.git")))
 (:ql-project mgl-mat :system-file mgl-mat :system-name mgl-mat :dependencies
  (alexandria asdf bordeaux-threads cffi cffi-grovel cl-cuda flexi-streams
   ieee-floats lla mgl-pax num-utils static-vectors trivial-garbage)
  :source (("git" "https://github.com/melisgl/mgl-mat.git")))
 (:ql-project mgl-mat :system-file mgl-mat :system-name mgl-mat/test
  :dependencies (cl-fad mgl-mat) :source
  (("git" "https://github.com/melisgl/mgl-mat.git")))
 (:ql-project mgl-pax :system-file dref :system-name dref :dependencies
  (asdf mgl-pax-bootstrap mgl-pax.asdf named-readtables pythonic-string-reader)
  :source (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file dref-test :system-name dref-test
  :dependencies (alexandria asdf dref mgl-pax mgl-pax.asdf swank try) :source
  (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file dref-test :system-name dref-test/autoload
  :dependencies (dref mgl-pax.asdf try) :source
  (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file dref :system-name dref/full :dependencies
  (alexandria dref mgl-pax.asdf swank) :source
  (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax :system-name mgl-pax :dependencies
  (asdf dref mgl-pax-bootstrap mgl-pax.asdf named-readtables
   pythonic-string-reader)
  :source (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax-bootstrap :system-name
  mgl-pax-bootstrap :dependencies (asdf mgl-pax.asdf) :source
  (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax-test :system-name mgl-pax-test
  :dependencies
  (3bmd 3bmd-ext-code-blocks alexandria asdf colorize dref dref-test md5
   mgl-pax mgl-pax.asdf swank trivial-utf-8 try)
  :source (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax-test :system-name
  mgl-pax-test/extension :dependencies (mgl-pax mgl-pax.asdf try) :source
  (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax.asdf :system-name mgl-pax.asdf
  :dependencies (asdf) :source
  (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax :system-name mgl-pax/document
  :dependencies
  (3bmd 3bmd-ext-code-blocks alexandria colorize dref md5 mgl-pax mgl-pax.asdf
   swank trivial-utf-8)
  :source (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax :system-name mgl-pax/full
  :dependencies
  (3bmd 3bmd-ext-code-blocks alexandria colorize dref md5 mgl-pax mgl-pax.asdf
   swank trivial-utf-8)
  :source (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax :system-name mgl-pax/navigate
  :dependencies (alexandria dref mgl-pax mgl-pax.asdf swank) :source
  (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax :system-name mgl-pax/transcribe
  :dependencies (alexandria dref mgl-pax mgl-pax.asdf swank) :source
  (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgl-pax :system-file mgl-pax :system-name mgl-pax/web
  :dependencies
  (3bmd 3bmd-ext-code-blocks alexandria colorize dref hunchentoot md5 mgl-pax
   mgl-pax.asdf swank trivial-utf-8)
  :source (("git" "https://github.com/melisgl/mgl-pax.git")))
 (:ql-project mgrs :system-file mgrs :system-name mgrs :dependencies
  (asdf utm-ups) :source (("git" "https://codeberg.org/glv/mgrs.git")))
 (:ql-project mgrs :system-file mgrs :system-name mgrs/tests :dependencies
  (fiveam mgrs) :source (("git" "https://codeberg.org/glv/mgrs.git")))
 (:ql-project micmac :system-file micmac :system-name micmac :dependencies
  (alexandria asdf mgl-pax) :source
  (("git" "https://github.com/melisgl/micmac.git")))
 (:ql-project micmac :system-file micmac :system-name micmac/test :dependencies
  (micmac) :source (("git" "https://github.com/melisgl/micmac.git")))
 (:ql-project midi :system-file midi :system-name midi :dependencies nil
  :source
  (("http" "http://www.doc.gold.ac.uk/isms/lisp/midi/midi-20070618.tar.gz")))
 (:ql-project millet :system-file millet :system-name millet :dependencies
  (asdf jingoh.documentizer) :source
  (("git" "https://github.com/hyotang666/millet.git")))
 (:ql-project millet :system-file millet.test :system-name millet.test
  :dependencies (asdf closer-mop jingoh millet) :source
  (("git" "https://github.com/hyotang666/millet.git")))
 (:ql-project minheap :system-file minheap :system-name minheap :dependencies
  nil :source (("git" "https://github.com/sfrank/minheap.git")))
 (:ql-project minheap :system-file minheap-tests :system-name minheap-tests
  :dependencies (lisp-unit minheap) :source
  (("git" "https://github.com/sfrank/minheap.git")))
 (:ql-project mini-cas :system-file mini-cas :system-name mini-cas
  :dependencies nil :source
  (("git" "http://git.tentpost.com/git/lisp/mini-cas.git")))
 (:ql-project minilem :system-file minilem :system-name minilem :dependencies
  (alexandria asdf babel bordeaux-threads cl-fad cl-ppcre esrap inquisitor
   iterate log4cl optima swank trivial-gray-streams trivial-types uiop usocket
   yason)
  :source (("git" "https://github.com/gmasching/minilem.git")))
 (:ql-project misc-extensions :system-file misc-extensions :system-name
  misc-extensions :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/misc-extensions/devel.git")))
 (:ql-project mito :system-file lack-middleware-mito :system-name
  lack-middleware-mito :dependencies (asdf dbi mito-core) :source
  (("git" "https://github.com/fukamachi/mito.git")))
 (:ql-project mito :system-file mito :system-name mito :dependencies
  (asdf cl-reexport lack-middleware-mito mito-core mito-migration) :source
  (("git" "https://github.com/fukamachi/mito.git")))
 (:ql-project mito :system-file mito-core :system-name mito-core :dependencies
  (alexandria asdf cl-ppcre cl-reexport closer-mop dbi dissect local-time sxql
   trivia uuid)
  :source (("git" "https://github.com/fukamachi/mito.git")))
 (:ql-project mito :system-file mito-migration :system-name mito-migration
  :dependencies
  (alexandria asdf chipz cl-reexport closer-mop dbi esrap mito-core sxql uiop)
  :source (("git" "https://github.com/fukamachi/mito.git")))
 (:ql-project mito :system-file mito-test :system-name mito-test :dependencies
  (asdf mito prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/mito.git")))
 (:ql-project mito-attachment :system-file mito-attachment :system-name
  mito-attachment :dependencies
  (alexandria asdf aws-sign4 lack-component mito quri trivial-mimes uiop uuid
   zs3)
  :source (("git" "https://github.com/fukamachi/mito-attachment.git")))
 (:ql-project mito-auth :system-file mito-auth :system-name mito-auth
  :dependencies (babel ironclad mito) :source
  (("git" "https://github.com/fukamachi/mito-auth.git")))
 (:ql-project mixalot :system-file flac :system-name flac :dependencies
  (cffi cffi-grovel) :source
  (("git" "https://github.com/ahefner/mixalot.git")))
 (:ql-project mixalot :system-file mixalot :system-name mixalot :dependencies
  (alexandria bordeaux-threads cffi) :source
  (("git" "https://github.com/ahefner/mixalot.git")))
 (:ql-project mixalot :system-file mixalot-flac :system-name mixalot-flac
  :dependencies (cffi flac mixalot) :source
  (("git" "https://github.com/ahefner/mixalot.git")))
 (:ql-project mixalot :system-file mixalot-mp3 :system-name mixalot-mp3
  :dependencies (cffi mixalot mpg123-ffi) :source
  (("git" "https://github.com/ahefner/mixalot.git")))
 (:ql-project mixalot :system-file mixalot-vorbis :system-name mixalot-vorbis
  :dependencies (cffi mixalot vorbisfile-ffi) :source
  (("git" "https://github.com/ahefner/mixalot.git")))
 (:ql-project mixalot :system-file mpg123-ffi :system-name mpg123-ffi
  :dependencies (cffi) :source
  (("git" "https://github.com/ahefner/mixalot.git")))
 (:ql-project mixalot :system-file vorbisfile-ffi :system-name vorbisfile-ffi
  :dependencies (cffi cffi-grovel) :source
  (("git" "https://github.com/ahefner/mixalot.git")))
 (:ql-project mk-defsystem :system-file mk-defsystem :system-name mk-defsystem
  :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/mantoniotti/mk-defsystem.git")))
 (:ql-project mk-string-metrics :system-file mk-string-metrics :system-name
  mk-string-metrics :dependencies (asdf) :source
  (("git" "https://github.com/cbaggers/mk-string-metrics.git")))
 (:ql-project mk-string-metrics :system-file mk-string-metrics-tests
  :system-name mk-string-metrics-tests :dependencies (asdf mk-string-metrics)
  :source (("git" "https://github.com/cbaggers/mk-string-metrics.git")))
 (:ql-project mmap :system-file mmap :system-name mmap :dependencies
  (asdf cffi documentation-utils trivial-features) :source
  (("git" "https://github.com/Shinmera/mmap.git")))
 (:ql-project mmap :system-file mmap-test :system-name mmap-test :dependencies
  (alexandria asdf cffi mmap parachute) :source
  (("git" "https://github.com/Shinmera/mmap.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name mnas-graph
  :dependencies (asdf mnas-hash-table mnas-string) :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name mnas-graph/alg
  :dependencies (mnas-hash-table mnas-string) :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name mnas-graph/core
  :dependencies (mnas-hash-table mnas-string) :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name mnas-graph/demos
  :dependencies (mnas-hash-table mnas-string) :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name mnas-graph/docs
  :dependencies (codex mnas-graph mnas-package) :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name mnas-graph/filter
  :dependencies nil :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name
  mnas-graph/printer-viewer :dependencies nil :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name mnas-graph/sample
  :dependencies (mnas-hash-table mnas-string) :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name mnas-graph/tests
  :dependencies (fiveam mnas-graph) :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-graph :system-file mnas-graph :system-name mnas-graph/view
  :dependencies (mnas-hash-table mnas-string) :source
  (("git" "https://github.com/mnasoft/mnas-graph.git")))
 (:ql-project mnas-hash-table :system-file mnas-hash-table :system-name
  mnas-hash-table :dependencies (asdf) :source
  (("git" "https://github.com/mnasoft/mnas-hash-table.git")))
 (:ql-project mnas-hash-table :system-file mnas-hash-table :system-name
  mnas-hash-table/docs :dependencies (codex mnas-hash-table) :source
  (("git" "https://github.com/mnasoft/mnas-hash-table.git")))
 (:ql-project mnas-hash-table :system-file mnas-hash-table :system-name
  mnas-hash-table/tests :dependencies (fiveam mnas-hash-table) :source
  (("git" "https://github.com/mnasoft/mnas-hash-table.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name mnas-package
  :dependencies
  (alexandria asdf closer-mop inferior-shell mnas-graph mnas-string slynk)
  :source (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/doc :dependencies (alexandria closer-mop slynk) :source
  (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/docs :dependencies (codex mnas-package) :source
  (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/example :dependencies nil :source
  (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/make :dependencies (alexandria closer-mop mnas-graph slynk)
  :source (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/obj :dependencies (closer-mop) :source
  (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/pkg :dependencies (alexandria closer-mop slynk) :source
  (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/sec :dependencies
  (alexandria closer-mop mnas-graph mnas-string slynk) :source
  (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/sys :dependencies (alexandria) :source
  (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/tests :dependencies (fiveam mnas-package) :source
  (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-package :system-file mnas-package :system-name
  mnas-package/view :dependencies (alexandria closer-mop mnas-graph slynk)
  :source (("git" "https://github.com/mnasoft/mnas-package.git")))
 (:ql-project mnas-path :system-file mnas-path :system-name mnas-path
  :dependencies (asdf cl-fad mnas-string) :source
  (("git" "https://github.com/mnasoft/mnas-path.git")))
 (:ql-project mnas-path :system-file mnas-path :system-name mnas-path/docs
  :dependencies (codex mnas-package mnas-path) :source
  (("git" "https://github.com/mnasoft/mnas-path.git")))
 (:ql-project mnas-string :system-file mnas-string :system-name mnas-string
  :dependencies (asdf cl-ppcre mnas-hash-table) :source
  (("git" "https://github.com/mnasoft/mnas-string.git")))
 (:ql-project mnas-string :system-file mnas-string :system-name
  mnas-string/core :dependencies (cl-ppcre) :source
  (("git" "https://github.com/mnasoft/mnas-string.git")))
 (:ql-project mnas-string :system-file mnas-string :system-name mnas-string/db
  :dependencies (cl-ppcre) :source
  (("git" "https://github.com/mnasoft/mnas-string.git")))
 (:ql-project mnas-string :system-file mnas-string :system-name
  mnas-string/docs :dependencies (codex mnas-package mnas-string) :source
  (("git" "https://github.com/mnasoft/mnas-string.git")))
 (:ql-project mnas-string :system-file mnas-string :system-name
  mnas-string/parse :dependencies (cl-ppcre) :source
  (("git" "https://github.com/mnasoft/mnas-string.git")))
 (:ql-project mnas-string :system-file mnas-string :system-name
  mnas-string/print :dependencies (mnas-hash-table) :source
  (("git" "https://github.com/mnasoft/mnas-string.git")))
 (:ql-project mnas-string :system-file mnas-string :system-name
  mnas-string/tests :dependencies (fiveam mnas-string) :source
  (("git" "https://github.com/mnasoft/mnas-string.git")))
 (:ql-project mnas-string :system-file mnas-string :system-name
  mnas-string/translit :dependencies (mnas-hash-table) :source
  (("git" "https://github.com/mnasoft/mnas-string.git")))
 (:ql-project mockingbird :system-file mockingbird :system-name mockingbird
  :dependencies (alexandria asdf closer-mop fare-utils trivial-arguments)
  :source (("git" "https://github.com/Chream/mockingbird.git")))
 (:ql-project mockingbird :system-file mockingbird-test :system-name
  mockingbird-test :dependencies (asdf mockingbird prove prove-asdf) :source
  (("git" "https://github.com/Chream/mockingbird.git")))
 (:ql-project modest-config :system-file modest-config :system-name
  modest-config :dependencies (asdf) :source
  (("git" "https://github.com/tormaroe/modest-config.git")))
 (:ql-project modest-config :system-file modest-config-test :system-name
  modest-config-test :dependencies (asdf modest-config prove prove-asdf)
  :source (("git" "https://github.com/tormaroe/modest-config.git")))
 (:ql-project modf :system-file modf :system-name modf :dependencies
  (alexandria asdf closer-mop iterate) :source
  (("git" "https://github.com/smithzvk/modf.git")))
 (:ql-project modf :system-file modf-test :system-name modf-test :dependencies
  (asdf iterate modf stefil) :source
  (("git" "https://github.com/smithzvk/modf.git")))
 (:ql-project modf-fset :system-file modf-fset :system-name modf-fset
  :dependencies (fset modf) :source
  (("git" "https://github.com/smithzvk/modf-fset.git")))
 (:ql-project modf-fset :system-file modf-fset-test :system-name modf-fset-test
  :dependencies (modf modf-fset stefil) :source
  (("git" "https://github.com/smithzvk/modf-fset.git")))
 (:ql-project modularize :system-file modularize :system-name modularize
  :dependencies (asdf documentation-utils trivial-package-local-nicknames)
  :source (("git" "https://github.com/Shinmera/modularize.git")))
 (:ql-project modularize :system-file modularize-test-module :system-name
  modularize-test-module :dependencies (asdf modularize) :source
  (("git" "https://github.com/Shinmera/modularize.git")))
 (:ql-project modularize-hooks :system-file modularize-hooks :system-name
  modularize-hooks :dependencies
  (asdf closer-mop lambda-fiddle modularize trivial-arguments) :source
  (("git" "https://github.com/Shinmera/modularize-hooks.git")))
 (:ql-project modularize-interfaces :system-file interfaces-test-implementation
  :system-name interfaces-test-implementation :dependencies
  (asdf modularize modularize-interfaces) :source
  (("git" "https://github.com/Shinmera/modularize-interfaces.git")))
 (:ql-project modularize-interfaces :system-file modularize-interfaces
  :system-name modularize-interfaces :dependencies
  (asdf lambda-fiddle modularize trivial-arguments trivial-indent) :source
  (("git" "https://github.com/Shinmera/modularize-interfaces.git")))
 (:ql-project moira :system-file moira :system-name moira :dependencies
  (alexandria bordeaux-threads osicat serapeum trivial-features
   trivial-garbage)
  :source (("git" "https://github.com/ruricolist/moira.git")))
 (:ql-project monkeylib-binary-data :system-file com.gigamonkeys.binary-data
  :system-name com.gigamonkeys.binary-data :dependencies (alexandria) :source
  (("git" "https://github.com/gigamonkey/monkeylib-binary-data.git")))
 (:ql-project monkeylib-html :system-file monkeylib-html :system-name
  monkeylib-html :dependencies
  (asdf com.gigamonkeys.macro-utilities com.gigamonkeys.pathnames
   com.gigamonkeys.test-framework com.gigamonkeys.utilities
   monkeylib-text-languages monkeylib-text-output)
  :source (("git" "https://github.com/gigamonkey/monkeylib-html.git")))
 (:ql-project monkeylib-json :system-file com.gigamonkeys.json :system-name
  com.gigamonkeys.json :dependencies
  (asdf com.gigamonkeys.parser com.gigamonkeys.utilities) :source
  (("git" "https://github.com/gigamonkey/monkeylib-json.git")))
 (:ql-project monkeylib-macro-utilities :system-file
  com.gigamonkeys.macro-utilities :system-name com.gigamonkeys.macro-utilities
  :dependencies nil :source
  (("git" "https://github.com/gigamonkey/monkeylib-macro-utilities.git")))
 (:ql-project monkeylib-markup :system-file com.gigamonkeys.markup :system-name
  com.gigamonkeys.markup :dependencies
  (cl-ppcre com.gigamonkeys.pathnames com.gigamonkeys.utilities) :source
  (("git" "https://github.com/gigamonkey/monkeylib-markup.git")))
 (:ql-project monkeylib-markup-html :system-file monkeylib-markup-html
  :system-name monkeylib-markup-html :dependencies
  (alexandria com.gigamonkeys.macro-utilities com.gigamonkeys.markup
   com.gigamonkeys.utilities monkeylib-html)
  :source (("git" "https://github.com/gigamonkey/monkeylib-markup-html.git")))
 (:ql-project monkeylib-parser :system-file com.gigamonkeys.parser :system-name
  com.gigamonkeys.parser :dependencies
  (com.gigamonkeys.macro-utilities com.gigamonkeys.utilities) :source
  (("git" "https://github.com/gigamonkey/monkeylib-parser.git")))
 (:ql-project monkeylib-pathnames :system-file com.gigamonkeys.pathnames
  :system-name com.gigamonkeys.pathnames :dependencies nil :source
  (("git" "https://github.com/gigamonkey/monkeylib-pathnames.git")))
 (:ql-project monkeylib-prose-diff :system-file com.gigamonkeys.prose-diff
  :system-name com.gigamonkeys.prose-diff :dependencies
  (cl-ppcre com.gigamonkeys.macro-utilities com.gigamonkeys.markup
   com.gigamonkeys.pathnames com.gigamonkeys.utilities monkeylib-markup-html)
  :source (("git" "https://github.com/gigamonkey/monkeylib-prose-diff.git")))
 (:ql-project monkeylib-test-framework :system-file
  com.gigamonkeys.test-framework :system-name com.gigamonkeys.test-framework
  :dependencies (com.gigamonkeys.macro-utilities) :source
  (("git" "https://github.com/gigamonkey/monkeylib-test-framework.git")))
 (:ql-project monkeylib-text-languages :system-file monkeylib-text-languages
  :system-name monkeylib-text-languages :dependencies
  (com.gigamonkeys.macro-utilities monkeylib-text-output) :source
  (("git" "https://github.com/gigamonkey/monkeylib-text-languages.git")))
 (:ql-project monkeylib-text-output :system-file monkeylib-text-output
  :system-name monkeylib-text-output :dependencies
  (com.gigamonkeys.macro-utilities com.gigamonkeys.pathnames
   com.gigamonkeys.test-framework com.gigamonkeys.utilities)
  :source (("git" "https://github.com/gigamonkey/monkeylib-text-output.git")))
 (:ql-project monkeylib-utilities :system-file com.gigamonkeys.utilities
  :system-name com.gigamonkeys.utilities :dependencies
  (alexandria split-sequence) :source
  (("git" "https://github.com/gigamonkey/monkeylib-utilities.git")))
 (:ql-project montezuma :system-file lucene-in-action-tests :system-name
  lucene-in-action-tests :dependencies (asdf lift montezuma) :source
  (("git" "https://github.com/sharplispers/montezuma.git")))
 (:ql-project montezuma :system-file montezuma :system-name montezuma
  :dependencies (asdf babel cl-fad cl-ppcre) :source
  (("git" "https://github.com/sharplispers/montezuma.git")))
 (:ql-project montezuma :system-file montezuma-indexfiles :system-name
  montezuma-indexfiles :dependencies (asdf cl-fad montezuma) :source
  (("git" "https://github.com/sharplispers/montezuma.git")))
 (:ql-project montezuma :system-file montezuma :system-name montezuma-tests
  :dependencies (montezuma trivial-timeout) :source
  (("git" "https://github.com/sharplispers/montezuma.git")))
 (:ql-project moptilities :system-file moptilities :system-name moptilities
  :dependencies (closer-mop) :source
  (("git" "https://github.com/gwkkwg/moptilities.git")))
 (:ql-project moptilities :system-file moptilities-test :system-name
  moptilities-test :dependencies (lift moptilities) :source
  (("git" "https://github.com/gwkkwg/moptilities.git")))
 (:ql-project more-conditions :system-file more-conditions :system-name
  more-conditions :dependencies (alexandria asdf closer-mop) :source
  (("git" "https://github.com/scymtym/more-conditions.git")))
 (:ql-project more-conditions :system-file more-conditions :system-name
  more-conditions/test :dependencies (fiveam let-plus more-conditions) :source
  (("git" "https://github.com/scymtym/more-conditions.git")))
 (:ql-project mp3-duration :system-file mp3-duration :system-name mp3-duration
  :dependencies nil :source
  (("git" "https://github.com/fukamachi/mp3-duration.git")))
 (:ql-project mp3-duration :system-file mp3-duration-test :system-name
  mp3-duration-test :dependencies (mp3-duration prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/mp3-duration.git")))
 (:ql-project mpc :system-file mpc :system-name mpc :dependencies nil :source
  (("git" "https://github.com/eugeneia/mpc.git")))
 (:ql-project mra-wavelet-plot :system-file mra-wavelet-plot :system-name
  mra-wavelet-plot :dependencies (asdf) :source
  (("git" "https://github.com/shamazmazum/mra-wavelet-plot.git")))
 (:ql-project mstrings :system-file mstrings :system-name mstrings
  :dependencies (asdf named-readtables) :source
  (("git" "https://git.sr.ht/~shunter/mstrings")))
 (:ql-project mstrings :system-file mstrings :system-name mstrings/test
  :dependencies (cl-syntax mstrings parachute) :source
  (("git" "https://git.sr.ht/~shunter/mstrings")))
 (:ql-project mt19937 :system-file mt19937 :system-name mt19937 :dependencies
  nil :source
  (("https"
    "https://common-lisp.net/project/asdf-packaging/mt19937-latest.tar.gz")))
 (:ql-project mtif :system-file mtif :system-name mtif :dependencies (cffi)
  :source (("git" "https://github.com/rmhsilva/mtif.git")))
 (:ql-project mtlisp :system-file mtlisp :system-name mtlisp :dependencies
  (acl-compat) :source (("git" "https://github.com/mtravers/mtlisp.git")))
 (:ql-project multilang-documentation :system-file multilang-documentation
  :system-name multilang-documentation :dependencies
  (asdf documentation-utils language-codes system-locale) :source
  (("git" "https://github.com/Shinmera/multilang-documentation.git")))
 (:ql-project multiple-value-variants :system-file multiple-value-variants
  :system-name multiple-value-variants :dependencies
  (enhanced-multiple-value-bind map-bind positional-lambda) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/multiple-value-variants_latest.tar.gz")))
 (:ql-project multiposter :system-file multiposter :system-name multiposter
  :dependencies
  (alexandria asdf cl-ppcre clohost closer-mop documentation-utils fuzzy-dates
   humbler lichat-tcp-client lquery north-drakma pathname-utils studio-client
   tooter trivial-arguments trivial-mimes ubiquitous uiop)
  :source (("git" "https://github.com/Shinmera/multiposter.git")))
 (:ql-project multival-plist :system-file multival-plist :system-name
  multival-plist :dependencies
  (alexandria cl-annot cl-syntax-annot trivial-types) :source
  (("git" "https://github.com/fukamachi/multival-plist.git")))
 (:ql-project multival-plist :system-file multival-plist-test :system-name
  multival-plist-test :dependencies (cl-test-more multival-plist) :source
  (("git" "https://github.com/fukamachi/multival-plist.git")))
 (:ql-project music-spelling :system-file music-spelling :system-name
  music-spelling :dependencies (alexandria asdf) :source
  (("git" "https://github.com/ntrocado/music-spelling.git")))
 (:ql-project mutility :system-file mutility :system-name mutility
  :dependencies (alexandria asdf closer-mop local-time) :source
  (("git" "https://github.com/defaultxr/mutility.git")))
 (:ql-project mutility :system-file mutility :system-name mutility/files
  :dependencies (mutility) :source
  (("git" "https://github.com/defaultxr/mutility.git")))
 (:ql-project mutility :system-file mutility :system-name mutility/loopy
  :dependencies (mutility trivial-do) :source
  (("git" "https://github.com/defaultxr/mutility.git")))
 (:ql-project mutility :system-file mutility :system-name mutility/most
  :dependencies (mutility trivial-do) :source
  (("git" "https://github.com/defaultxr/mutility.git")))
 (:ql-project mutility :system-file mutility :system-name mutility/test-helpers
  :dependencies (mutility) :source
  (("git" "https://github.com/defaultxr/mutility.git")))
 (:ql-project mutility :system-file mutility :system-name mutility/tests
  :dependencies (alexandria cl-patterns fiveam mutility trivial-do) :source
  (("git" "https://github.com/defaultxr/mutility.git")))
 (:ql-project mutils :system-file mutils :system-name mutils :dependencies
  (alexandria asdf cl-ppcre) :source
  (("git" "https://github.com/mmontone/mutils.git")))
 (:ql-project mw-equiv :system-file mw-equiv :system-name mw-equiv
  :dependencies nil :source
  (("git" "https://github.com/sharplispers/mw-equiv.git")))
 (:ql-project mystic :system-file mystic :system-name mystic :dependencies
  (alexandria anaphora asdf cl-mustache local-time split-sequence ubiquitous)
  :source (("git" "https://github.com/roswell/mystic.git")))
 (:ql-project mystic :system-file mystic-file-mixin :system-name
  mystic-file-mixin :dependencies (asdf mystic) :source
  (("git" "https://github.com/roswell/mystic.git")))
 (:ql-project mystic :system-file mystic-fiveam-mixin :system-name
  mystic-fiveam-mixin :dependencies (asdf mystic mystic-file-mixin) :source
  (("git" "https://github.com/roswell/mystic.git")))
 (:ql-project mystic :system-file mystic-gitignore-mixin :system-name
  mystic-gitignore-mixin :dependencies (asdf mystic mystic-file-mixin) :source
  (("git" "https://github.com/roswell/mystic.git")))
 (:ql-project mystic :system-file mystic-library-template :system-name
  mystic-library-template :dependencies
  (asdf mystic mystic-fiveam-mixin mystic-gitignore-mixin mystic-readme-mixin
   mystic-travis-mixin)
  :source (("git" "https://github.com/roswell/mystic.git")))
 (:ql-project mystic :system-file mystic-readme-mixin :system-name
  mystic-readme-mixin :dependencies (asdf mystic mystic-file-mixin) :source
  (("git" "https://github.com/roswell/mystic.git")))
 (:ql-project mystic :system-file mystic-test :system-name mystic-test
  :dependencies (asdf fiveam mystic mystic-library-template) :source
  (("git" "https://github.com/roswell/mystic.git")))
 (:ql-project mystic :system-file mystic-travis-mixin :system-name
  mystic-travis-mixin :dependencies (asdf mystic mystic-file-mixin) :source
  (("git" "https://github.com/roswell/mystic.git")))
 (:ql-project myway :system-file myway :system-name myway :dependencies
  (alexandria asdf cl-ppcre cl-utilities map-set quri) :source
  (("git" "https://github.com/fukamachi/myway.git")))
 (:ql-project myway :system-file myway-test :system-name myway-test
  :dependencies (asdf myway prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/myway.git")))
 (:ql-project nail :system-file nail :system-name nail :dependencies
  (asdf cl-ppcre cl-reexport eazy-gnuplot) :source
  (("git" "https://github.com/walpurgisnatch/nail.git")))
 (:ql-project named-closure :system-file named-closure :system-name
  named-closure :dependencies
  (alexandria asdf closer-mop hu.dwim.util hu.dwim.walker) :source
  (("git" "https://github.com/BlueFlo0d/named-closure.git")))
 (:ql-project named-read-macros :system-file named-read-macros :system-name
  named-read-macros :dependencies (asdf named-readtables) :source
  (("git" "https://github.com/williamyaoh/named-read-macros.git")))
 (:ql-project named-read-macros :system-file named-read-macros-test
  :system-name named-read-macros-test :dependencies
  (asdf fiveam named-read-macros uiop) :source
  (("git" "https://github.com/williamyaoh/named-read-macros.git")))
 (:ql-project named-readtables :system-file named-readtables :system-name
  named-readtables :dependencies (asdf mgl-pax-bootstrap) :source
  (("git" "https://github.com/melisgl/named-readtables.git")))
 (:ql-project named-readtables :system-file named-readtables-test :system-name
  named-readtables-test :dependencies (asdf named-readtables try) :source
  (("git" "https://github.com/melisgl/named-readtables.git")))
 (:ql-project nanovg-blob :system-file nanovg-blob :system-name nanovg-blob
  :dependencies (asdf bodge-blobs-support glad-blob trivial-features) :source
  (("tagged-git" "https://github.com/borodust/nanovg-blob.git" "stable")))
 (:ql-project napa-fft3 :system-file napa-fft3 :system-name napa-fft3
  :dependencies nil :source
  (("git" "https://github.com/pkhuong/Napa-FFT3.git")))
 (:ql-project narrowed-types :system-file narrowed-types :system-name
  narrowed-types :dependencies (asdf) :source
  (("git" "https://github.com/jpcima/narrowed-types.git")))
 (:ql-project narrowed-types :system-file narrowed-types-test :system-name
  narrowed-types-test :dependencies (asdf narrowed-types rt) :source
  (("git" "https://github.com/jpcima/narrowed-types.git")))
 (:ql-project native-lazy-seq :system-file native-lazy-seq :system-name
  native-lazy-seq :dependencies
  (asdf iterate serapeum trivial-extensible-sequences
   trivial-package-local-nicknames)
  :source (("git" "https://github.com/kchanqvq/native-lazy-seq.git")))
 (:ql-project nbd :system-file nbd :system-name nbd :dependencies
  (asdf bordeaux-threads flexi-streams lisp-binary
   wild-package-inferred-system)
  :source (("git" "https://gitlab.com/ralt/nbd.git")))
 (:ql-project nbd :system-file nbd :system-name nbd/simple-in-memory
  :dependencies (nbd wild-package-inferred-system) :source
  (("git" "https://gitlab.com/ralt/nbd.git")))
 (:ql-project ndebug :system-file ndebug :system-name ndebug :dependencies
  (asdf bordeaux-threads dissect trivial-custom-debugger trivial-gray-streams)
  :source (("git" "https://github.com/atlas-engineer/ndebug.git")))
 (:ql-project ndebug :system-file ndebug :system-name ndebug/tests
  :dependencies (lisp-unit2 ndebug) :source
  (("git" "https://github.com/atlas-engineer/ndebug.git")))
 (:ql-project net-telent-date :system-file net-telent-date :system-name
  net-telent-date :dependencies nil :source
  (("http" "http://ftp.linux.org.uk/pub/lisp/cclan/net-telent-date.tar.gz")))
 (:ql-project network-addresses :system-file network-addresses :system-name
  network-addresses :dependencies (cl-ppcre) :source
  (("git" "https://github.com/ralt/network-addresses.git")))
 (:ql-project network-addresses :system-file network-addresses-test
  :system-name network-addresses-test :dependencies (fiveam network-addresses)
  :source (("git" "https://github.com/ralt/network-addresses.git")))
 (:ql-project neural-classifier :system-file neural-classifier :system-name
  neural-classifier :dependencies (alexandria asdf magicl snakes) :source
  (("git" "https://github.com/shamazmazum/neural-classifier.git")))
 (:ql-project neural-classifier :system-file neural-classifier :system-name
  neural-classifier/mnist :dependencies (neural-classifier nibbles) :source
  (("git" "https://github.com/shamazmazum/neural-classifier.git")))
 (:ql-project neural-classifier :system-file neural-classifier :system-name
  neural-classifier/tests :dependencies (fiveam neural-classifier nibbles)
  :source (("git" "https://github.com/shamazmazum/neural-classifier.git")))
 (:ql-project new-op :system-file new-op :system-name new-op :dependencies
  (asdf) :source (("git" "https://gitlab.common-lisp.net/new-op/new-op.git")))
 (:ql-project nibbles :system-file nibbles :system-name nibbles :dependencies
  (asdf) :source (("git" "https://github.com/sharplispers/nibbles.git")))
 (:ql-project nibbles :system-file nibbles :system-name nibbles/tests
  :dependencies (nibbles rt) :source
  (("git" "https://github.com/sharplispers/nibbles.git")))
 (:ql-project nibbles-streams :system-file nibbles-streams :system-name
  nibbles-streams :dependencies (asdf nibbles serapeum trivial-gray-streams)
  :source (("git" "https://github.com/shamazmazum/nibbles-streams.git")))
 (:ql-project nibbles-streams :system-file nibbles-streams :system-name
  nibbles-streams/tests :dependencies (fiveam flexi-streams nibbles-streams)
  :source (("git" "https://github.com/shamazmazum/nibbles-streams.git")))
 (:ql-project nineveh :system-file nineveh :system-name nineveh :dependencies
  (asdf cepl cl-soil dendrite.primitives documentation-utils easing livesupport
   rtg-math.vari with-setf)
  :source
  (("branched-git" "https://github.com/cbaggers/nineveh.git"
    "release-quicklisp")))
 (:ql-project ningle :system-file ningle :system-name ningle :dependencies
  (alexandria asdf lack-component lack-request lack-response myway) :source
  (("git" "https://github.com/fukamachi/ningle.git")))
 (:ql-project ningle :system-file ningle-test :system-name ningle-test
  :dependencies (asdf babel lack-component lack-test ningle prove yason)
  :source (("git" "https://github.com/fukamachi/ningle.git")))
 (:ql-project nlopt :system-file nlopt :system-name nlopt :dependencies
  (asdf cffi trivial-garbage) :source
  (("git" "https://github.com/bpanthi977/nlopt.git")))
 (:ql-project nodgui :system-file nodgui :system-name nodgui :dependencies
  (alexandria asdf bordeaux-threads cl-colors2 cl-jpeg cl-ppcre-unicode
   cl-unicode clunit2 esrap named-readtables parse-number)
  :source (("git" "https://notabug.org/cage/nodgui.git")))
 (:ql-project north :system-file north :system-name north :dependencies
  (asdf north-drakma) :source (("git" "http://github.com/Shinmera/north.git")))
 (:ql-project north :system-file north-core :system-name north-core
  :dependencies (asdf cl-ppcre crypto-shortcuts documentation-utils uuid)
  :source (("git" "http://github.com/Shinmera/north.git")))
 (:ql-project north :system-file north-dexador :system-name north-dexador
  :dependencies (asdf dexador north-core) :source
  (("git" "http://github.com/Shinmera/north.git")))
 (:ql-project north :system-file north-drakma :system-name north-drakma
  :dependencies (asdf drakma north-core) :source
  (("git" "http://github.com/Shinmera/north.git")))
 (:ql-project north :system-file north-example :system-name north-example
  :dependencies (asdf clip drakma hunchentoot north) :source
  (("git" "http://github.com/Shinmera/north.git")))
 (:ql-project nsort :system-file nsort :system-name nsort :dependencies (prove)
  :source (("git" "https://github.com/jschatzer/nsort.git")))
 (:ql-project nuclblog :system-file nuclblog :system-name nuclblog
  :dependencies
  (bordeaux-threads cl-markdown cl-store cl-who hunchentoot hunchentoot-auth
   md5)
  :source (("git" "https://github.com/slyrus/nuclblog.git") nil))
 (:ql-project nuklear-blob :system-file nuklear-blob :system-name nuklear-blob
  :dependencies (asdf bodge-blobs-support glad-blob trivial-features) :source
  (("tagged-git" "https://github.com/borodust/nuklear-blob.git" "stable")))
 (:ql-project nuklear-renderer-blob :system-file nuklear-renderer-blob
  :system-name nuklear-renderer-blob :dependencies
  (asdf bodge-blobs-support glad-blob trivial-features) :source
  (("tagged-git" "https://github.com/borodust/nuklear-renderer-blob.git"
    "stable")))
 (:ql-project null-package :system-file null-package :system-name null-package
  :dependencies (alexandria asdf core-reader named-readtables read-as-string)
  :source (("git" "https://github.com/hyotang666/null-package.git")))
 (:ql-project null-package :system-file null-package.test :system-name
  null-package.test :dependencies (asdf bnf jingoh null-package) :source
  (("git" "https://github.com/hyotang666/null-package.git")))
 (:ql-project numcl :system-file numcl :system-name numcl :dependencies
  (alexandria asdf cl-randist constantfold float-features function-cache gtype
   iterate lisp-namespace specialized-function trivia type-r)
  :source (("git" "https://github.com/numcl/numcl.git")))
 (:ql-project numcl :system-file numcl.test :system-name numcl.test
  :dependencies (asdf fiveam numcl) :source
  (("git" "https://github.com/numcl/numcl.git")))
 (:ql-project numerical-utilities :system-file num-utils :system-name num-utils
  :dependencies
  (alexandria alexandria+ anaphora array-operations asdf let-plus select)
  :source (("git" "https://github.com/Lisp-Stat/numerical-utilities.git")))
 (:ql-project numpy-file-format :system-file numpy-file-format :system-name
  numpy-file-format :dependencies (asdf ieee-floats trivial-features) :source
  (("git" "https://github.com/marcoheisig/numpy-file-format.git")))
 (:ql-project numpy-file-format :system-file numpy-file-format :system-name
  numpy-file-format/tests :dependencies (numpy-file-format uiop) :source
  (("git" "https://github.com/marcoheisig/numpy-file-format.git")))
 (:ql-project nyaml :system-file nyaml :system-name nyaml :dependencies
  (alexandria asdf babel cl-ppcre esrap fare-quasiquote fare-quasiquote-extras
   parse-number trivia)
  :source (("git" "https://github.com/jasom/nyaml.git")))
 (:ql-project nyaml :system-file nyaml :system-name nyaml/test :dependencies
  (alexandria esrap nyaml parachute split-sequence yason) :source
  (("git" "https://github.com/jasom/nyaml.git")))
 (:ql-project nytpu.lisp-utils :system-file nytpu.lisp-utils :system-name
  nytpu.lisp-utils :dependencies (asdf) :source
  (("git" "https://git.sr.ht/~nytpu/nytpu.lisp-utils")))
 (:ql-project object-class :system-file object-class :system-name object-class
  :dependencies (asdf closer-mop compatible-metaclasses enhanced-find-class)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/object-class_latest.tar.gz")))
 (:ql-project object-class :system-file object-class_tests :system-name
  object-class_tests :dependencies
  (asdf compatible-metaclasses object-class parachute) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/object-class_latest.tar.gz")))
 (:ql-project oclcl :system-file oclcl :system-name oclcl :dependencies
  (alexandria asdf cffi cl-pattern cl-ppcre cl-reexport external-program
   lisp-namespace osicat split-sequence)
  :source (("git" "https://github.com/gos-k/oclcl.git")))
 (:ql-project oclcl :system-file oclcl-examples :system-name oclcl-examples
  :dependencies (asdf cl-oclapi imago oclcl) :source
  (("git" "https://github.com/gos-k/oclcl.git")))
 (:ql-project oclcl :system-file oclcl-test :system-name oclcl-test
  :dependencies (arrow-macros asdf oclcl prove prove-asdf) :source
  (("git" "https://github.com/gos-k/oclcl.git")))
 (:ql-project ode-blob :system-file ode-blob :system-name ode-blob
  :dependencies (asdf base-blobs bodge-blobs-support trivial-features) :source
  (("tagged-git" "https://github.com/borodust/ode-blob.git" "stable")))
 (:ql-project oe-encode :system-file oe-encode :system-name oe-encode
  :dependencies (babel) :source
  (("git" "https://github.com/mtstickney/oe-encode.git")))
 (:ql-project oe-encode :system-file oe-encode :system-name oe-encode-test
  :dependencies (clunit oe-encode) :source
  (("git" "https://github.com/mtstickney/oe-encode.git")))
 (:ql-project olc :system-file olc :system-name olc :dependencies (asdf)
  :source (("git" "https://codeberg.org/glv/olc.git")))
 (:ql-project olc :system-file olc :system-name olc/tests :dependencies
  (fiveam olc) :source (("git" "https://codeberg.org/glv/olc.git")))
 (:ql-project omer-count :system-file eclecticse.omer :system-name
  eclecticse.omer :dependencies (asdf local-time) :source
  (("git" "https://gitlab.com/DataLinkDroid/omer-count.git")))
 (:ql-project omglib :system-file omg :system-name omg :dependencies
  (asdf bordeaux-threads cl-jpeg clack find-port hunchentoot inferior-shell
   media-types osicat pngload skippy swank trivial-utf-8 uiop usocket
   websocket-driver-server)
  :source (("git" "https://github.com/hemml/OMGlib.git")))
 (:ql-project one-more-re-nightmare :system-file one-more-re-nightmare
  :system-name one-more-re-nightmare :dependencies
  (alexandria asdf babel bordeaux-threads dynamic-mixins esrap stealth-mixin
   trivia trivial-indent)
  :source (("git" "https://github.com/telekons/one-more-re-nightmare.git")))
 (:ql-project one-more-re-nightmare :system-file one-more-re-nightmare-simd
  :system-name one-more-re-nightmare-simd :dependencies
  (asdf one-more-re-nightmare) :source
  (("git" "https://github.com/telekons/one-more-re-nightmare.git")))
 (:ql-project one-more-re-nightmare :system-file one-more-re-nightmare-tests
  :system-name one-more-re-nightmare-tests :dependencies
  (asdf lparallel one-more-re-nightmare parachute) :source
  (("git" "https://github.com/telekons/one-more-re-nightmare.git")))
 (:ql-project oneliner :system-file cl-oneliner :system-name cl-oneliner
  :dependencies (cl-ppcre lisp-unit split-sequence) :source
  (("git" "https://github.com/mck-/oneliner.git")))
 (:ql-project ook :system-file ook :system-name ook :dependencies (asdf)
  :source (("git" "https://gitlab.common-lisp.net/ook/ook.git")))
 (:ql-project oook :system-file oook :system-name oook :dependencies
  (alexandria anaphora cl-inflector closer-mop clsql jonathan parse-number
   semantic-spinneret spinneret)
  :source (("git" "https://github.com/rmhsilva/oook.git")))
 (:ql-project open-location-code :system-file open-location-code :system-name
  open-location-code :dependencies (alexandria asdf iterate) :source
  (("git" "https://github.com/ralph-schleicher/open-location-code.git")))
 (:ql-project open-vrp :system-file open-vrp :system-name open-vrp
  :dependencies (alexandria fiveam open-vrp-lib vecto) :source
  (("git" "https://github.com/mck-/Open-VRP.git")))
 (:ql-project open-vrp :system-file open-vrp-lib :system-name open-vrp-lib
  :dependencies (alexandria cl-fad fiveam vecto) :source
  (("git" "https://github.com/mck-/Open-VRP.git")))
 (:ql-project openal-blob :system-file openal-blob :system-name openal-blob
  :dependencies (asdf base-blobs bodge-blobs-support trivial-features) :source
  (("tagged-git" "https://github.com/borodust/openal-blob.git" "stable")))
 (:ql-project openapi-generator :system-file openapi-generator :system-name
  openapi-generator :dependencies
  (alexandria asdf cl-hash-util cl-json-pointer cl-project cl-semver
   com.inuoe.jzon dexador json-mop listopia moptilities parse-float
   pathname-utils quri serapeum str yason)
  :source (("git" "https://codeberg.org/kilianmh/openapi-generator.git")))
 (:ql-project openapi-generator :system-file openapi-generator :system-name
  openapi-generator/test :dependencies (fiveam openapi-generator str) :source
  (("git" "https://codeberg.org/kilianmh/openapi-generator.git")))
 (:ql-project openid-key :system-file openid-key :system-name openid-key
  :dependencies
  (asdf cl-base64 dexador ironclad jonathan local-time quri trivial-rfc-1123)
  :source (("git" "https://github.com/kkazuo/openid-key.git")))
 (:ql-project openid-key :system-file openid-key-test :system-name
  openid-key-test :dependencies (1am asdf openid-key) :source
  (("git" "https://github.com/kkazuo/openid-key.git")))
 (:ql-project ops5 :system-file ops5 :system-name ops5 :dependencies (asdf)
  :source (("git" "https://github.com/sharplispers/ops5.git")))
 (:ql-project opticl :system-file opticl :system-name opticl :dependencies
  (alexandria asdf cl-jpeg cl-tga opticl-core pngload retrospectiff skippy
   zpng)
  :source (("git" "https://github.com/slyrus/opticl.git")))
 (:ql-project opticl :system-file opticl-doc :system-name opticl-doc
  :dependencies (alexandria asdf cl-containers cl-markdown opticl) :source
  (("git" "https://github.com/slyrus/opticl.git")))
 (:ql-project opticl :system-file opticl :system-name opticl/test :dependencies
  (fiveam opticl) :source (("git" "https://github.com/slyrus/opticl.git")))
 (:ql-project opticl-core :system-file opticl-core :system-name opticl-core
  :dependencies (alexandria) :source
  (("git" "https://github.com/slyrus/opticl-core.git")))
 (:ql-project optima :system-file optima :system-name optima :dependencies
  (alexandria closer-mop) :source
  (("git" "https://github.com/m2ym/optima.git")))
 (:ql-project optima :system-file optima.ppcre :system-name optima.ppcre
  :dependencies (alexandria cl-ppcre optima) :source
  (("git" "https://github.com/m2ym/optima.git")))
 (:ql-project optima :system-file optima.test :system-name optima.test
  :dependencies (eos optima optima.ppcre) :source
  (("git" "https://github.com/m2ym/optima.git")))
 (:ql-project org-davep-dict :system-file org-davep-dict :system-name
  org-davep-dict :dependencies (acl-compat asdf cl-ppcre split-sequence)
  :source (("git" "https://github.com/davep/org-davep-dict.git")))
 (:ql-project org-davep-dictrepl :system-file org-davep-dictrepl :system-name
  org-davep-dictrepl :dependencies (asdf org-davep-dict) :source
  (("git" "https://github.com/davep/org-davep-dictrepl.git")))
 (:ql-project org-sampler :system-file org-sampler :system-name org-sampler
  :dependencies (iterate) :source
  (("http" "http://nst.maraist.org/download/org-sampler-latest.tar.gz")))
 (:ql-project origin :system-file origin :system-name origin :dependencies
  (asdf mfiano-utils) :source (("git" "https://github.com/mfiano/origin.git")))
 (:ql-project origin :system-file origin.test :system-name origin.test
  :dependencies (asdf origin parachute) :source
  (("git" "https://github.com/mfiano/origin.git")))
 (:ql-project orizuru-orm :system-file orizuru-orm :system-name orizuru-orm
  :dependencies
  (alexandria anaphora asdf cl-fad cl-ppcre-unicode clos-fixtures closer-mop
   clunit2 dbi iterate local-time sxql uiop)
  :source (("git" "https://notabug.org/cage/orizuru-orm.git")))
 (:ql-project osc :system-file osc :system-name osc :dependencies
  (asdf usocket) :source (("git" "https://github.com/zzkt/osc.git")))
 (:ql-project osicat :system-file osicat :system-name osicat :dependencies
  (alexandria asdf cffi cffi-grovel trivial-features) :source
  (("git" "https://github.com/osicat/osicat.git")))
 (:ql-project osicat :system-file osicat :system-name osicat/tests
  :dependencies (osicat rt) :source
  (("git" "https://github.com/osicat/osicat.git")))
 (:ql-project ospm :system-file ospm :system-name ospm :dependencies
  (alexandria asdf calispel hu.dwim.defclass-star local-time moptilities
   named-readtables serapeum trivia)
  :source (("git" "https://github.com/atlas-engineer/ospm.git")))
 (:ql-project ospm :system-file ospm :system-name ospm/tests :dependencies
  (lisp-unit2 ospm) :source
  (("git" "https://github.com/atlas-engineer/ospm.git")))
 (:ql-project overlord :system-file overlord :system-name overlord
  :dependencies
  (alexandria asdf babel bit-smasher bordeaux-threads cl-murmurhash cl-ppcre
   cl-strftime cmd exit-hooks fset global-vars local-time lparallel
   named-readtables quickproject serapeum trivia trivial-file-size)
  :source (("git" "https://github.com/ruricolist/overlord.git")))
 (:ql-project oxenfurt :system-file oxenfurt :system-name oxenfurt
  :dependencies (asdf oxenfurt-dexador) :source
  (("git" "https://github.com/Shinmera/oxenfurt.git")))
 (:ql-project oxenfurt :system-file oxenfurt-core :system-name oxenfurt-core
  :dependencies (alexandria asdf babel documentation-utils yason) :source
  (("git" "https://github.com/Shinmera/oxenfurt.git")))
 (:ql-project oxenfurt :system-file oxenfurt-dexador :system-name
  oxenfurt-dexador :dependencies (asdf dexador oxenfurt-core) :source
  (("git" "https://github.com/Shinmera/oxenfurt.git")))
 (:ql-project oxenfurt :system-file oxenfurt-drakma :system-name
  oxenfurt-drakma :dependencies (asdf drakma oxenfurt-core) :source
  (("git" "https://github.com/Shinmera/oxenfurt.git")))
 (:ql-project pack :system-file pack :system-name pack :dependencies
  (alexandria ieee-floats) :source
  (("git" "https://github.com/soemraws/pack.git")))
 (:ql-project package-renaming :system-file package-renaming :system-name
  package-renaming :dependencies (alexandria) :source
  (("git" "https://gitlab.common-lisp.net/frideau/package-renaming.git")))
 (:ql-project package-renaming :system-file package-renaming-test :system-name
  package-renaming-test :dependencies (hu.dwim.stefil package-renaming) :source
  (("git" "https://gitlab.common-lisp.net/frideau/package-renaming.git")))
 (:ql-project packet :system-file packet :system-name packet :dependencies
  (ieee-floats) :source (("git" "https://github.com/fjames86/packet.git")))
 (:ql-project packet-crafting :system-file packet-crafting :system-name
  packet-crafting :dependencies (asdf lisp-binary) :source
  (("git" "https://github.com/mets634/packet-crafting.git")))
 (:ql-project packet-crafting :system-file packet-crafting :system-name
  packet-crafting/tests :dependencies (packet-crafting rove) :source
  (("git" "https://github.com/mets634/packet-crafting.git")))
 (:ql-project paiprolog :system-file paiprolog :system-name paiprolog
  :dependencies (asdf) :source (("git" "https://github.com/quek/paiprolog")))
 (:ql-project paiprolog :system-file unifgram :system-name unifgram
  :dependencies (asdf paiprolog) :source
  (("git" "https://github.com/quek/paiprolog")))
 (:ql-project pal :system-file bermuda :system-name bermuda :dependencies (pal)
  :source (("git" "https://gitlab.common-lisp.net/pal/pal.git")))
 (:ql-project pal :system-file pal :system-name pal :dependencies (cffi)
  :source (("git" "https://gitlab.common-lisp.net/pal/pal.git")))
 (:ql-project pandocl :system-file pandocl :system-name pandocl :dependencies
  (common-doc common-doc-contrib common-html parenml scriba thorn vertex)
  :source (("git" "https://github.com/CommonDoc/pandocl.git")))
 (:ql-project pango-markup :system-file pango-markup :system-name pango-markup
  :dependencies (asdf documentation-utils) :source
  (("git" "https://github.com/Shinmera/pango-markup.git")))
 (:ql-project papyrus :system-file papyrus :system-name papyrus :dependencies
  (asdf named-readtables) :source
  (("git" "https://github.com/asciian/papyrus.git")))
 (:ql-project parachute :system-file parachute :system-name parachute
  :dependencies (asdf documentation-utils form-fiddle trivial-custom-debugger)
  :source (("git" "https://github.com/Shinmera/parachute.git")))
 (:ql-project parachute :system-file parachute-fiveam :system-name
  parachute-fiveam :dependencies (asdf parachute) :source
  (("git" "https://github.com/Shinmera/parachute.git")))
 (:ql-project parachute :system-file parachute-lisp-unit :system-name
  parachute-lisp-unit :dependencies (asdf parachute) :source
  (("git" "https://github.com/Shinmera/parachute.git")))
 (:ql-project parachute :system-file parachute-prove :system-name
  parachute-prove :dependencies (asdf cl-ppcre parachute) :source
  (("git" "https://github.com/Shinmera/parachute.git")))
 (:ql-project parameterized-function :system-file parameterized-function
  :system-name parameterized-function :dependencies (asdf interface) :source
  (("git" "https://github.com/stylewarning/parameterized-function.git")))
 (:ql-project paren-files :system-file paren-files :system-name paren-files
  :dependencies (parenscript) :source
  (("git" "https://github.com/gonzojive/paren-files")))
 (:ql-project paren-test :system-file arith :system-name arith :dependencies
  (paren-files paren-test parenscript) :source
  (("git" "https://github.com/gonzojive/paren-test.git")))
 (:ql-project paren-test :system-file paren-test :system-name paren-test
  :dependencies (paren-files parenscript trivial-shell) :source
  (("git" "https://github.com/gonzojive/paren-test.git")))
 (:ql-project paren-util :system-file paren-util :system-name paren-util
  :dependencies (paren-files parenscript) :source
  (("git" "https://github.com/gonzojive/paren-util")))
 (:ql-project paren6 :system-file paren6 :system-name paren6 :dependencies
  (alexandria asdf parenscript) :source
  (("git" "https://github.com/BnMcGn/paren6.git")))
 (:ql-project paren6 :system-file test-paren6 :system-name test-paren6
  :dependencies (asdf external-program paren6 parenscript) :source
  (("git" "https://github.com/BnMcGn/paren6.git")))
 (:ql-project parenml :system-file parenml :system-name parenml :dependencies
  (common-doc-plump esrap plump) :source
  (("git" "https://github.com/CommonDoc/parenml.git")))
 (:ql-project parenml :system-file parenml-test :system-name parenml-test
  :dependencies (fiveam parenml) :source
  (("git" "https://github.com/CommonDoc/parenml.git")))
 (:ql-project parenscript :system-file parenscript :system-name parenscript
  :dependencies (anaphora asdf cl-ppcre named-readtables) :source
  (("https"
    "https://common-lisp.net/project/parenscript/release/parenscript-latest.tgz")))
 (:ql-project parenscript :system-file parenscript.tests :system-name
  parenscript.tests :dependencies (asdf cl-js fiveam parenscript) :source
  (("https"
    "https://common-lisp.net/project/parenscript/release/parenscript-latest.tgz")))
 (:ql-project parenscript-classic :system-file parenscript-classic :system-name
  parenscript-classic :dependencies nil :source
  (("darcs" "http://darcs.unknownlamer.org/parenscript-classic")))
 (:ql-project parse :system-file parse :system-name parse :dependencies (asdf)
  :source (("git" "https://github.com/massung/parse.git")))
 (:ql-project parse-declarations :system-file parse-declarations-1.0
  :system-name parse-declarations-1.0 :dependencies nil :source
  (("git"
    "https://gitlab.common-lisp.net/parse-declarations/parse-declarations.git")))
 (:ql-project parse-float :system-file parse-float :system-name parse-float
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/soemraws/parse-float.git")))
 (:ql-project parse-float :system-file parse-float :system-name
  parse-float-tests :dependencies (lisp-unit parse-float) :source
  (("git" "https://github.com/soemraws/parse-float.git")))
 (:ql-project parse-front-matter :system-file parse-front-matter :system-name
  parse-front-matter :dependencies (cl-ppcre) :source
  (("git" "https://github.com/eudoxia0/parse-front-matter.git")))
 (:ql-project parse-front-matter :system-file parse-front-matter-test
  :system-name parse-front-matter-test :dependencies
  (fiveam parse-front-matter) :source
  (("git" "https://github.com/eudoxia0/parse-front-matter.git")))
 (:ql-project parse-js :system-file parse-js :system-name parse-js
  :dependencies nil :source
  (("git" "https://github.com/marijnh/parse-js.git") nil))
 (:ql-project parse-number :system-file parse-number :system-name parse-number
  :dependencies (asdf) :source
  (("latest-github-release"
    "https://github.com/sharplispers/parse-number.git")))
 (:ql-project parse-number :system-file parse-number :system-name
  parse-number/tests :dependencies (parse-number) :source
  (("latest-github-release"
    "https://github.com/sharplispers/parse-number.git")))
 (:ql-project parseltongue :system-file parseltongue :system-name parseltongue
  :dependencies (lisp-unit) :source
  (("git" "https://github.com/VincentToups/parseltongue.git")))
 (:ql-project parseq :system-file parseq :system-name parseq :dependencies
  (asdf) :source (("git" "https://github.com/mrossini-ethz/parseq.git")))
 (:ql-project parseq :system-file parseq :system-name parseq/test :dependencies
  (parseq) :source (("git" "https://github.com/mrossini-ethz/parseq.git")))
 (:ql-project parser.common-rules :system-file parser.common-rules :system-name
  parser.common-rules :dependencies
  (alexandria asdf esrap let-plus split-sequence) :source
  (("git" "https://github.com/scymtym/parser.common-rules.git")))
 (:ql-project parser.common-rules :system-file parser.common-rules.operators
  :system-name parser.common-rules.operators :dependencies
  (alexandria architecture.builder-protocol asdf esrap let-plus
   parser.common-rules)
  :source (("git" "https://github.com/scymtym/parser.common-rules.git")))
 (:ql-project parser.common-rules :system-file parser.common-rules.operators
  :system-name parser.common-rules.operators/test :dependencies
  (alexandria fiveam let-plus parser.common-rules
   parser.common-rules.operators)
  :source (("git" "https://github.com/scymtym/parser.common-rules.git")))
 (:ql-project parser.common-rules :system-file parser.common-rules :system-name
  parser.common-rules/test :dependencies
  (alexandria fiveam let-plus parser.common-rules) :source
  (("git" "https://github.com/scymtym/parser.common-rules.git")))
 (:ql-project parser.ini :system-file parser.ini :system-name parser.ini
  :dependencies
  (alexandria architecture.builder-protocol asdf esrap let-plus more-conditions
   parser.common-rules)
  :source (("git" "https://github.com/scymtym/parser.ini.git")))
 (:ql-project parser.ini :system-file parser.ini :system-name parser.ini/test
  :dependencies (alexandria fiveam let-plus parser.ini) :source
  (("git" "https://github.com/scymtym/parser.ini.git")))
 (:ql-project parsnip :system-file parsnip :system-name parsnip :dependencies
  (alexandria asdf) :source (("git" "https://git.sr.ht/~shunter/parsnip")))
 (:ql-project parsnip :system-file parsnip :system-name parsnip/examples
  :dependencies (alexandria parsnip) :source
  (("git" "https://git.sr.ht/~shunter/parsnip")))
 (:ql-project parsnip :system-file parsnip :system-name parsnip/test
  :dependencies (alexandria parachute parsnip) :source
  (("git" "https://git.sr.ht/~shunter/parsnip")))
 (:ql-project patchwork :system-file patchwork :system-name patchwork
  :dependencies (asdf binpack mfiano-utils opticl uiop) :source
  (("git" "https://github.com/mfiano/patchwork.git")))
 (:ql-project path-parse :system-file path-parse :system-name path-parse
  :dependencies (split-sequence uiop) :source
  (("git" "https://github.com/eudoxia0/path-parse.git")))
 (:ql-project path-parse :system-file path-parse-test :system-name
  path-parse-test :dependencies (fiveam path-parse) :source
  (("git" "https://github.com/eudoxia0/path-parse.git")))
 (:ql-project path-string :system-file path-string :system-name path-string
  :dependencies (cl-ppcre split-sequence uiop) :source
  (("git" "https://github.com/wemeetagain/path-string.git")))
 (:ql-project path-string :system-file path-string-test :system-name
  path-string-test :dependencies (path-string prove prove-asdf) :source
  (("git" "https://github.com/wemeetagain/path-string.git")))
 (:ql-project pathname-utils :system-file pathname-utils :system-name
  pathname-utils :dependencies (asdf trivial-features) :source
  (("git" "https://github.com/Shinmera/pathname-utils.git")))
 (:ql-project pathname-utils :system-file pathname-utils-test :system-name
  pathname-utils-test :dependencies (asdf parachute pathname-utils) :source
  (("git" "https://github.com/Shinmera/pathname-utils.git")))
 (:ql-project patron :system-file patron :system-name patron :dependencies
  (bordeaux-threads) :source (("git" "https://github.com/vy/patron.git")))
 (:ql-project pcall :system-file pcall :system-name pcall :dependencies
  (bordeaux-threads pcall-queue) :source
  (("https" "https://marijnhaverbeke.nl/pcall/pcall.tgz")))
 (:ql-project pcall :system-file pcall-queue :system-name pcall-queue
  :dependencies (bordeaux-threads) :source
  (("https" "https://marijnhaverbeke.nl/pcall/pcall.tgz")))
 (:ql-project pcall :system-file pcall :system-name pcall-tests :dependencies
  (fiveam pcall) :source
  (("https" "https://marijnhaverbeke.nl/pcall/pcall.tgz")))
 (:ql-project percent-encoding :system-file percent-encoding :system-name
  percent-encoding :dependencies (anaphora babel) :source
  (("git" "https://github.com/llibra/percent-encoding.git")))
 (:ql-project percent-encoding :system-file percent-encoding :system-name
  percent-encoding-test :dependencies (fiveam percent-encoding) :source
  (("git" "https://github.com/llibra/percent-encoding.git")))
 (:ql-project perceptual-hashes :system-file perceptual-hashes :system-name
  perceptual-hashes :dependencies
  (alexandria array-operations asdf imago serapeum) :source
  (("git" "https://github.com/shamazmazum/perceptual-hashes.git")))
 (:ql-project perceptual-hashes :system-file perceptual-hashes :system-name
  perceptual-hashes/tests :dependencies (fiveam perceptual-hashes) :source
  (("git" "https://github.com/shamazmazum/perceptual-hashes.git")))
 (:ql-project periodic-table :system-file periodic-table :system-name
  periodic-table :dependencies nil :source
  (("https"
    "https://common-lisp.net/project/chemboy/periodic-table-latest.tar.gz")))
 (:ql-project periods :system-file periods :system-name periods :dependencies
  (asdf local-time) :source
  (("git" "https://github.com/jwiegley/periods.git")))
 (:ql-project periods :system-file periods-series :system-name periods-series
  :dependencies (asdf periods series) :source
  (("git" "https://github.com/jwiegley/periods.git")))
 (:ql-project perlre :system-file perlre :system-name perlre :dependencies
  (asdf cl-interpol cl-ppcre let-over-lambda prove trivia trivia.ppcre) :source
  (("git" "https://github.com/jschatzer/perlre.git")))
 (:ql-project pero :system-file pero :system-name pero :dependencies
  (alexandria asdf local-time) :source
  (("git" "https://github.com/walpurgisnatch/pero.git")))
 (:ql-project persistent-tables :system-file persistent-tables :system-name
  persistent-tables :dependencies (lisp-unit random-access-lists) :source
  (("git" "https://github.com/VincentToups/persistent-tables.git")))
 (:ql-project persistent-variables :system-file persistent-variables
  :system-name persistent-variables :dependencies nil :source
  (("git" "https://github.com/WarrenWilkinson/persistent-variables.git")))
 (:ql-project persistent-variables :system-file persistent-variables
  :system-name persistent-variables.test :dependencies (persistent-variables)
  :source
  (("git" "https://github.com/WarrenWilkinson/persistent-variables.git")))
 (:ql-project petalisp :system-file petalisp :system-name petalisp
  :dependencies (asdf petalisp.api petalisp.test-suite) :source
  (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petalisp :system-file petalisp.api :system-name petalisp.api
  :dependencies
  (alexandria asdf petalisp.codegen petalisp.core petalisp.ir
   petalisp.native-backend petalisp.utilities split-sequence trivia
   trivial-macroexpand-all)
  :source (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petalisp :system-file petalisp.codegen :system-name
  petalisp.codegen :dependencies
  (alexandria asdf cffi petalisp.core petalisp.ir petalisp.utilities trivia
   trivial-macroexpand-all ucons)
  :source (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petalisp :system-file petalisp.core :system-name petalisp.core
  :dependencies
  (alexandria asdf bordeaux-threads lparallel petalisp.utilities trivia typo)
  :source (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petalisp :system-file petalisp.examples :system-name
  petalisp.examples :dependencies (asdf numpy-file-format petalisp.api) :source
  (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petalisp :system-file petalisp.graphviz :system-name
  petalisp.graphviz :dependencies
  (alexandria asdf cl-dot closer-mop petalisp petalisp.core petalisp.ir
   petalisp.utilities trivial-features uiop)
  :source (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petalisp :system-file petalisp.ir :system-name petalisp.ir
  :dependencies
  (alexandria asdf petalisp.core petalisp.utilities priority-queue
   split-sequence ucons)
  :source (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petalisp :system-file petalisp.native-backend :system-name
  petalisp.native-backend :dependencies
  (alexandria asdf bordeaux-threads cffi lparallel petalisp.codegen
   petalisp.core petalisp.ir petalisp.utilities static-vectors trivia
   trivial-garbage typo)
  :source (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petalisp :system-file petalisp.test-suite :system-name
  petalisp.test-suite :dependencies
  (asdf bordeaux-threads closer-mop petalisp.api petalisp.examples
   petalisp.native-backend)
  :source (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petalisp :system-file petalisp.utilities :system-name
  petalisp.utilities :dependencies
  (alexandria asdf bordeaux-threads queues.priority-queue trivia
   trivial-garbage)
  :source (("git" "https://github.com/marcoheisig/Petalisp.git")))
 (:ql-project petit.package-utils :system-file petit.package-utils :system-name
  petit.package-utils :dependencies nil :source
  (("git" "https://github.com/ichimal/petit.package-utils.git")))
 (:ql-project petit.string-utils :system-file petit.string-utils :system-name
  petit.string-utils :dependencies nil :source
  (("git" "https://github.com/ichimal/petit.string-utils.git")))
 (:ql-project petit.string-utils :system-file petit.string-utils-test
  :system-name petit.string-utils-test :dependencies (petit.string-utils rt)
  :source (("git" "https://github.com/ichimal/petit.string-utils.git")))
 (:ql-project petri :system-file petri :system-name petri :dependencies
  (1am alexandria asdf closer-mop phoe-toolbox split-sequence) :source
  (("git" "https://github.com/phoe/petri.git")))
 (:ql-project petri :system-file petri :system-name petri/graph :dependencies
  (cl-dot petri) :source (("git" "https://github.com/phoe/petri.git")))
 (:ql-project petri :system-file petri :system-name petri/test :dependencies
  (1am alexandria bordeaux-threads lparallel petri trivial-backtrace) :source
  (("git" "https://github.com/phoe/petri.git")))
 (:ql-project petri :system-file petri :system-name petri/threaded
  :dependencies (bordeaux-threads lparallel petri trivial-backtrace) :source
  (("git" "https://github.com/phoe/petri.git")))
 (:ql-project pettomato-deque :system-file pettomato-deque :system-name
  pettomato-deque :dependencies nil :source
  (("git" "https://github.com/austinhaas/pettomato-deque.git")))
 (:ql-project pettomato-deque :system-file pettomato-deque-tests :system-name
  pettomato-deque-tests :dependencies (fiveam pettomato-deque) :source
  (("git" "https://github.com/austinhaas/pettomato-deque.git")))
 (:ql-project pettomato-indexed-priority-queue :system-file
  pettomato-indexed-priority-queue :system-name
  pettomato-indexed-priority-queue :dependencies nil :source
  (("git"
    "https://github.com/austinhaas/pettomato-indexed-priority-queue.git")))
 (:ql-project pettomato-indexed-priority-queue :system-file
  pettomato-indexed-priority-queue-tests :system-name
  pettomato-indexed-priority-queue-tests :dependencies
  (fiveam pettomato-indexed-priority-queue) :source
  (("git"
    "https://github.com/austinhaas/pettomato-indexed-priority-queue.git")))
 (:ql-project pg :system-file pg :system-name pg :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/pg/pg.git")))
 (:ql-project pgloader :system-file pgloader :system-name pgloader
  :dependencies
  (alexandria asdf cl-base64 cl-csv cl-fad cl-log cl-markdown cl-mustache
   cl-postgres cl-ppcre closer-mop command-line-arguments db3 drakma esrap
   flexi-streams ixf local-time lparallel metabang-bind mssql postmodern
   py-configparser qmynd quri simple-date split-sequence sqlite
   trivial-backtrace uiop usocket uuid yason zs3)
  :source
  (("latest-github-release" "https://github.com/dimitri/pgloader.git") nil
   nil))
 (:ql-project phoe-toolbox :system-file phoe-toolbox :system-name phoe-toolbox
  :dependencies (alexandria asdf closer-mop trivial-indent) :source
  (("git" "https://github.com/phoe/phoe-toolbox.git")))
 (:ql-project phoe-toolbox :system-file phoe-toolbox :system-name
  phoe-toolbox/bag :dependencies (alexandria) :source
  (("git" "https://github.com/phoe/phoe-toolbox.git")))
 (:ql-project phos :system-file phos :system-name phos :dependencies
  (asdf cl+ssl cl-ppcre quri trivia usocket) :source
  (("git" "https://github.com/omar-polo/phos.git")))
 (:ql-project phos :system-file phos :system-name phos/nodgui :dependencies
  (nodgui phos) :source (("git" "https://github.com/omar-polo/phos.git")))
 (:ql-project phos :system-file phos :system-name phos/test :dependencies
  (clunit2 phos) :source (("git" "https://github.com/omar-polo/phos.git")))
 (:ql-project physical-quantities :system-file physical-quantities :system-name
  physical-quantities :dependencies (asdf parseq) :source
  (("git" "https://github.com/mrossini-ethz/physical-quantities.git")))
 (:ql-project physical-quantities :system-file physical-quantities :system-name
  physical-quantities/test :dependencies (physical-quantities) :source
  (("git" "https://github.com/mrossini-ethz/physical-quantities.git")))
 (:ql-project picl :system-file picl :system-name picl :dependencies
  (alexandria asdf defclass-std) :source
  (("git" "https://github.com/anlsh/picl.git")))
 (:ql-project picl :system-file picl :system-name picl/iterate :dependencies
  (alexandria iterate picl) :source
  (("git" "https://github.com/anlsh/picl.git")))
 (:ql-project picl :system-file picl :system-name picl/tests :dependencies
  (alexandria fiveam generic-cl iterate picl) :source
  (("git" "https://github.com/anlsh/picl.git")))
 (:ql-project piggyback-parameters :system-file piggyback-parameters
  :system-name piggyback-parameters :dependencies
  (asdf trivial-hashtable-serialize trivial-json-codec trivial-pooled-database)
  :source (("git" "https://gitlab.com/ediethelm/piggyback-parameters.git")))
 (:ql-project piggyback-parameters :system-file piggyback-parameters
  :system-name piggyback-parameters/test :dependencies
  (fiveam piggyback-parameters) :source
  (("git" "https://gitlab.com/ediethelm/piggyback-parameters.git")))
 (:ql-project pileup :system-file pileup :system-name pileup :dependencies
  (alexandria) :source (("git" "https://github.com/nikodemus/pileup")))
 (:ql-project pileup :system-file pileup :system-name pileup-tests
  :dependencies (hu.dwim.stefil pileup) :source
  (("git" "https://github.com/nikodemus/pileup")))
 (:ql-project pipes :system-file pipes :system-name pipes :dependencies nil
  :source (("kmr-git" "pipes")))
 (:ql-project piping :system-file piping :system-name piping :dependencies
  (asdf) :source (("git" "https://github.com/Shinmera/piping.git")))
 (:ql-project pithy-xml :system-file pithy-xml :system-name pithy-xml
  :dependencies nil :source
  (("git" "https://github.com/frodef/pithy-xml.git")))
 (:ql-project pjlink :system-file pjlink :system-name pjlink :dependencies
  (alexandria asdf bordeaux-threads ip-interfaces md5 split-sequence
   trivial-garbage usocket)
  :source (("git" "https://github.com/Zulu-Inuoe/pjlink.git")))
 (:ql-project pk-serialize :system-file pk-serialize :system-name pk-serialize
  :dependencies (asdf closer-mop) :source
  (("git" "https://github.com/plkrueger/pk-serialize.git")))
 (:ql-project pkg-doc :system-file pkg-doc :system-name pkg-doc :dependencies
  (alexandria asdf clim-widgets manifest nsort repl-utilities stdutils) :source
  (("git" "https://github.com/jschatzer/pkg-doc.git")))
 (:ql-project place-modifiers :system-file place-modifiers :system-name
  place-modifiers :dependencies (cartesian-product-switch map-bind) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/place-modifiers_latest.tar.gz")))
 (:ql-project place-utils :system-file place-utils :system-name place-utils
  :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/place-utils_latest.tar.gz")))
 (:ql-project planks :system-file planks :system-name planks :dependencies
  (babel bordeaux-threads closer-mop ironclad rucksack trivial-garbage) :source
  (("git" "https://github.com/drewc/planks") nil))
 (:ql-project plexippus-xpath :system-file xpath :system-name xpath
  :dependencies (asdf cl-ppcre cxml parse-number yacc) :source
  (("git" "https://github.com/sharplispers/xpath.git") nil))
 (:ql-project plexippus-xpath :system-file xpath :system-name xpath/test
  :dependencies (xpath) :source
  (("git" "https://github.com/sharplispers/xpath.git") nil))
 (:ql-project plokami :system-file plokami :system-name plokami :dependencies
  (asdf cffi uiop) :source
  (("git" "https://github.com/atomontage/plokami.git") nil))
 (:ql-project plot :system-file plot :system-name plot :dependencies
  (alexandria alexandria+ asdf cl-ppcre data-frame) :source
  (("git" "https://github.com/Lisp-Stat/plot.git")))
 (:ql-project plot :system-file plot :system-name plot/text :dependencies
  (cl-spark iterate num-utils select) :source
  (("git" "https://github.com/Lisp-Stat/plot.git")))
 (:ql-project plot :system-file plot :system-name plot/vega :dependencies
  (cl-who dfio duologue lass let-plus lisp-stat local-time parenscript plot
   quri yason)
  :source (("git" "https://github.com/Lisp-Stat/plot.git")))
 (:ql-project pludeck :system-file pludeck :system-name pludeck :dependencies
  (asdf plump) :source (("git" "https://github.com/jorams/pludeck.git")))
 (:ql-project plump :system-file plump :system-name plump :dependencies
  (array-utils asdf documentation-utils) :source
  (("git" "https://github.com/Shinmera/plump.git")))
 (:ql-project plump :system-file plump-dom :system-name plump-dom :dependencies
  (asdf plump) :source (("git" "https://github.com/Shinmera/plump.git")))
 (:ql-project plump :system-file plump-lexer :system-name plump-lexer
  :dependencies (asdf plump) :source
  (("git" "https://github.com/Shinmera/plump.git")))
 (:ql-project plump :system-file plump-parser :system-name plump-parser
  :dependencies (asdf plump) :source
  (("git" "https://github.com/Shinmera/plump.git")))
 (:ql-project plump-bundle :system-file plump-bundle :system-name plump-bundle
  :dependencies (asdf babel closer-mop fast-io plump-dom) :source
  (("git" "https://github.com/Shinmera/plump-bundle.git")))
 (:ql-project plump-sexp :system-file plump-sexp :system-name plump-sexp
  :dependencies (asdf plump) :source
  (("git" "https://github.com/Shinmera/plump-sexp.git")))
 (:ql-project plump-tex :system-file plump-tex :system-name plump-tex
  :dependencies (asdf cl-ppcre plump) :source
  (("git" "https://github.com/Shinmera/plump-tex.git")))
 (:ql-project plump-tex :system-file plump-tex-test :system-name plump-tex-test
  :dependencies (asdf fiveam plump-tex) :source
  (("git" "https://github.com/Shinmera/plump-tex.git")))
 (:ql-project png-read :system-file png-read :system-name png-read
  :dependencies (babel chipz iterate) :source
  (("git" "https://github.com/Ramarren/png-read.git")))
 (:ql-project pngload :system-file pngload :system-name pngload :dependencies
  (3bz alexandria asdf cffi mmap parse-float static-vectors swap-bytes uiop
   zpb-exif)
  :source (("git" "https://github.com/bufferswap/pngload.git")))
 (:ql-project pngload :system-file pngload.test :system-name pngload.test
  :dependencies (alexandria asdf local-time opticl png-read pngload uiop)
  :source (("git" "https://github.com/bufferswap/pngload.git")))
 (:ql-project poler :system-file poler :system-name poler :dependencies (asdf)
  :source (("git" "https://github.com/carrotflakes/poler.git")))
 (:ql-project poler :system-file poler-test :system-name poler-test
  :dependencies (asdf poler prove prove-asdf) :source
  (("git" "https://github.com/carrotflakes/poler.git")))
 (:ql-project policy-cond :system-file policy-cond :system-name policy-cond
  :dependencies (asdf) :source
  (("git" "https://github.com/stylewarning/policy-cond.git")))
 (:ql-project polisher :system-file polisher :system-name polisher
  :dependencies (asdf cl-ppcre) :source
  (("git" "https://github.com/mrcdr/polisher.git")))
 (:ql-project polisher :system-file polisher.test :system-name polisher.test
  :dependencies (1am asdf polisher) :source
  (("git" "https://github.com/mrcdr/polisher.git")))
 (:ql-project polymorphic-functions :system-file polymorphic-functions
  :system-name polymorphic-functions :dependencies
  (alexandria asdf cl-form-types closer-mop compiler-macro-notes ctype
   extensible-compound-types fiveam introspect-environment let-plus optima
   split-sequence trivial-garbage)
  :source (("git" "https://github.com/digikar99/polymorphic-functions.git")))
 (:ql-project polymorphic-functions :system-file polymorphic-functions
  :system-name polymorphic-functions/specializing :dependencies
  (polymorphic-functions) :source
  (("git" "https://github.com/digikar99/polymorphic-functions.git")))
 (:ql-project polymorphic-functions :system-file polymorphic-functions
  :system-name polymorphic-functions/swank :dependencies
  (polymorphic-functions swank) :source
  (("git" "https://github.com/digikar99/polymorphic-functions.git")))
 (:ql-project pooler :system-file pooler :system-name pooler :dependencies nil
  :source (("git" "https://github.com/quasi/pooler.git")))
 (:ql-project portable-condition-system :system-file portable-condition-system
  :system-name portable-condition-system :dependencies
  (alexandria asdf split-sequence) :source
  (("git" "https://github.com/phoe/portable-condition-system.git")))
 (:ql-project portable-condition-system :system-file
  portable-condition-system.integration :system-name
  portable-condition-system.integration :dependencies
  (asdf portable-condition-system trivial-custom-debugger) :source
  (("git" "https://github.com/phoe/portable-condition-system.git")))
 (:ql-project portable-condition-system :system-file
  portable-condition-system.integration :system-name
  portable-condition-system.integration/test :dependencies
  (portable-condition-system.integration) :source
  (("git" "https://github.com/phoe/portable-condition-system.git")))
 (:ql-project portable-condition-system :system-file portable-condition-system
  :system-name portable-condition-system/test :dependencies
  (portable-condition-system) :source
  (("git" "https://github.com/phoe/portable-condition-system.git")))
 (:ql-project portable-threads :system-file portable-threads :system-name
  portable-threads :dependencies (asdf) :source
  (("git" "https://github.com/binghe/portable-threads.git")))
 (:ql-project portable-threads :system-file portable-threads :system-name
  portable-threads/test :dependencies (portable-threads) :source
  (("git" "https://github.com/binghe/portable-threads.git")))
 (:ql-project portableaserve :system-file acl-compat :system-name acl-compat
  :dependencies (asdf cl-fad cl-ppcre ironclad puri) :source
  (("git" "git://git.code.sf.net/p/portableaserve/git")))
 (:ql-project portableaserve :system-file aserve :system-name aserve
  :dependencies (acl-compat asdf htmlgen) :source
  (("git" "git://git.code.sf.net/p/portableaserve/git")))
 (:ql-project portableaserve :system-file htmlgen :system-name htmlgen
  :dependencies (acl-compat asdf) :source
  (("git" "git://git.code.sf.net/p/portableaserve/git")))
 (:ql-project portableaserve :system-file webactions :system-name webactions
  :dependencies (acl-compat asdf aserve htmlgen) :source
  (("git" "git://git.code.sf.net/p/portableaserve/git")))
 (:ql-project portal :system-file portal :system-name portal :dependencies
  (alexandria arrows asdf cl-base64 flexi-streams global-vars ironclad
   parse-float str usocket-server)
  :source (("git" "https://github.com/charJe/portal.git")))
 (:ql-project positional-lambda :system-file positional-lambda :system-name
  positional-lambda :dependencies (map-bind) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/positional-lambda_latest.tar.gz")))
 (:ql-project posix-shm :system-file posix-shm :system-name posix-shm
  :dependencies (alexandria asdf cffi cffi-grovel trivial-features) :source
  (("git" "https://git.sr.ht/~shunter/posix-shm")))
 (:ql-project posix-shm :system-file posix-shm :system-name posix-shm/ffi
  :dependencies (cffi cffi-grovel) :source
  (("git" "https://git.sr.ht/~shunter/posix-shm")))
 (:ql-project posix-shm :system-file posix-shm :system-name posix-shm/test
  :dependencies (osicat parachute posix-shm) :source
  (("git" "https://git.sr.ht/~shunter/posix-shm")))
 (:ql-project postmodern :system-file cl-postgres :system-name cl-postgres
  :dependencies (asdf cl-base64 ironclad md5 split-sequence uax-15) :source
  (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern :system-file cl-postgres :system-name
  cl-postgres/simple-date-tests :dependencies
  (cl-postgres fiveam s-sql simple-date uiop) :source
  (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern :system-file cl-postgres :system-name
  cl-postgres/tests :dependencies (cl-postgres fiveam uiop) :source
  (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern :system-file postmodern :system-name postmodern
  :dependencies
  (alexandria asdf bordeaux-threads cl-postgres closer-mop global-vars s-sql
   split-sequence uiop)
  :source (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern :system-file postmodern :system-name postmodern/tests
  :dependencies
  (cl-postgres cl-postgres+local-time fiveam local-time postmodern s-sql
   simple-date uiop)
  :source (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern :system-file s-sql :system-name s-sql :dependencies
  (alexandria asdf cl-postgres) :source
  (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern :system-file s-sql :system-name s-sql/tests
  :dependencies (cl-postgres fiveam postmodern s-sql uiop) :source
  (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern :system-file simple-date :system-name simple-date
  :dependencies (asdf) :source
  (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern :system-file simple-date :system-name
  simple-date/postgres-glue :dependencies
  (cl-postgres fiveam s-sql simple-date uiop) :source
  (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern :system-file simple-date :system-name
  simple-date/tests :dependencies (fiveam simple-date) :source
  (("git" "https://github.com/marijnh/Postmodern.git")))
 (:ql-project postmodern-localtime :system-file postmodern-localtime
  :system-name postmodern-localtime :dependencies
  (asdf cl-postgres local-time postmodern) :source
  (("git" "https://github.com/radisb/postmodern-localtime.git")))
 (:ql-project postmodernity :system-file postmodernity :system-name
  postmodernity :dependencies (alexandria postmodern) :source
  (("git" "https://github.com/michaeljforster/postmodernity.git")))
 (:ql-project postoffice :system-file postoffice :system-name postoffice
  :dependencies (acl-compat) :source (("kmr-git" "postoffice")))
 (:ql-project pounds :system-file pounds :system-name pounds :dependencies
  (babel bordeaux-threads cffi nibbles trivial-gray-streams) :source
  (("git" "https://github.com/fjames86/pounds.git")))
 (:ql-project pp-toml :system-file pp-toml :system-name pp-toml :dependencies
  (alexandria asdf cl-ppcre esrap generic-comparability local-time parse-number
   split-sequence)
  :source (("git" "https://github.com/pnathan/pp-toml.git")))
 (:ql-project pp-toml :system-file pp-toml-tests :system-name pp-toml-tests
  :dependencies
  (alexandria asdf cl-ppcre esrap fiveam generic-comparability local-time
   parse-number pp-toml split-sequence)
  :source (("git" "https://github.com/pnathan/pp-toml.git")))
 (:ql-project ppath :system-file ppath :system-name ppath :dependencies
  (alexandria asdf cffi cl-ppcre osicat split-sequence trivial-features uiop)
  :source (("git" "https://codeberg.org/fourier/ppath.git")))
 (:ql-project ppath :system-file ppath-test :system-name ppath-test
  :dependencies (alexandria asdf cl-fad ppath prove prove-asdf) :source
  (("git" "https://codeberg.org/fourier/ppath.git")))
 (:ql-project practical-cl :system-file pcl-binary-data :system-name
  pcl-binary-data :dependencies (asdf pcl-macro-utilities) :source
  (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-html :system-name pcl-html
  :dependencies (asdf pcl-macro-utilities) :source
  (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-id3v2 :system-name pcl-id3v2
  :dependencies (asdf pcl-binary-data pcl-pathnames) :source
  (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-macro-utilities :system-name
  pcl-macro-utilities :dependencies (asdf) :source
  (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-mp3-browser :system-name
  pcl-mp3-browser :dependencies
  (asdf bordeaux-threads pcl-html pcl-id3v2 pcl-mp3-database pcl-shoutcast
   pcl-url-function)
  :source (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-mp3-database :system-name
  pcl-mp3-database :dependencies
  (asdf pcl-id3v2 pcl-macro-utilities pcl-pathnames) :source
  (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-pathnames :system-name
  pcl-pathnames :dependencies (asdf) :source
  (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-shoutcast :system-name
  pcl-shoutcast :dependencies
  (asdf pcl-html pcl-id3v2 pcl-macro-utilities pcl-mp3-database pcl-pathnames
   pcl-url-function)
  :source (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-simple-database :system-name
  pcl-simple-database :dependencies (asdf) :source
  (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-spam :system-name pcl-spam
  :dependencies (asdf cl-ppcre pcl-pathnames pcl-test-framework) :source
  (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-test-framework :system-name
  pcl-test-framework :dependencies (asdf pcl-macro-utilities) :source
  (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file pcl-url-function :system-name
  pcl-url-function :dependencies (asdf aserve pcl-html pcl-macro-utilities)
  :source (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project practical-cl :system-file practical-cl :system-name practical-cl
  :dependencies
  (asdf pcl-binary-data pcl-html pcl-id3v2 pcl-macro-utilities pcl-mp3-browser
   pcl-mp3-database pcl-pathnames pcl-shoutcast pcl-simple-database pcl-spam
   pcl-test-framework pcl-url-function)
  :source (("git" "https://github.com/snmsts/practical-cl.git")))
 (:ql-project prbs :system-file prbs :system-name prbs :dependencies (asdf)
  :source (("git" "https://github.com/jlowder/prbs.git")))
 (:ql-project prbs :system-file prbs-docs :system-name prbs-docs :dependencies
  (asdf cl-gendoc prbs) :source
  (("git" "https://github.com/jlowder/prbs.git")))
 (:ql-project prepl :system-file prepl :system-name prepl :dependencies
  (asdf bordeaux-threads closer-mop conium iterate named-readtables) :source
  (("git" "https://github.com/sharplispers/prepl.git") nil))
 (:ql-project prettier-builtins :system-file prettier-builtins :system-name
  prettier-builtins :dependencies (alexandria asdf uiop) :source
  (("git" "https://github.com/digikar99/prettier-builtins.git")))
 (:ql-project pretty-function :system-file pretty-function :system-name
  pretty-function :dependencies nil :source
  (("git" "https://github.com/nallen05/pretty-function.git")))
 (:ql-project primecount :system-file primecount :system-name primecount
  :dependencies (asdf) :source
  (("git" "https://github.com/AaronChen0/primecount.git")))
 (:ql-project print-html :system-file print-html :system-name print-html
  :dependencies (asdf) :source
  (("git" "https://github.com/oruppert/print-html.git")))
 (:ql-project print-licenses :system-file print-licenses :system-name
  print-licenses :dependencies (alexandria asdf iterate) :source
  (("git" "https://github.com/vindarel/print-licenses.git")))
 (:ql-project printv :system-file printv :system-name printv :dependencies
  (asdf) :source (("git" "https://github.com/danlentz/printv.git")))
 (:ql-project priority-queue :system-file priority-queue :system-name
  priority-queue :dependencies nil :source
  (("git" "https://github.com/dsorokin/priority-queue.git")))
 (:ql-project proc-parse :system-file proc-parse :system-name proc-parse
  :dependencies (alexandria asdf babel) :source
  (("git" "https://github.com/fukamachi/proc-parse.git")))
 (:ql-project proc-parse :system-file proc-parse-test :system-name
  proc-parse-test :dependencies (asdf proc-parse prove prove-asdf) :source
  (("git" "https://github.com/fukamachi/proc-parse.git")))
 (:ql-project projectured :system-file projectured.document :system-name
  projectured.document :dependencies
  (cl-json hu.dwim.asdf parse-number projectured.editor s-xml) :source
  (("branched-git" "https://github.com/projectured/projectured.git"
    "quicklisp")
   nil))
 (:ql-project projectured :system-file projectured.editor :system-name
  projectured.editor :dependencies
  (hu.dwim.asdf hu.dwim.common hu.dwim.def hu.dwim.defclass-star hu.dwim.logger
   hu.dwim.serializer hu.dwim.syntax-sugar hu.dwim.util trivial-garbage)
  :source
  (("branched-git" "https://github.com/projectured/projectured.git"
    "quicklisp")
   nil))
 (:ql-project projectured :system-file projectured.executable :system-name
  projectured.executable :dependencies
  (command-line-arguments hu.dwim.asdf projectured.sdl) :source
  (("branched-git" "https://github.com/projectured/projectured.git"
    "quicklisp")
   nil))
 (:ql-project projectured :system-file projectured.projection :system-name
  projectured.projection :dependencies
  (hu.dwim.asdf projectured.document projectured.editor) :source
  (("branched-git" "https://github.com/projectured/projectured.git"
    "quicklisp")
   nil))
 (:ql-project projectured :system-file projectured.sdl :system-name
  projectured.sdl :dependencies
  (hu.dwim.asdf hu.dwim.sdl projectured.document projectured.editor
   projectured.projection)
  :source
  (("branched-git" "https://github.com/projectured/projectured.git"
    "quicklisp")
   nil))
 (:ql-project projectured :system-file projectured.sdl.test :system-name
  projectured.sdl.test :dependencies
  (hu.dwim.asdf projectured.sdl projectured.test) :source
  (("branched-git" "https://github.com/projectured/projectured.git"
    "quicklisp")
   nil))
 (:ql-project projectured :system-file projectured.swank :system-name
  projectured.swank :dependencies (hu.dwim.asdf projectured.editor swank)
  :source
  (("branched-git" "https://github.com/projectured/projectured.git"
    "quicklisp")
   nil))
 (:ql-project projectured :system-file projectured.test :system-name
  projectured.test :dependencies
  (hu.dwim.asdf hu.dwim.logger hu.dwim.stefil+hu.dwim.def+swank
   projectured.document projectured.editor projectured.projection
   projectured.swank)
  :source
  (("branched-git" "https://github.com/projectured/projectured.git"
    "quicklisp")
   nil))
 (:ql-project prometheus-gc :system-file prometheus-gc :system-name
  prometheus-gc :dependencies (40ants-asdf-system asdf prometheus) :source
  (("git" "https://github.com/40ants/prometheus-gc.git")))
 (:ql-project prometheus-gc :system-file prometheus-gc-ci :system-name
  prometheus-gc-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/prometheus-gc.git")))
 (:ql-project prometheus-gc :system-file prometheus-gc-tests :system-name
  prometheus-gc-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/prometheus-gc.git")))
 (:ql-project prometheus.cl :system-file prometheus :system-name prometheus
  :dependencies
  (alexandria asdf bordeaux-threads cl-ppcre local-time quantile-estimator)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.collectors.process
  :system-name prometheus.collectors.process :dependencies
  (asdf cffi cffi-grovel cl-fad prometheus split-sequence) :source
  (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.collectors.process.test
  :system-name prometheus.collectors.process.test :dependencies
  (asdf cl-interpol log4cl mw-equiv prometheus.collectors.process
   prometheus.test.support prove prove-asdf)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.collectors.sbcl
  :system-name prometheus.collectors.sbcl :dependencies (asdf prometheus)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.collectors.sbcl.test
  :system-name prometheus.collectors.sbcl.test :dependencies
  (asdf cl-interpol log4cl mw-equiv prometheus.collectors.sbcl
   prometheus.test.support prove prove-asdf)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.examples :system-name
  prometheus.examples :dependencies
  (asdf prometheus prometheus.collectors.process prometheus.collectors.sbcl
   prometheus.exposers.hunchentoot prometheus.formats.text)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.exposers.hunchentoot
  :system-name prometheus.exposers.hunchentoot :dependencies
  (asdf hunchentoot prometheus prometheus.formats.text salza2 trivial-utf-8)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.exposers.hunchentoot.test
  :system-name prometheus.exposers.hunchentoot.test :dependencies
  (asdf chipz cl-interpol drakma log4cl mw-equiv
   prometheus.exposers.hunchentoot prometheus.formats.text
   prometheus.test.support prove prove-asdf)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.formats.text :system-name
  prometheus.formats.text :dependencies (alexandria asdf prometheus) :source
  (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.formats.text.test
  :system-name prometheus.formats.text.test :dependencies
  (asdf cl-interpol log4cl mw-equiv prometheus.formats.text
   prometheus.test.support prove prove-asdf)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.pushgateway :system-name
  prometheus.pushgateway :dependencies
  (asdf drakma prometheus prometheus.formats.text) :source
  (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.pushgateway.test
  :system-name prometheus.pushgateway.test :dependencies
  (asdf cl-interpol hunchentoot log4cl mw-equiv prometheus.pushgateway
   prometheus.test.support prove prove-asdf)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.test :system-name
  prometheus.test :dependencies
  (asdf cl-interpol log4cl mw-equiv prometheus prometheus.test.support prove
   prove-asdf)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.test.all :system-name
  prometheus.test.all :dependencies
  (asdf cl-coveralls prometheus.collectors.process.test
   prometheus.collectors.sbcl.test prometheus.exposers.hunchentoot.test
   prometheus.formats.text.test prometheus.pushgateway.test prometheus.test
   prove-asdf)
  :source (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project prometheus.cl :system-file prometheus.test.support :system-name
  prometheus.test.support :dependencies
  (alexandria asdf prometheus prove prove-asdf) :source
  (("git" "https://github.com/deadtrickster/prometheus.cl.git")))
 (:ql-project promise :system-file promise :system-name promise :dependencies
  (asdf documentation-utils) :source
  (("git" "https://github.com/shinmera/promise.git")))
 (:ql-project promise :system-file promise-test :system-name promise-test
  :dependencies (asdf parachute promise) :source
  (("git" "https://github.com/shinmera/promise.git")))
 (:ql-project prompt-for :system-file prompt-for :system-name prompt-for
  :dependencies (asdf uiop) :source
  (("git" "https://github.com/hyotang666/prompt-for.git")))
 (:ql-project prompt-for :system-file prompt-for.test :system-name
  prompt-for.test :dependencies (asdf jingoh prompt-for) :source
  (("git" "https://github.com/hyotang666/prompt-for.git")))
 (:ql-project protest :system-file protest :system-name protest :dependencies
  (alexandria asdf closer-mop moptilities trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/1am
  :dependencies (1am alexandria closer-mop named-readtables trivial-garbage)
  :source (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/base
  :dependencies (alexandria closer-mop trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/common
  :dependencies (alexandria closer-mop moptilities trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name
  protest/common/addressed :dependencies
  (alexandria closer-mop moptilities trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/common/date
  :dependencies (alexandria closer-mop moptilities trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/common/handling
  :dependencies (alexandria closer-mop moptilities trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/common/killable
  :dependencies (alexandria closer-mop moptilities trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/common/named
  :dependencies (alexandria closer-mop moptilities trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/ftype
  :dependencies (alexandria) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/parachute
  :dependencies
  (alexandria closer-mop named-readtables parachute trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/protocol
  :dependencies (alexandria closer-mop moptilities trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/test
  :dependencies
  (1am alexandria closer-mop named-readtables protest trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protest :system-file protest :system-name protest/test-case
  :dependencies (alexandria closer-mop trivial-garbage) :source
  (("git" "https://github.com/phoe/protest.git")))
 (:ql-project protobuf :system-file protobuf :system-name protobuf
  :dependencies (asdf com.google.base varint) :source
  (("git" "https://github.com/brown/protobuf.git")))
 (:ql-project protobuf :system-file protobuf-conformance :system-name
  protobuf-conformance :dependencies (asdf com.google.base nibbles protobuf)
  :source (("git" "https://github.com/brown/protobuf.git")))
 (:ql-project protobuf :system-file varint :system-name varint :dependencies
  (asdf com.google.base nibbles) :source
  (("git" "https://github.com/brown/protobuf.git")))
 (:ql-project protobuf :system-file varint :system-name varint/test
  :dependencies (hu.dwim.stefil varint) :source
  (("git" "https://github.com/brown/protobuf.git")))
 (:ql-project prove :system-file cl-test-more :system-name cl-test-more
  :dependencies (asdf prove) :source
  (("git" "https://github.com/fukamachi/prove.git")))
 (:ql-project prove :system-file prove :system-name prove :dependencies
  (alexandria asdf cl-ansi-text cl-colors cl-ppcre uiop) :source
  (("git" "https://github.com/fukamachi/prove.git")))
 (:ql-project prove :system-file prove-asdf :system-name prove-asdf
  :dependencies (asdf) :source
  (("git" "https://github.com/fukamachi/prove.git")))
 (:ql-project prove :system-file prove-test :system-name prove-test
  :dependencies (alexandria asdf prove prove-asdf split-sequence) :source
  (("git" "https://github.com/fukamachi/prove.git")))
 (:ql-project pseudonyms :system-file pseudonyms :system-name pseudonyms
  :dependencies (asdf named-readtables trivial-garbage) :source
  (("git" "https://github.com/phoe-krk/pseudonyms.git")))
 (:ql-project psgraph :system-file psgraph :system-name psgraph :dependencies
  nil :source
  (("https"
    "https://common-lisp.net/project/asdf-packaging/psgraph-latest.tar.gz")))
 (:ql-project psychiq :system-file psychiq :system-name psychiq :dependencies
  (alexandria asdf bordeaux-threads cl-redis cl-reexport dissect jonathan
   local-time uiop vom)
  :source (("git" "https://github.com/fukamachi/psychiq.git")))
 (:ql-project psychiq :system-file psychiq-test :system-name psychiq-test
  :dependencies (asdf prove prove-asdf psychiq) :source
  (("git" "https://github.com/fukamachi/psychiq.git")))
 (:ql-project ptc :system-file ptc :system-name ptc :dependencies (asdf)
  :source (("git" "https://gitlab.common-lisp.net/frideau/ptc.git")))
 (:ql-project ptester :system-file ptester :system-name ptester :dependencies
  nil :source (("kmr-git" "ptester")))
 (:ql-project punycode :system-file punycode :system-name punycode
  :dependencies (asdf) :source
  (("git" "https://github.com/shinmera/punycode.git")))
 (:ql-project punycode :system-file punycode-test :system-name punycode-test
  :dependencies (asdf parachute punycode) :source
  (("git" "https://github.com/shinmera/punycode.git")))
 (:ql-project purgatory :system-file purgatory :system-name purgatory
  :dependencies (alexandria asdf babel cl-ppcre uiop usocket) :source
  (("git" "https://notabug.org/cage/purgatory.git")))
 (:ql-project purgatory :system-file purgatory-tests :system-name
  purgatory-tests :dependencies
  (alexandria asdf babel cl+ssl cl-ppcre clunit2 purgatory uiop usocket)
  :source (("git" "https://notabug.org/cage/purgatory.git")))
 (:ql-project puri :system-file puri :system-name puri :dependencies (asdf)
  :source (("kmr-git" "puri")))
 (:ql-project puri :system-file puri :system-name puri/test :dependencies
  (ptester puri) :source (("kmr-git" "puri")))
 (:ql-project purl :system-file purl :system-name purl :dependencies
  (maxpc percent-encoding uiop) :source
  (("git" "https://github.com/eugeneia/purl.git")))
 (:ql-project pvars :system-file pvars :system-name pvars :dependencies
  (asdf cl-store global-vars) :source
  (("git" "https://gitlab.com/ralt/pvars.git")))
 (:ql-project py-configparser :system-file py-configparser :system-name
  py-configparser :dependencies (parse-number) :source
  (("svn" "https://svn.common-lisp.net/py-configparser/trunk")))
 (:ql-project py4cl :system-file py4cl :system-name py4cl :dependencies
  (asdf cl-json numpy-file-format trivial-garbage uiop) :source
  (("git" "https://github.com/bendudson/py4cl.git")))
 (:ql-project py4cl2 :system-file py4cl2 :system-name py4cl2 :dependencies
  (alexandria asdf bordeaux-threads cl-json float-features iterate
   numpy-file-format parse-number trivial-garbage uiop)
  :source
  (("latest-github-release" "https://github.com/digikar99/py4cl2.git")))
 (:ql-project py4cl2-cffi :system-file py4cl2-cffi :system-name py4cl2-cffi
  :dependencies
  (alexandria asdf bordeaux-threads cffi cl-ppcre float-features iterate optima
   parse-number swank trivial-backtrace trivial-garbage uiop)
  :source (("git" "https://github.com/digikar99/py4cl2-cffi.git")))
 (:ql-project py4cl2-cffi :system-file py4cl2-cffi :system-name
  py4cl2-cffi/config :dependencies (uiop) :source
  (("git" "https://github.com/digikar99/py4cl2-cffi.git")))
 (:ql-project pythonic-string-reader :system-file pythonic-string-reader
  :system-name pythonic-string-reader :dependencies (asdf named-readtables)
  :source (("git" "https://github.com/smithzvk/pythonic-string-reader.git")))
 (:ql-project pzmq :system-file pzmq :system-name pzmq :dependencies
  (asdf cffi cffi-grovel) :source
  (("git" "https://github.com/orivej/pzmq.git")))
 (:ql-project pzmq :system-file pzmq :system-name pzmq-compat :dependencies
  (pzmq) :source (("git" "https://github.com/orivej/pzmq.git")))
 (:ql-project pzmq :system-file pzmq :system-name pzmq-examples :dependencies
  (bordeaux-threads iterate local-time pzmq split-sequence) :source
  (("git" "https://github.com/orivej/pzmq.git")))
 (:ql-project pzmq :system-file pzmq :system-name pzmq-test :dependencies
  (babel bordeaux-threads fiveam let-plus pzmq) :source
  (("git" "https://github.com/orivej/pzmq.git")))
 (:ql-project qbase64 :system-file qbase64 :system-name qbase64 :dependencies
  (asdf metabang-bind trivial-gray-streams) :source
  (("git" "https://github.com/chaitanyagupta/qbase64.git")))
 (:ql-project qbase64 :system-file qbase64 :system-name qbase64/test
  :dependencies (cl-fad fiveam qbase64) :source
  (("git" "https://github.com/chaitanyagupta/qbase64.git")))
 (:ql-project qbook :system-file qbook :system-name qbook :dependencies
  (arnesi cl-ppcre iterate yaclml) :source
  (("git" "https://gitlab.common-lisp.net/bese/qbook.git")))
 (:ql-project ql-checkout :system-file ql-checkout :system-name ql-checkout
  :dependencies (asdf) :source
  (("git" "https://github.com/roswell/ql-checkout.git")))
 (:ql-project qlot :system-file qlot :system-name qlot :dependencies (asdf)
  :source (("git" "https://github.com/fukamachi/qlot.git")))
 (:ql-project qlot :system-file qlot :system-name qlot/command :dependencies
  nil :source (("git" "https://github.com/fukamachi/qlot.git")))
 (:ql-project qmynd :system-file qmynd :system-name qmynd :dependencies
  (asdf babel chipz cl+ssl flexi-streams ironclad list-of salza2
   trivial-gray-streams usocket)
  :source (("git" "https://github.com/qitab/qmynd.git")))
 (:ql-project qmynd :system-file qmynd-test :system-name qmynd-test
  :dependencies (asdf babel flexi-streams qmynd) :source
  (("git" "https://github.com/qitab/qmynd.git")))
 (:ql-project qoi :system-file qoi :system-name qoi :dependencies
  (alexandria asdf) :source (("git" "https://github.com/bpanthi977/qoi.git")))
 (:ql-project qt-libs :system-file commonqt :system-name commonqt :dependencies
  (asdf qt+libs qt-libs smokebase) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file phonon :system-name phonon :dependencies
  (asdf qt+libs qt-libs qtcore qtdbus qtgui qtxml) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qimageblitz :system-name qimageblitz
  :dependencies (asdf qt+libs qt-libs qtcore qtgui) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qsci :system-name qsci :dependencies
  (asdf qt+libs qt-libs qtcore qtgui) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qt-lib-generator :system-name
  qt-lib-generator :dependencies
  (asdf cl-ppcre pathname-utils trivial-features) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qt-libs :system-name qt-libs :dependencies
  (asdf cffi cl-ppcre qt-lib-generator) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qt3support :system-name qt3support
  :dependencies (asdf qt+libs qt-libs qtcore qtgui qtnetwork qtsql qtxml)
  :source (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtcore :system-name qtcore :dependencies
  (asdf commonqt qt+libs qt-libs) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtdbus :system-name qtdbus :dependencies
  (asdf qt+libs qt-libs qtcore qtxml) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtdeclarative :system-name qtdeclarative
  :dependencies
  (asdf qt+libs qt-libs qtcore qtgui qtnetwork qtscript qtsql qtxmlpatterns)
  :source (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtgui :system-name qtgui :dependencies
  (asdf qt+libs qt-libs qtcore) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qthelp :system-name qthelp :dependencies
  (asdf qt+libs qt-libs qtcore qtgui qtnetwork qtsql) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtnetwork :system-name qtnetwork
  :dependencies (asdf qt+libs qt-libs qtcore) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtopengl :system-name qtopengl :dependencies
  (asdf qt+libs qt-libs qtcore qtgui) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtscript :system-name qtscript :dependencies
  (asdf qt+libs qt-libs qtcore) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtsql :system-name qtsql :dependencies
  (asdf qt+libs qt-libs qtcore qtgui) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtsvg :system-name qtsvg :dependencies
  (asdf qt+libs qt-libs qtcore qtgui) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qttest :system-name qttest :dependencies
  (asdf qt+libs qt-libs qtcore qtgui) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtuitools :system-name qtuitools
  :dependencies (asdf qt+libs qt-libs qtcore qtgui) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtwebkit :system-name qtwebkit :dependencies
  (asdf qt+libs qt-libs qtcore qtgui qtnetwork) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtxml :system-name qtxml :dependencies
  (asdf qt+libs qt-libs qtcore) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qtxmlpatterns :system-name qtxmlpatterns
  :dependencies (asdf qt+libs qt-libs qtcore qtnetwork) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file qwt :system-name qwt :dependencies
  (asdf qt+libs qt-libs qtcore qtgui) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qt-libs :system-file smokebase :system-name smokebase
  :dependencies (asdf qt+libs qt-libs) :source
  (("git" "https://github.com/Shinmera/qt-libs.git")))
 (:ql-project qtools :system-file q+ :system-name q+ :dependencies
  (asdf qtools) :source (("git" "https://github.com/Shinmera/qtools.git")))
 (:ql-project qtools :system-file qtools :system-name qtools :dependencies
  (asdf cl-ppcre closer-mop deploy documentation-utils form-fiddle
   named-readtables qt+libs trivial-garbage trivial-indent trivial-main-thread)
  :source (("git" "https://github.com/Shinmera/qtools.git")))
 (:ql-project qtools :system-file qtools-evaluator :system-name
  qtools-evaluator :dependencies
  (asdf cl-ppcre qtcore qtgui qtools trivial-gray-streams) :source
  (("git" "https://github.com/Shinmera/qtools.git")))
 (:ql-project qtools :system-file qtools-game :system-name qtools-game
  :dependencies (asdf closer-mop qtcore qtgui qtools qtopengl) :source
  (("git" "https://github.com/Shinmera/qtools.git")))
 (:ql-project qtools :system-file qtools-helloworld :system-name
  qtools-helloworld :dependencies (asdf qtcore qtgui qtools) :source
  (("git" "https://github.com/Shinmera/qtools.git")))
 (:ql-project qtools :system-file qtools-melody :system-name qtools-melody
  :dependencies (asdf phonon qtcore qtgui qtools) :source
  (("git" "https://github.com/Shinmera/qtools.git")))
 (:ql-project qtools :system-file qtools-opengl :system-name qtools-opengl
  :dependencies (asdf cl-opengl qtcore qtgui qtools qtopengl) :source
  (("git" "https://github.com/Shinmera/qtools.git")))
 (:ql-project qtools :system-file qtools-titter :system-name qtools-titter
  :dependencies (asdf chirp qtcore qtgui qtools) :source
  (("git" "https://github.com/Shinmera/qtools.git")))
 (:ql-project qtools-ui :system-file qtools-ui :system-name qtools-ui
  :dependencies
  (asdf qtools-ui-auto-resizing-textedit qtools-ui-base qtools-ui-cell
   qtools-ui-color-history qtools-ui-color-picker qtools-ui-color-sliders
   qtools-ui-color-triangle qtools-ui-compass qtools-ui-container
   qtools-ui-debugger qtools-ui-dialog qtools-ui-dictionary
   qtools-ui-drag-and-drop qtools-ui-fixed-qtextedit qtools-ui-flow-layout
   qtools-ui-helpers qtools-ui-imagetools qtools-ui-keychord-editor
   qtools-ui-layout qtools-ui-listing qtools-ui-notification qtools-ui-options
   qtools-ui-panels qtools-ui-placeholder-text-edit qtools-ui-plot
   qtools-ui-repl qtools-ui-slider qtools-ui-spellchecked-text-edit
   qtools-ui-splitter)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-auto-resizing-textedit
  :system-name qtools-ui-auto-resizing-textedit :dependencies
  (asdf qtools-ui-base qtools-ui-fixed-qtextedit) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-base :system-name qtools-ui-base
  :dependencies (array-utils asdf documentation-utils qtcore qtgui qtools)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-bytearray :system-name
  qtools-ui-bytearray :dependencies (asdf qtools-ui-base) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-cell :system-name qtools-ui-cell
  :dependencies (asdf qtools-ui-base qtools-ui-helpers qtools-ui-layout)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-color-history :system-name
  qtools-ui-color-history :dependencies
  (asdf qtools-ui-base qtools-ui-flow-layout qtools-ui-helpers) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-color-picker :system-name
  qtools-ui-color-picker :dependencies
  (asdf qtools-ui-base qtools-ui-color-history qtools-ui-color-sliders
   qtools-ui-color-triangle qtools-ui-dialog qtools-ui-helpers)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-color-sliders :system-name
  qtools-ui-color-sliders :dependencies (asdf qtools-ui-base qtools-ui-helpers)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-color-triangle :system-name
  qtools-ui-color-triangle :dependencies
  (asdf cl-opengl qtools-ui-base qtools-ui-helpers qtopengl) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-compass :system-name
  qtools-ui-compass :dependencies (asdf qtools-ui-base qtools-ui-layout)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-container :system-name
  qtools-ui-container :dependencies (asdf qtools-ui-base qtools-ui-layout)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-debugger :system-name
  qtools-ui-debugger :dependencies (asdf dissect qtools-ui-base) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-dialog :system-name
  qtools-ui-dialog :dependencies (asdf qtools-ui-base qtools-ui-helpers)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-dictionary :system-name
  qtools-ui-dictionary :dependencies
  (asdf qtools-ui-base qtools-ui-fixed-qtextedit qtools-ui-helpers wordnet)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-drag-and-drop :system-name
  qtools-ui-drag-and-drop :dependencies (asdf qtools-ui-base qtools-ui-helpers)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-executable :system-name
  qtools-ui-executable :dependencies (asdf bordeaux-threads qtools-ui-base)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-fixed-qtextedit :system-name
  qtools-ui-fixed-qtextedit :dependencies (asdf qtools-ui-base) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-flow-layout :system-name
  qtools-ui-flow-layout :dependencies (asdf qtools-ui-base qtools-ui-container)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-helpers :system-name
  qtools-ui-helpers :dependencies (asdf qtools-ui-base qtools-ui-layout)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-imagetools :system-name
  qtools-ui-imagetools :dependencies (asdf qimageblitz qtools-ui-base) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-keychord-editor :system-name
  qtools-ui-keychord-editor :dependencies (asdf qtools-ui-base) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-layout :system-name
  qtools-ui-layout :dependencies (asdf qtools-ui-base) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-listing :system-name
  qtools-ui-listing :dependencies
  (asdf qtools-ui-base qtools-ui-cell qtools-ui-container) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-notification :system-name
  qtools-ui-notification :dependencies (asdf qtools-ui-base) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-options :system-name
  qtools-ui-options :dependencies
  (asdf closer-mop qtools-ui-base qtools-ui-color-picker
   qtools-ui-color-triangle qtools-ui-helpers qtools-ui-listing
   qtools-ui-slider)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-panels :system-name
  qtools-ui-panels :dependencies
  (asdf qtools-ui-base qtools-ui-compass qtools-ui-helpers qtools-ui-splitter)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-placeholder-text-edit
  :system-name qtools-ui-placeholder-text-edit :dependencies
  (asdf qtools-ui-base qtools-ui-fixed-qtextedit) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-plot :system-name qtools-ui-plot
  :dependencies (asdf qtools-ui-base qtools-ui-helpers) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-progress-bar :system-name
  qtools-ui-progress-bar :dependencies (asdf qtools-ui-base) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-repl :system-name qtools-ui-repl
  :dependencies (asdf bordeaux-threads qtools-ui-base trivial-gray-streams)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-slider :system-name
  qtools-ui-slider :dependencies (asdf qtools-ui-base qtools-ui-helpers)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-spellchecked-text-edit
  :system-name qtools-ui-spellchecked-text-edit :dependencies
  (asdf qtools-ui-base qtools-ui-fixed-qtextedit qtools-ui-helpers spell)
  :source (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-splitter :system-name
  qtools-ui-splitter :dependencies
  (asdf qtools-ui-base qtools-ui-container qtools-ui-helpers) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project qtools-ui :system-file qtools-ui-svgtools :system-name
  qtools-ui-svgtools :dependencies (asdf qtools-ui-base qtsvg) :source
  (("git" "https://github.com/Shinmera/qtools-ui.git")))
 (:ql-project quad-tree :system-file quad-tree :system-name quad-tree
  :dependencies (asdf mfiano-utils origin) :source
  (("git" "https://github.com/mfiano/quad-tree.git")))
 (:ql-project quadtree :system-file quadtree :system-name quadtree
  :dependencies nil :source (("git" "https://github.com/takagi/quadtree.git")))
 (:ql-project quadtree :system-file quadtree-test :system-name quadtree-test
  :dependencies (prove prove-asdf quadtree) :source
  (("git" "https://github.com/takagi/quadtree.git")))
 (:ql-project quantile-estimator.cl :system-file quantile-estimator
  :system-name quantile-estimator :dependencies (alexandria) :source
  (("git" "https://github.com/deadtrickster/quantile-estimator.cl.git")))
 (:ql-project quantile-estimator.cl :system-file quantile-estimator.test
  :system-name quantile-estimator.test :dependencies
  (log4cl mw-equiv prove prove-asdf quantile-estimator) :source
  (("git" "https://github.com/deadtrickster/quantile-estimator.cl.git")))
 (:ql-project quasiquote-2.0 :system-file quasiquote-2.0 :system-name
  quasiquote-2.0 :dependencies (iterate) :source
  (("git" "https://github.com/mabragor/quasiquote-2.0.git")))
 (:ql-project quasiquote-2.0 :system-file quasiquote-2.0 :system-name
  quasiquote-2.0-tests :dependencies (fiveam quasiquote-2.0) :source
  (("git" "https://github.com/mabragor/quasiquote-2.0.git")))
 (:ql-project queen.lisp :system-file queen :system-name queen :dependencies
  (alexandria anaphora asdf cl-ppcre-unicode named-readtables) :source
  (("git" "https://github.com/mishoo/queen.lisp.git")))
 (:ql-project query-fs :system-file query-fs :system-name query-fs
  :dependencies
  (asdf bordeaux-threads cl-fuse cl-fuse-meta-fs cl-ppcre
   command-line-arguments iterate trivial-backtrace)
  :source (("git" "https://github.com/fb08af68/query-fs.git")))
 (:ql-project query-repl :system-file query-repl :system-name query-repl
  :dependencies (asdf check-bnf jingoh.documentizer uiop) :source
  (("git" "https://github.com/hyotang666/query-repl.git")))
 (:ql-project query-repl :system-file query-repl.test :system-name
  query-repl.test :dependencies (asdf jingoh query-repl) :source
  (("git" "https://github.com/hyotang666/query-repl.git")))
 (:ql-project queues :system-file queues :system-name queues :dependencies nil
  :source (("git" "https://github.com/oconnore/queues.git")))
 (:ql-project queues :system-file queues.priority-cqueue :system-name
  queues.priority-cqueue :dependencies
  (bordeaux-threads queues queues.priority-queue) :source
  (("git" "https://github.com/oconnore/queues.git")))
 (:ql-project queues :system-file queues.priority-queue :system-name
  queues.priority-queue :dependencies (queues) :source
  (("git" "https://github.com/oconnore/queues.git")))
 (:ql-project queues :system-file queues.simple-cqueue :system-name
  queues.simple-cqueue :dependencies
  (bordeaux-threads queues queues.simple-queue) :source
  (("git" "https://github.com/oconnore/queues.git")))
 (:ql-project queues :system-file queues.simple-queue :system-name
  queues.simple-queue :dependencies (queues) :source
  (("git" "https://github.com/oconnore/queues.git")))
 (:ql-project quick-patch :system-file quick-patch :system-name quick-patch
  :dependencies (asdf) :source
  (("git" "https://github.com/tdrhq/quick-patch.git")))
 (:ql-project quick-patch :system-file quick-patch :system-name
  quick-patch/tests :dependencies (cl-mock fiveam quick-patch str tmpdir)
  :source (("git" "https://github.com/tdrhq/quick-patch.git")))
 (:ql-project quickapp :system-file quickapp :system-name quickapp
  :dependencies nil :source
  (("git" "https://github.com/triclops200/quickapp.git")))
 (:ql-project quickhull :system-file quickhull :system-name quickhull
  :dependencies (3d-math asdf documentation-utils) :source
  (("git" "https://github.com/shirakumo/quickhull.git")))
 (:ql-project quicklisp-slime-helper :system-file quicklisp-slime-helper
  :system-name quicklisp-slime-helper :dependencies (alexandria swank) :source
  (("git" "https://github.com/quicklisp/quicklisp-slime-helper.git")))
 (:ql-project quicklisp-stats :system-file quicklisp-stats :system-name
  quicklisp-stats :dependencies (alexandria asdf drakma split-sequence) :source
  (("git" "https://github.com/phoe/quicklisp-stats.git")))
 (:ql-project quickproject :system-file quickproject :system-name quickproject
  :dependencies (asdf cl-fad html-template) :source
  (("https" "https://www.xach.com/lisp/quickproject.tgz")))
 (:ql-project quicksearch :system-file quicksearch :system-name quicksearch
  :dependencies
  (alexandria anaphora bordeaux-threads cl-ppcre do-urlencode drakma
   flexi-streams html-entities iterate yason)
  :source (("git" "https://github.com/tkych/quicksearch.git")))
 (:ql-project quickutil :system-file quickutil :system-name quickutil
  :dependencies (asdf quickutil-client) :source
  (("git" "https://github.com/tarballs-are-good/quickutil.git")))
 (:ql-project quickutil :system-file quickutil-client :system-name
  quickutil-client :dependencies
  (asdf cl-fad quickutil-client-management quickutil-utilities) :source
  (("git" "https://github.com/tarballs-are-good/quickutil.git")))
 (:ql-project quickutil :system-file quickutil-client-management :system-name
  quickutil-client-management :dependencies (asdf trivial-garbage) :source
  (("git" "https://github.com/tarballs-are-good/quickutil.git")))
 (:ql-project quickutil :system-file quickutil-server :system-name
  quickutil-server :dependencies
  (asdf assoc-utils cl-fad cl-markdown cl-ppcre cl-syntax cl-syntax-annot clack
   closure-template dbi lack lack-component lack-middleware-csrf lack-request
   lack-response ningle quickutil-utilities trivial-shell yason)
  :source (("git" "https://github.com/tarballs-are-good/quickutil.git")))
 (:ql-project quickutil :system-file quickutil-utilities :system-name
  quickutil-utilities :dependencies (asdf cl-heredoc) :source
  (("git" "https://github.com/tarballs-are-good/quickutil.git")))
 (:ql-project quickutil :system-file quickutil-utilities-test :system-name
  quickutil-utilities-test :dependencies
  (asdf quickutil-client quickutil-server) :source
  (("git" "https://github.com/tarballs-are-good/quickutil.git")))
 (:ql-project quri :system-file quri :system-name quri :dependencies
  (alexandria asdf babel cl-utilities split-sequence) :source
  (("git" "https://github.com/fukamachi/quri.git")))
 (:ql-project quri :system-file quri-test :system-name quri-test :dependencies
  (asdf prove prove-asdf quri) :source
  (("git" "https://github.com/fukamachi/quri.git")))
 (:ql-project quux-hunchentoot :system-file quux-hunchentoot :system-name
  quux-hunchentoot :dependencies
  (alexandria asdf bordeaux-threads hunchentoot lil lparallel trivia) :source
  (("git" "https://gitlab.common-lisp.net/qitab/quux-hunchentoot.git")))
 (:ql-project quux-time :system-file quux-time :system-name quux-time
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/qitab/quux-time.git")))
 (:ql-project racer :system-file lracer :system-name lracer :dependencies
  (asdf) :source (("git" "https://github.com/ha-mo-we/Racer.git")))
 (:ql-project racer :system-file racer :system-name racer :dependencies
  (asdf aserve deflate flexi-streams) :source
  (("git" "https://github.com/ha-mo-we/Racer.git")))
 (:ql-project random :system-file acm-random :system-name acm-random
  :dependencies (asdf com.google.base random) :source
  (("git" "https://github.com/brown/random.git")))
 (:ql-project random :system-file acm-random-test :system-name acm-random-test
  :dependencies (acm-random asdf hu.dwim.stefil) :source
  (("git" "https://github.com/brown/random.git")))
 (:ql-project random :system-file random :system-name random :dependencies
  (asdf com.google.base) :source
  (("git" "https://github.com/brown/random.git")))
 (:ql-project random :system-file random-test :system-name random-test
  :dependencies (asdf hu.dwim.stefil random) :source
  (("git" "https://github.com/brown/random.git")))
 (:ql-project random-access-lists :system-file random-access-lists :system-name
  random-access-lists :dependencies (lisp-unit) :source
  (("git" "https://github.com/VincentToups/random-access-lists.git")))
 (:ql-project random-sample :system-file random-sample :system-name
  random-sample :dependencies
  (alexandria asdf infix-math named-readtables serapeum) :source
  (("git" "https://github.com/ruricolist/random-sample.git")))
 (:ql-project random-state :system-file random-state :system-name random-state
  :dependencies (asdf documentation-utils) :source
  (("git" "http://github.com/Shinmera/random-state.git")))
 (:ql-project random-state :system-file random-state-test :system-name
  random-state-test :dependencies (asdf parachute random-state) :source
  (("git" "http://github.com/Shinmera/random-state.git")))
 (:ql-project random-state :system-file random-state-viewer :system-name
  random-state-viewer :dependencies (asdf qtcore qtgui qtools random-state)
  :source (("git" "http://github.com/Shinmera/random-state.git")))
 (:ql-project random-uuid :system-file random-uuid :system-name random-uuid
  :dependencies (asdf mfiano-utils seedable-rng) :source
  (("git" "https://github.com/mfiano/random-uuid.git")))
 (:ql-project rate-monotonic :system-file rate-monotonic :system-name
  rate-monotonic :dependencies (asdf bordeaux-threads timer-wheel) :source
  (("git" "https://github.com/npatrick04/rate-monotonic.git")))
 (:ql-project rate-monotonic :system-file rate-monotonic.examples :system-name
  rate-monotonic.examples :dependencies (asdf bordeaux-threads rate-monotonic)
  :source (("git" "https://github.com/npatrick04/rate-monotonic.git")))
 (:ql-project ratify :system-file ratify :system-name ratify :dependencies
  (asdf cl-ppcre local-time parse-float) :source
  (("git" "https://github.com/Shinmera/Ratify.git")))
 (:ql-project ratmath :system-file ratmath :system-name ratmath :dependencies
  (asdf) :source (("git" "https://github.com/jesseoff/ratmath.git")))
 (:ql-project rcl :system-file rcl :system-name rcl :dependencies
  (asdf bordeaux-threads cffi named-readtables prove-asdf simple-tasks
   trivial-garbage)
  :source (("https" "https://common-lisp.net/project/rcl/rcl.tar.gz")))
 (:ql-project rcl :system-file rcl :system-name rcl/prove :dependencies
  (prove prove-asdf rcl) :source
  (("https" "https://common-lisp.net/project/rcl/rcl.tar.gz")))
 (:ql-project rcl :system-file rcl :system-name rcl/test :dependencies
  (fiveam rcl) :source
  (("https" "https://common-lisp.net/project/rcl/rcl.tar.gz")))
 (:ql-project re :system-file re :system-name re :dependencies (asdf parse)
  :source (("git" "https://github.com/massung/re.git")))
 (:ql-project read-as-string :system-file read-as-string :system-name
  read-as-string :dependencies (asdf core-reader named-readtables) :source
  (("git" "https://github.com/hyotang666/read-as-string.git")))
 (:ql-project read-as-string :system-file read-as-string.test :system-name
  read-as-string.test :dependencies (asdf jingoh read-as-string) :source
  (("git" "https://github.com/hyotang666/read-as-string.git")))
 (:ql-project read-csv :system-file read-csv :system-name read-csv
  :dependencies (asdf) :source
  (("git" "https://github.com/WarrenWilkinson/read-csv")))
 (:ql-project read-csv :system-file read-csv :system-name read-csv.test
  :dependencies (read-csv) :source
  (("git" "https://github.com/WarrenWilkinson/read-csv")))
 (:ql-project read-number :system-file read-number :system-name read-number
  :dependencies (alexandria asdf lisp-unit) :source
  (("git" "https://github.com/ralph-schleicher/read-number.git")))
 (:ql-project reader :system-file reader :system-name reader :dependencies
  (alexandria asdf fiveam hash-set iterate split-sequence trivial-types uiop)
  :source
  (("latest-github-release" "https://github.com/digikar99/reader.git")))
 (:ql-project reader :system-file reader+swank :system-name reader+swank
  :dependencies (asdf reader swank) :source
  (("latest-github-release" "https://github.com/digikar99/reader.git")))
 (:ql-project reader-interception :system-file reader-interception :system-name
  reader-interception :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/frideau/reader-interception.git")))
 (:ql-project reader-interception :system-file reader-interception-test
  :system-name reader-interception-test :dependencies
  (fare-utils hu.dwim.stefil reader-interception) :source
  (("git" "https://gitlab.common-lisp.net/frideau/reader-interception.git")))
 (:ql-project reblocks :system-file reblocks :system-name reblocks
  :dependencies
  (40ants-doc alexandria anaphora asdf babel bordeaux-threads cl-cookie cl-fad
   cl-ppcre cl-strings clack closer-mop dexador f-underscore find-port ironclad
   jonathan lack lack-middleware-session lack-request lack-response lack-util
   local-time log4cl log4cl-extras metacopy metatilities named-readtables
   parenscript puri pythonic-string-reader quri routes salza2 serapeum
   spinneret str trivial-garbage trivial-open-browser trivial-timeout uuid
   yason)
  :source (("git" "https://github.com/40ants/reblocks.git")))
 (:ql-project reblocks :system-file reblocks-docs :system-name reblocks-docs
  :dependencies (asdf reblocks) :source
  (("git" "https://github.com/40ants/reblocks.git")))
 (:ql-project reblocks :system-file reblocks-tests :system-name reblocks-tests
  :dependencies
  (alexandria asdf cl-mock cl-ppcre closer-mop hamcrest lack-request lack-test
   reblocks rove serapeum str)
  :source (("git" "https://github.com/40ants/reblocks.git")))
 (:ql-project reblocks-auth :system-file reblocks-auth :system-name
  reblocks-auth :dependencies
  (40ants-asdf-system alexandria asdf cl-strings dexador jonathan local-time
   log4cl mailgun mito quri reblocks reblocks-lass reblocks-ui secret-values
   uuid)
  :source (("git" "https://github.com/40ants/reblocks-auth.git")))
 (:ql-project reblocks-auth :system-file reblocks-auth-ci :system-name
  reblocks-auth-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/reblocks-auth.git")))
 (:ql-project reblocks-auth :system-file reblocks-auth-docs :system-name
  reblocks-auth-docs :dependencies
  (40ants-doc asdf docs-config named-readtables pythonic-string-reader
   reblocks-auth)
  :source (("git" "https://github.com/40ants/reblocks-auth.git")))
 (:ql-project reblocks-auth :system-file reblocks-auth-example :system-name
  reblocks-auth-example :dependencies
  (40ants-asdf-system 40ants-logging 40ants-slynk asdf cl+ssl
   clack-handler-hunchentoot local-time mito reblocks reblocks-auth
   reblocks-lass reblocks-navigation-widget reblocks-prometheus reblocks-ui
   serapeum spinneret)
  :source (("git" "https://github.com/40ants/reblocks-auth.git")))
 (:ql-project reblocks-auth :system-file reblocks-auth-tests :system-name
  reblocks-auth-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/reblocks-auth.git")))
 (:ql-project reblocks-file-server :system-file reblocks-file-server
  :system-name reblocks-file-server :dependencies
  (40ants-asdf-system asdf cl-fad cl-ppcre reblocks routes trivial-mimes)
  :source (("git" "https://github.com/40ants/reblocks-file-server.git")))
 (:ql-project reblocks-file-server :system-file reblocks-file-server-ci
  :system-name reblocks-file-server-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/reblocks-file-server.git")))
 (:ql-project reblocks-file-server :system-file reblocks-file-server-docs
  :system-name reblocks-file-server-docs :dependencies
  (40ants-doc asdf docs-config named-readtables pythonic-string-reader
   reblocks-file-server)
  :source (("git" "https://github.com/40ants/reblocks-file-server.git")))
 (:ql-project reblocks-file-server :system-file reblocks-file-server-tests
  :system-name reblocks-file-server-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/reblocks-file-server.git")))
 (:ql-project reblocks-lass :system-file reblocks-lass :system-name
  reblocks-lass :dependencies (40ants-asdf-system asdf lass reblocks) :source
  (("git" "https://github.com/40ants/reblocks-lass.git")))
 (:ql-project reblocks-lass :system-file reblocks-lass-ci :system-name
  reblocks-lass-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/reblocks-lass.git")))
 (:ql-project reblocks-lass :system-file reblocks-lass-docs :system-name
  reblocks-lass-docs :dependencies
  (40ants-doc asdf docs-config named-readtables pythonic-string-reader
   reblocks-lass)
  :source (("git" "https://github.com/40ants/reblocks-lass.git")))
 (:ql-project reblocks-lass :system-file reblocks-lass-tests :system-name
  reblocks-lass-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/reblocks-lass.git")))
 (:ql-project reblocks-navigation-widget :system-file
  reblocks-navigation-widget :system-name reblocks-navigation-widget
  :dependencies (40ants-asdf-system asdf log4cl reblocks reblocks-ui) :source
  (("git" "https://github.com/40ants/reblocks-navigation-widget.git")))
 (:ql-project reblocks-navigation-widget :system-file
  reblocks-navigation-widget-ci :system-name reblocks-navigation-widget-ci
  :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/reblocks-navigation-widget.git")))
 (:ql-project reblocks-navigation-widget :system-file
  reblocks-navigation-widget-docs :system-name reblocks-navigation-widget-docs
  :dependencies
  (40ants-doc asdf docs-config named-readtables pythonic-string-reader
   reblocks-navigation-widget)
  :source (("git" "https://github.com/40ants/reblocks-navigation-widget.git")))
 (:ql-project reblocks-navigation-widget :system-file
  reblocks-navigation-widget-tests :system-name
  reblocks-navigation-widget-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/reblocks-navigation-widget.git")))
 (:ql-project reblocks-parenscript :system-file reblocks-parenscript
  :system-name reblocks-parenscript :dependencies
  (40ants-asdf-system alexandria asdf bordeaux-threads parenscript reblocks)
  :source (("git" "https://github.com/40ants/reblocks-parenscript.git")))
 (:ql-project reblocks-parenscript :system-file reblocks-parenscript-ci
  :system-name reblocks-parenscript-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/reblocks-parenscript.git")))
 (:ql-project reblocks-parenscript :system-file reblocks-parenscript-docs
  :system-name reblocks-parenscript-docs :dependencies
  (40ants-doc asdf docs-config named-readtables pythonic-string-reader
   reblocks-parenscript)
  :source (("git" "https://github.com/40ants/reblocks-parenscript.git")))
 (:ql-project reblocks-parenscript :system-file reblocks-parenscript-tests
  :system-name reblocks-parenscript-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/reblocks-parenscript.git")))
 (:ql-project reblocks-prometheus :system-file reblocks-prometheus :system-name
  reblocks-prometheus :dependencies
  (40ants-asdf-system asdf cffi-grovel log4cl-extras prometheus prometheus-gc
   prometheus.collectors.process prometheus.collectors.sbcl
   prometheus.formats.text reblocks)
  :source (("git" "https://github.com/40ants/reblocks-prometheus.git")))
 (:ql-project reblocks-prometheus :system-file reblocks-prometheus-ci
  :system-name reblocks-prometheus-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/reblocks-prometheus.git")))
 (:ql-project reblocks-prometheus :system-file reblocks-prometheus-docs
  :system-name reblocks-prometheus-docs :dependencies
  (40ants-doc asdf docs-config named-readtables pythonic-string-reader
   reblocks-prometheus)
  :source (("git" "https://github.com/40ants/reblocks-prometheus.git")))
 (:ql-project reblocks-prometheus :system-file reblocks-prometheus-tests
  :system-name reblocks-prometheus-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/reblocks-prometheus.git")))
 (:ql-project reblocks-typeahead :system-file reblocks-typeahead :system-name
  reblocks-typeahead :dependencies
  (40ants-asdf-system asdf parenscript reblocks reblocks-lass
   reblocks-parenscript reblocks-ui)
  :source (("git" "https://github.com/40ants/reblocks-typeahead.git")))
 (:ql-project reblocks-typeahead :system-file reblocks-typeahead-ci
  :system-name reblocks-typeahead-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/reblocks-typeahead.git")))
 (:ql-project reblocks-typeahead :system-file reblocks-typeahead-docs
  :system-name reblocks-typeahead-docs :dependencies
  (40ants-doc asdf docs-config named-readtables pythonic-string-reader
   reblocks-typeahead)
  :source (("git" "https://github.com/40ants/reblocks-typeahead.git")))
 (:ql-project reblocks-typeahead :system-file reblocks-typeahead-example
  :system-name reblocks-typeahead-example :dependencies
  (40ants-asdf-system 40ants-logging 40ants-slynk alexandria asdf
   clack-handler-hunchentoot mito reblocks reblocks-auth reblocks-lass
   reblocks-navigation-widget reblocks-prometheus reblocks-typeahead
   reblocks-ui serapeum spinneret str)
  :source (("git" "https://github.com/40ants/reblocks-typeahead.git")))
 (:ql-project reblocks-typeahead :system-file reblocks-typeahead-tests
  :system-name reblocks-typeahead-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/reblocks-typeahead.git")))
 (:ql-project reblocks-ui :system-file reblocks-ui :system-name reblocks-ui
  :dependencies
  (40ants-doc asdf log4cl log4cl-extras parenscript quri reblocks
   reblocks-parenscript)
  :source (("git" "https://github.com/40ants/reblocks-ui.git")))
 (:ql-project reblocks-ui :system-file reblocks-ui-docs :system-name
  reblocks-ui-docs :dependencies (40ants-doc asdf docs-config reblocks) :source
  (("git" "https://github.com/40ants/reblocks-ui.git")))
 (:ql-project reblocks-ui :system-file reblocks-ui-examples :system-name
  reblocks-ui-examples :dependencies (asdf reblocks reblocks-lass reblocks-ui)
  :source (("git" "https://github.com/40ants/reblocks-ui.git")))
 (:ql-project reblocks-websocket :system-file reblocks-websocket :system-name
  reblocks-websocket :dependencies
  (40ants-asdf-system alexandria asdf bordeaux-threads jonathan log4cl-extras
   parenscript reblocks reblocks-parenscript serapeum websocket-driver)
  :source (("git" "https://github.com/40ants/reblocks-websocket.git")))
 (:ql-project reblocks-websocket :system-file reblocks-websocket-ci
  :system-name reblocks-websocket-ci :dependencies (40ants-ci asdf) :source
  (("git" "https://github.com/40ants/reblocks-websocket.git")))
 (:ql-project reblocks-websocket :system-file reblocks-websocket-docs
  :system-name reblocks-websocket-docs :dependencies
  (40ants-doc asdf docs-config named-readtables pythonic-string-reader
   reblocks-websocket)
  :source (("git" "https://github.com/40ants/reblocks-websocket.git")))
 (:ql-project reblocks-websocket :system-file reblocks-websocket-tests
  :system-name reblocks-websocket-tests :dependencies (asdf rove) :source
  (("git" "https://github.com/40ants/reblocks-websocket.git")))
 (:ql-project rectangle-packing :system-file rectangle-packing :system-name
  rectangle-packing :dependencies nil :source
  (("git" "https://github.com/woudshoo/rectangle-packing.git")))
 (:ql-project recur :system-file recur :system-name recur :dependencies (asdf)
  :source (("git" "https://github.com/stylewarning/recur.git")))
 (:ql-project recursive-regex :system-file recursive-regex :system-name
  recursive-regex :dependencies
  (alexandria anaphora cl-interpol cl-ppcre iterate symbol-munger) :source
  (("git" "https://github.com/AccelerationNet/recursive-regex.git")))
 (:ql-project recursive-regex :system-file recursive-regex :system-name
  recursive-regex-test :dependencies (lisp-unit recursive-regex) :source
  (("git" "https://github.com/AccelerationNet/recursive-regex.git")))
 (:ql-project recursive-restart :system-file recursive-restart :system-name
  recursive-restart :dependencies (alexandria) :source
  (("git"
    "https://github.com/heegaiximephoomeeghahyaiseekh/recursive-restart.git")))
 (:ql-project red-black-tree :system-file red-black-tree :system-name
  red-black-tree :dependencies (asdf mfiano-utils) :source
  (("git" "https://github.com/mfiano/red-black-tree.git")))
 (:ql-project redirect-stream :system-file redirect-stream :system-name
  redirect-stream :dependencies (asdf trivial-gray-streams) :source
  (("git" "https://github.com/Shinmera/redirect-stream.git")))
 (:ql-project regex :system-file regex :system-name regex :dependencies nil
  :source (("git" "https://github.com/michaelw/regex.git")))
 (:ql-project regular-type-expression :system-file 2d-array :system-name
  2d-array :dependencies (asdf) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file 2d-array-test :system-name
  2d-array-test :dependencies (2d-array asdf scrutiny) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file adjuvant :system-name
  adjuvant :dependencies (asdf) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file adjuvant-test :system-name
  adjuvant-test :dependencies (adjuvant asdf scrutiny) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file cl-robdd :system-name
  cl-robdd :dependencies (adjuvant asdf) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file cl-robdd-analysis
  :system-name cl-robdd-analysis :dependencies (adjuvant asdf cl-fad cl-robdd)
  :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file cl-robdd-analysis-test
  :system-name cl-robdd-analysis-test :dependencies
  (adjuvant asdf cl-robdd-analysis scrutiny) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file cl-robdd-test :system-name
  cl-robdd-test :dependencies (adjuvant asdf cl-fad cl-robdd scrutiny) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file dispatch :system-name
  dispatch :dependencies (adjuvant asdf closer-mop) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file dispatch-test :system-name
  dispatch-test :dependencies (asdf dispatch scrutiny) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file lisp-types :system-name
  lisp-types :dependencies (adjuvant asdf cl-robdd dispatch) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file lisp-types-analysis
  :system-name lisp-types-analysis :dependencies
  (adjuvant asdf cl-fad cl-robdd cl-robdd-analysis lisp-types scrutiny) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file lisp-types-test :system-name
  lisp-types-test :dependencies
  (adjuvant asdf bordeaux-threads closer-mop lisp-types lisp-types-analysis
   scrutiny)
  :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file ndfa :system-name ndfa
  :dependencies (adjuvant asdf) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file ndfa-test :system-name
  ndfa-test :dependencies (adjuvant asdf ndfa scrutiny) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file research :system-name
  research :dependencies
  (2d-array-test adjuvant adjuvant-test asdf dispatch-test ndfa-test
   rte-regexp-test rte-test scrutiny scrutiny-test)
  :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file rte :system-name rte
  :dependencies (adjuvant asdf lisp-types ndfa) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file rte-regexp :system-name
  rte-regexp :dependencies (adjuvant asdf rte yacc) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file rte-regexp-test :system-name
  rte-regexp-test :dependencies (adjuvant asdf rte rte-regexp scrutiny) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file rte-test :system-name
  rte-test :dependencies
  (2d-array 2d-array-test adjuvant asdf lisp-types-test ndfa-test rte
   rte-regexp-test scrutiny)
  :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file scrutiny :system-name
  scrutiny :dependencies (adjuvant asdf) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project regular-type-expression :system-file scrutiny-test :system-name
  scrutiny-test :dependencies (asdf scrutiny) :source
  (("branched-git"
    "https://gitlab.lrde.epita.fr/jnewton/regular-type-expression.git"
    "export-to-quicklisp")))
 (:ql-project remote-js :system-file remote-js :system-name remote-js
  :dependencies (asdf cl-markup find-port trivial-ws) :source
  (("git" "https://github.com/ceramic/remote-js.git")))
 (:ql-project remote-js :system-file remote-js-test :system-name remote-js-test
  :dependencies (asdf bordeaux-threads fiveam remote-js trivial-open-browser)
  :source (("git" "https://github.com/ceramic/remote-js.git")))
 (:ql-project repl-utilities :system-file repl-utilities :system-name
  repl-utilities :dependencies (asdf) :source
  (("git" "https://github.com/m-n/repl-utilities.git")))
 (:ql-project replic :system-file replic :system-name replic :dependencies
  (asdf cl-ansi-text cl-readline py-configparser shlex str unix-opts) :source
  (("git" "https://github.com/vindarel/replic.git")))
 (:ql-project replic :system-file replic-test :system-name replic-test
  :dependencies (asdf prove prove-asdf replic) :source
  (("git" "https://github.com/vindarel/replic.git")))
 (:ql-project resignal-bind :system-file resignal-bind :system-name
  resignal-bind :dependencies (asdf closer-mop jingoh.documentizer) :source
  (("git" "https://github.com/hyotang666/resignal-bind.git")))
 (:ql-project resignal-bind :system-file resignal-bind.test :system-name
  resignal-bind.test :dependencies (asdf jingoh resignal-bind) :source
  (("git" "https://github.com/hyotang666/resignal-bind.git")))
 (:ql-project restas :system-file restas :system-name restas :dependencies
  (alexandria asdf bordeaux-threads cffi data-sift hunchentoot routes) :source
  (("git" "https://github.com/archimag/restas.git")
   ("tagged-git" "https://github.com/archimag/restas.git" "version-0.1.3")
   nil))
 (:ql-project restas :system-file restas-doc :system-name restas-doc
  :dependencies (asdf restas restas-directory-publisher sphinx) :source
  (("git" "https://github.com/archimag/restas.git")
   ("tagged-git" "https://github.com/archimag/restas.git" "version-0.1.3")
   nil))
 (:ql-project restas-directory-publisher :system-file
  restas-directory-publisher :system-name restas-directory-publisher
  :dependencies (closure-template local-time restas) :source
  (("git" "https://github.com/archimag/restas-directory-publisher.git")
   ("tagged-git" "https://github.com/archimag/restas-directory-publisher.git"
    "version-0.1")))
 (:ql-project restas.file-publisher :system-file restas.file-publisher
  :system-name restas.file-publisher :dependencies (cl-fad restas) :source
  (("git" "https://github.com/kevinlynx/restas.file-publisher.git")))
 (:ql-project restful :system-file restful :system-name restful :dependencies
  (alexandria cl-ppcre closer-mop hunchentoot jonathan) :source
  (("git" "https://github.com/Ralt/restful.git")))
 (:ql-project restful :system-file restful-test :system-name restful-test
  :dependencies (drakma prove prove-asdf restful) :source
  (("git" "https://github.com/Ralt/restful.git")))
 (:ql-project restricted-functions :system-file restricted-functions
  :system-name restricted-functions :dependencies
  (alexandria asdf closer-mop simplified-types trivia trivial-arguments
   trivial-garbage)
  :source (("git" "https://github.com/marcoheisig/restricted-functions.git")))
 (:ql-project retrospectiff :system-file retrospectiff :system-name
  retrospectiff :dependencies
  (asdf cl-jpeg com.gigamonkeys.binary-data deflate flexi-streams ieee-floats
   opticl-core)
  :source (("git" "https://github.com/slyrus/retrospectiff")))
 (:ql-project retrospectiff :system-file retrospectiff :system-name
  retrospectiff/test :dependencies (fiveam retrospectiff) :source
  (("git" "https://github.com/slyrus/retrospectiff")))
 (:ql-project reversi :system-file reversi :system-name reversi :dependencies
  (asdf) :source (("kmr-git" "reversi")))
 (:ql-project rfc2109 :system-file rfc2109 :system-name rfc2109 :dependencies
  (split-sequence) :source
  (("git" "https://gitlab.common-lisp.net/rfc2109/rfc2109.git") nil))
 (:ql-project rfc2109 :system-file rfc2109 :system-name rfc2109/test
  :dependencies (fiveam split-sequence) :source
  (("git" "https://gitlab.common-lisp.net/rfc2109/rfc2109.git") nil))
 (:ql-project rfc2388 :system-file rfc2388 :system-name rfc2388 :dependencies
  (asdf) :source (("git" "https://github.com/jdz/rfc2388.git")))
 (:ql-project rfc2388-binary :system-file rfc2388-binary :system-name
  rfc2388-binary :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/ucw/rfc2388-binary.git")))
 (:ql-project rlc :system-file rlc :system-name rlc :dependencies (kmrcl)
  :source (("kmr-git" "rlc")))
 (:ql-project roan :system-file roan :system-name roan :dependencies
  (alexandria asdf asdf-encodings binascii cl-fad cl-interpol cl-ppcre drakma
   iterate local-time named-readtables plump uuid zip)
  :source (("git" "https://bitbucket.org/dfmorrison/roan.git")))
 (:ql-project roan :system-file roan :system-name roan/doc :dependencies
  (alexandria asdf asdf-encodings cl-fad cl-ppcre iterate roan
   trivial-documentation)
  :source (("git" "https://bitbucket.org/dfmorrison/roan.git")))
 (:ql-project roan :system-file roan :system-name roan/test :dependencies
  (alexandria asdf asdf-encodings cl-fad cl-ppcre iterate lisp-unit2 roan)
  :source (("git" "https://bitbucket.org/dfmorrison/roan.git")))
 (:ql-project rock :system-file rock :system-name rock :dependencies
  (anaphora asdf trivial-download trivial-extract trivial-types) :source
  (("git" "https://github.com/eudoxia0/rock.git")))
 (:ql-project rock :system-file rock-test :system-name rock-test :dependencies
  (fiveam rock) :source (("git" "https://github.com/eudoxia0/rock.git")))
 (:ql-project rock :system-file rock-web :system-name rock-web :dependencies
  (3bmd 3bmd-ext-code-blocks 3bmd-ext-definition-lists cl-markup lass rock)
  :source (("git" "https://github.com/eudoxia0/rock.git")))
 (:ql-project romreader :system-file romreader :system-name romreader
  :dependencies nil :source
  (("git" "https://github.com/redline6561/romreader.git")))
 (:ql-project rove :system-file rove :system-name rove :dependencies
  (asdf bordeaux-threads cl-ppcre dissect trivial-gray-streams) :source
  (("git" "https://github.com/fukamachi/rove.git")))
 (:ql-project rove :system-file rove :system-name rove/tests :dependencies
  (rove) :source (("git" "https://github.com/fukamachi/rove.git")))
 (:ql-project rpcq :system-file rpcq :system-name rpcq :dependencies
  (alexandria asdf bordeaux-threads cl-messagepack cl-ppcre cl-syslog
   flexi-streams local-time parse-float pzmq trivial-backtrace uuid yason)
  :source (("latest-github-release" "https://github.com/rigetti/rpcq.git")))
 (:ql-project rpcq :system-file rpcq-tests :system-name rpcq-tests
  :dependencies (asdf cl-messagepack cl-syslog fiasco rpcq uiop) :source
  (("latest-github-release" "https://github.com/rigetti/rpcq.git")))
 (:ql-project rpm :system-file rpm :system-name rpm :dependencies
  (cl-ppcre fare-utils inferior-shell lambda-reader) :source
  (("git" "https://gitlab.common-lisp.net/qitab/rpm.git")))
 (:ql-project rs-colors :system-file rs-colors :system-name rs-colors
  :dependencies
  (alexandria asdf closer-mop iterate read-number rs-colors-internal) :source
  (("git" "https://github.com/ralph-schleicher/rs-colors.git")))
 (:ql-project rs-colors :system-file rs-colors-html :system-name rs-colors-html
  :dependencies (asdf rs-colors) :source
  (("git" "https://github.com/ralph-schleicher/rs-colors.git")))
 (:ql-project rs-colors :system-file rs-colors-internal :system-name
  rs-colors-internal :dependencies (asdf iterate) :source
  (("git" "https://github.com/ralph-schleicher/rs-colors.git")))
 (:ql-project rs-colors :system-file rs-colors-material-io :system-name
  rs-colors-material-io :dependencies (asdf rs-colors) :source
  (("git" "https://github.com/ralph-schleicher/rs-colors.git")))
 (:ql-project rs-colors :system-file rs-colors-ral :system-name rs-colors-ral
  :dependencies (asdf rs-colors) :source
  (("git" "https://github.com/ralph-schleicher/rs-colors.git")))
 (:ql-project rs-colors :system-file rs-colors-ral-design :system-name
  rs-colors-ral-design :dependencies (asdf rs-colors) :source
  (("git" "https://github.com/ralph-schleicher/rs-colors.git")))
 (:ql-project rs-colors :system-file rs-colors-svg :system-name rs-colors-svg
  :dependencies (asdf rs-colors) :source
  (("git" "https://github.com/ralph-schleicher/rs-colors.git")))
 (:ql-project rs-colors :system-file rs-colors-tango :system-name
  rs-colors-tango :dependencies (asdf rs-colors) :source
  (("git" "https://github.com/ralph-schleicher/rs-colors.git")))
 (:ql-project rs-colors :system-file rs-colors-x11 :system-name rs-colors-x11
  :dependencies (asdf rs-colors) :source
  (("git" "https://github.com/ralph-schleicher/rs-colors.git")))
 (:ql-project rs-json :system-file json-test-suite :system-name json-test-suite
  :dependencies (asdf) :source
  (("git" "https://github.com/ralph-schleicher/rs-json.git")))
 (:ql-project rs-json :system-file json-test-suite :system-name
  json-test-suite/parser :dependencies
  (cl-json com.inuoe.jzon iterate jonathan json-streams jsown rs-json shasht
   st-json trivial-garbage yason)
  :source (("git" "https://github.com/ralph-schleicher/rs-json.git")))
 (:ql-project rs-json :system-file rs-json :system-name rs-json :dependencies
  (alexandria asdf cl-unicode iterate) :source
  (("git" "https://github.com/ralph-schleicher/rs-json.git")))
 (:ql-project rs-json :system-file rs-json :system-name rs-json/bench
  :dependencies
  (cl-json com.inuoe.jzon iterate jonathan json-streams jsown rs-json shasht
   st-json trivial-garbage yason)
  :source (("git" "https://github.com/ralph-schleicher/rs-json.git")))
 (:ql-project rs-json :system-file rs-json :system-name rs-json/tests
  :dependencies (iterate lisp-unit rs-json) :source
  (("git" "https://github.com/ralph-schleicher/rs-json.git")))
 (:ql-project rt :system-file rt :system-name rt :dependencies nil :source
  (("kmr-git" "rt")))
 (:ql-project rt-events :system-file rt-events :system-name rt-events
  :dependencies (bordeaux-threads) :source
  (("git" "https://github.com/npatrick04/rt-events.git")))
 (:ql-project rt-events :system-file rt-events.examples :system-name
  rt-events.examples :dependencies (bordeaux-threads rt-events) :source
  (("git" "https://github.com/npatrick04/rt-events.git")))
 (:ql-project rtg-math :system-file rtg-math :system-name rtg-math
  :dependencies (alexandria asdf documentation-utils glsl-symbols) :source
  (("branched-git" "https://github.com/cbaggers/rtg-math.git"
    "release-quicklisp")))
 (:ql-project rtg-math :system-file rtg-math.vari :system-name rtg-math.vari
  :dependencies (asdf glsl-symbols rtg-math varjo) :source
  (("branched-git" "https://github.com/cbaggers/rtg-math.git"
    "release-quicklisp")))
 (:ql-project rucksack :system-file rucksack :system-name rucksack
  :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/rucksack/rucksack.git")))
 (:ql-project rucksack :system-file rucksack-test :system-name rucksack-test
  :dependencies (rucksack) :source
  (("git" "https://gitlab.common-lisp.net/rucksack/rucksack.git")))
 (:ql-project rutils :system-file rutils :system-name rutils :dependencies
  (asdf closer-mop named-readtables) :source
  (("git" "https://github.com/vseloved/rutils.git")
   ("tagged-git" "https://github.com/vseloved/rutils.git" "1.0.0")))
 (:ql-project rutils :system-file rutils-test :system-name rutils-test
  :dependencies (asdf rutils should-test) :source
  (("git" "https://github.com/vseloved/rutils.git")
   ("tagged-git" "https://github.com/vseloved/rutils.git" "1.0.0")))
 (:ql-project rutils :system-file rutilsx :system-name rutilsx :dependencies
  (asdf closer-mop named-readtables rutils) :source
  (("git" "https://github.com/vseloved/rutils.git")
   ("tagged-git" "https://github.com/vseloved/rutils.git" "1.0.0")))
 (:ql-project ryeboy :system-file ryeboy :system-name ryeboy :dependencies
  (alexandria asdf com.google.base protobuf prove-asdf usocket) :source
  (("git" "https://github.com/AeroNotix/ryeboy.git")))
 (:ql-project ryeboy :system-file ryeboy :system-name ryeboy/test :dependencies
  (prove prove-asdf ryeboy) :source
  (("git" "https://github.com/AeroNotix/ryeboy.git")))
 (:ql-project s-base64 :system-file s-base64 :system-name s-base64
  :dependencies nil :source (("git" "https://github.com/svenvc/s-base64.git")))
 (:ql-project s-dot2 :system-file s-dot2 :system-name s-dot2 :dependencies
  (asdf uiop) :source (("git" "https://notabug.org/cage/s-dot2.git")))
 (:ql-project s-graphviz :system-file s-graphviz :system-name s-graphviz
  :dependencies (asdf iterate literate-lisp) :source
  (("git" "https://github.com/jingtaozf/s-graphviz.git")))
 (:ql-project s-http-client :system-file s-http-client :system-name
  s-http-client :dependencies (asdf chipz puri s-base64 s-sysdeps s-utils)
  :source (("git" "https://github.com/svenvc/s-http-client.git")))
 (:ql-project s-http-server :system-file s-http-server :system-name
  s-http-server :dependencies (asdf puri s-base64 s-sysdeps s-utils salza2)
  :source (("git" "https://github.com/svenvc/s-http-server.git")))
 (:ql-project s-sysdeps :system-file s-sysdeps :system-name s-sysdeps
  :dependencies (asdf bordeaux-threads usocket usocket-server) :source
  (("git" "https://github.com/svenvc/s-sysdeps.git")))
 (:ql-project s-utils :system-file s-utils :system-name s-utils :dependencies
  (asdf) :source (("git" "https://github.com/svenvc/s-utils.git")))
 (:ql-project s-xml :system-file s-xml :system-name s-xml :dependencies nil
  :source (("git" "https://gitlab.common-lisp.net/s-xml/s-xml.git")))
 (:ql-project s-xml :system-file s-xml :system-name s-xml.examples
  :dependencies (s-xml) :source
  (("git" "https://gitlab.common-lisp.net/s-xml/s-xml.git")))
 (:ql-project s-xml :system-file s-xml :system-name s-xml.test :dependencies
  (s-xml) :source (("git" "https://gitlab.common-lisp.net/s-xml/s-xml.git")))
 (:ql-project s-xml-rpc :system-file s-xml-rpc :system-name s-xml-rpc
  :dependencies (asdf s-xml) :source
  (("git" "https://source.atlas.engineer/public/s-xml-rpc/")))
 (:ql-project safe-queue :system-file safe-queue :system-name safe-queue
  :dependencies (asdf split-sequence) :source
  (("git" "https://github.com/deadtrickster/safe-queue.git")))
 (:ql-project safe-read :system-file safe-read :system-name safe-read
  :dependencies (asdf local-time trivial-garbage) :source
  (("git" "https://github.com/phoe/safe-read.git")))
 (:ql-project safe-read :system-file safe-read :system-name safe-read/test
  :dependencies (safe-read) :source
  (("git" "https://github.com/phoe/safe-read.git")))
 (:ql-project safety-params :system-file safety-params :system-name
  safety-params :dependencies (alexandria asdf parse-number) :source
  (("git" "https://github.com/fukamachi/safety-params.git")))
 (:ql-project safety-params :system-file safety-params :system-name
  safety-params/tests :dependencies (rove safety-params) :source
  (("git" "https://github.com/fukamachi/safety-params.git")))
 (:ql-project salza2 :system-file salza2 :system-name salza2 :dependencies
  (asdf trivial-gray-streams) :source
  (("https" "https://www.xach.com/lisp/salza2.tgz")))
 (:ql-project salza2 :system-file salza2 :system-name salza2/test :dependencies
  (chipz flexi-streams parachute salza2) :source
  (("https" "https://www.xach.com/lisp/salza2.tgz")))
 (:ql-project sandalphon.lambda-list :system-file sandalphon.lambda-list
  :system-name sandalphon.lambda-list :dependencies (asdf) :source
  (("git" "https://github.com/Bike/sandalphon.lambda-list.git")))
 (:ql-project sanity-clause :system-file sanity-clause :system-name
  sanity-clause :dependencies
  (alexandria arrows asdf cl-ppcre closer-mop local-time parse-float quri str
   trivial-types)
  :source (("git" "https://github.com/fisxoj/sanity-clause.git")))
 (:ql-project sanity-clause :system-file sanity-clause :system-name
  sanity-clause/test :dependencies (rove sanity-clause) :source
  (("git" "https://github.com/fisxoj/sanity-clause.git")))
 (:ql-project sapaclisp :system-file sapaclisp :system-name sapaclisp
  :dependencies nil :source
  (("https" "https://common-lisp.net/project/sapaclisp/sapaclisp-1.0a.tgz")))
 (:ql-project sb-cga :system-file sb-cga :system-name sb-cga :dependencies
  (alexandria asdf) :source
  (("git" "https://github.com/nikodemus/sb-cga.git")))
 (:ql-project sb-fastcgi :system-file sb-fastcgi :system-name sb-fastcgi
  :dependencies (asdf) :source
  (("git" "https://github.com/KDr2/sb-fastcgi.git")))
 (:ql-project sb-vector-io :system-file sb-vector-io :system-name sb-vector-io
  :dependencies nil :source
  (("git" "https://github.com/nikodemus/sb-vector-io.git")))
 (:ql-project sc-extensions :system-file sc-extensions :system-name
  sc-extensions :dependencies (alexandria asdf cl-collider named-readtables)
  :source (("git" "https://github.com/byulparan/sc-extensions.git")))
 (:ql-project schannel :system-file schannel :system-name schannel
  :dependencies (asdf cffi trivial-gray-streams) :source
  (("git" "https://github.com/fjames86/schannel.git")))
 (:ql-project scheduler :system-file scheduler :system-name scheduler
  :dependencies (alexandria asdf local-time optima optima.ppcre split-sequence)
  :source (("git" "https://github.com/endsec/scheduler.git")))
 (:ql-project scheduler :system-file scheduler :system-name scheduler/tests
  :dependencies (fiveam local-time scheduler) :source
  (("git" "https://github.com/endsec/scheduler.git")))
 (:ql-project screamer :system-file screamer :system-name screamer
  :dependencies (asdf) :source
  (("git" "https://github.com/nikodemus/screamer")))
 (:ql-project screamer :system-file screamer-tests :system-name screamer-tests
  :dependencies (asdf hu.dwim.stefil iterate screamer) :source
  (("git" "https://github.com/nikodemus/screamer")))
 (:ql-project scriba :system-file scriba :system-name scriba :dependencies
  (asdf common-doc-plump esrap plump-sexp) :source
  (("git" "https://github.com/CommonDoc/scriba.git")))
 (:ql-project scriba :system-file scriba-test :system-name scriba-test
  :dependencies (asdf fiveam scriba) :source
  (("git" "https://github.com/CommonDoc/scriba.git")))
 (:ql-project scribble :system-file scribble :system-name scribble
  :dependencies
  (asdf fare-memoization fare-quasiquote-readtable fare-utils meta ptc) :source
  (("git" "https://gitlab.common-lisp.net/frideau/scribble.git")))
 (:ql-project scribble :system-file scribble :system-name scribble/test
  :dependencies (babel hu.dwim.stefil scribble) :source
  (("git" "https://gitlab.common-lisp.net/frideau/scribble.git")))
 (:ql-project scriptl :system-file scriptl :system-name scriptl :dependencies
  (alexandria asdf bordeaux-threads cl-ppcre defpackage-plus iolib osicat
   trivial-backtrace trivial-gray-streams trivial-utf-8)
  :source (("git" "https://github.com/rpav/ScriptL.git")))
 (:ql-project scriptl :system-file scriptl-examples :system-name
  scriptl-examples :dependencies (asdf scriptl unix-options) :source
  (("git" "https://github.com/rpav/ScriptL.git")))
 (:ql-project scriptl :system-file scriptl-util :system-name scriptl-util
  :dependencies (asdf cl-ppcre scriptl) :source
  (("git" "https://github.com/rpav/ScriptL.git")))
 (:ql-project sdl2-game-controller-db :system-file sdl2-game-controller-db
  :system-name sdl2-game-controller-db :dependencies (asdf sdl2) :source
  (("branched-git" "https://github.com/cbaggers/sdl2-game-controller-db.git"
    "release-quicklisp")))
 (:ql-project sdl2kit :system-file sdl2kit :system-name sdl2kit :dependencies
  (alexandria cl-opengl defpackage-plus sdl2) :source
  (("git" "https://github.com/lispgames/sdl2kit.git")))
 (:ql-project sdl2kit :system-file sdl2kit-examples :system-name
  sdl2kit-examples :dependencies
  (alexandria defpackage-plus glkit mathkit sdl2kit) :source
  (("git" "https://github.com/lispgames/sdl2kit.git")))
 (:ql-project sealable-metaobjects :system-file sealable-metaobjects
  :system-name sealable-metaobjects :dependencies (asdf closer-mop) :source
  (("git" "https://github.com/marcoheisig/sealable-metaobjects.git")))
 (:ql-project secret-values :system-file secret-values :system-name
  secret-values :dependencies (asdf) :source
  (("git" "https://github.com/rotatef/secret-values.git")))
 (:ql-project secure-random :system-file secure-random :system-name
  secure-random :dependencies (cl+ssl) :source
  (("git" "https://github.com/avodonosov/secure-random.git")))
 (:ql-project seedable-rng :system-file seedable-rng :system-name seedable-rng
  :dependencies (asdf cl-pcg ironclad mfiano-utils) :source
  (("git" "https://github.com/mfiano/seedable-rng.git")))
 (:ql-project sel :system-file software-evolution-library :system-name
  software-evolution-library :dependencies
  (asdf asdf-package-system atomics cffi-grovel deploy gt) :source
  (("git" "https://github.com/GrammaTech/sel.git")))
 (:ql-project sel :system-file software-evolution-library :system-name
  software-evolution-library/deploy-tree-sitter-interface :dependencies
  (deploy) :source (("git" "https://github.com/GrammaTech/sel.git")))
 (:ql-project sel :system-file software-evolution-library :system-name
  software-evolution-library/run-dump-store :dependencies nil :source
  (("git" "https://github.com/GrammaTech/sel.git")))
 (:ql-project sel :system-file software-evolution-library :system-name
  software-evolution-library/run-rest-server :dependencies nil :source
  (("git" "https://github.com/GrammaTech/sel.git")))
 (:ql-project sel :system-file software-evolution-library :system-name
  software-evolution-library/run-test-parse :dependencies nil :source
  (("git" "https://github.com/GrammaTech/sel.git")))
 (:ql-project sel :system-file software-evolution-library :system-name
  software-evolution-library/run-tree-sitter-interface :dependencies nil
  :source (("git" "https://github.com/GrammaTech/sel.git")))
 (:ql-project sel :system-file software-evolution-library :system-name
  software-evolution-library/run-tree-sitter-py-generator :dependencies nil
  :source (("git" "https://github.com/GrammaTech/sel.git")))
 (:ql-project sel :system-file software-evolution-library :system-name
  software-evolution-library/terminal :dependencies
  (cffi cffi-grovel cl-interpol gt) :source
  (("git" "https://github.com/GrammaTech/sel.git")))
 (:ql-project sel :system-file software-evolution-library :system-name
  software-evolution-library/utility/fare-qq :dependencies
  (fare-quasiquote-extras) :source
  (("git" "https://github.com/GrammaTech/sel.git")))
 (:ql-project select :system-file select :system-name select :dependencies
  (alexandria anaphora asdf let-plus) :source
  (("git" "https://github.com/Lisp-Stat/select.git")))
 (:ql-project select :system-file select :system-name select/tests
  :dependencies (fiveam select) :source
  (("git" "https://github.com/Lisp-Stat/select.git")))
 (:ql-project select-file :system-file select-file :system-name select-file
  :dependencies (asdf cl-fad mcclim) :source
  (("git" "https://github.com/tapioco71/select-file.git")))
 (:ql-project semantic-spinneret :system-file semantic-spinneret :system-name
  semantic-spinneret :dependencies (alexandria spinneret) :source
  (("git" "https://github.com/rmhsilva/semantic-spinneret.git")))
 (:ql-project sequence-iterators :system-file extensible-sequences :system-name
  extensible-sequences :dependencies (sequence-iterators) :source
  (("git"
    "https://gitlab.common-lisp.net/sequence-iterators/sequence-iterators.git")))
 (:ql-project sequence-iterators :system-file sequence-iterators :system-name
  sequence-iterators :dependencies (parse-declarations-1.0) :source
  (("git"
    "https://gitlab.common-lisp.net/sequence-iterators/sequence-iterators.git")))
 (:ql-project sequence-iterators :system-file sequence-iterators :system-name
  sequence-iterators-test :dependencies (sequence-iterators) :source
  (("git"
    "https://gitlab.common-lisp.net/sequence-iterators/sequence-iterators.git")))
 (:ql-project serapeum :system-file serapeum :system-name serapeum
  :dependencies
  (alexandria asdf bordeaux-threads global-vars introspect-environment
   parse-declarations-1.0 parse-number split-sequence string-case trivia
   trivial-cltl2 trivial-file-size trivial-garbage trivial-macroexpand-all)
  :source (("git" "https://github.com/ruricolist/serapeum.git")))
 (:ql-project serapeum :system-file serapeum :system-name serapeum/docs
  :dependencies (cl-ppcre serapeum swank) :source
  (("git" "https://github.com/ruricolist/serapeum.git")))
 (:ql-project serializable-object :system-file serializable-object :system-name
  serializable-object :dependencies (alexandria asdf) :source
  (("git" "https://github.com/guicho271828/serializable-object.git")))
 (:ql-project serializable-object :system-file serializable-object.test
  :system-name serializable-object.test :dependencies
  (asdf fiveam serializable-object) :source
  (("git" "https://github.com/guicho271828/serializable-object.git")))
 (:ql-project series :system-file series :system-name series :dependencies nil
  :source (("git" "git://git.code.sf.net/p/series/series")))
 (:ql-project series :system-file series :system-name series-tests
  :dependencies (series) :source
  (("git" "git://git.code.sf.net/p/series/series")))
 (:ql-project session-token :system-file session-token :system-name
  session-token :dependencies (cl-isaac) :source
  (("git" "https://github.com/Inaimathi/session-token.git")))
 (:ql-project sexml :system-file sexml :system-name sexml :dependencies
  (alexandria cl-ppcre contextl cxml macroexpand-dammit) :source
  (("git" "https://github.com/madnificent/SEXML.git")))
 (:ql-project sexml :system-file sexml-objects :system-name sexml-objects
  :dependencies (sexml) :source
  (("git" "https://github.com/madnificent/SEXML.git")))
 (:ql-project sha1 :system-file sha1 :system-name sha1 :dependencies (asdf)
  :source (("git" "https://github.com/massung/sha1.git")))
 (:ql-project sha3 :system-file sha3 :system-name sha3 :dependencies (asdf)
  :source (("git" "https://github.com/pmai/sha3.git")))
 (:ql-project shadchen :system-file shadchen :system-name shadchen
  :dependencies nil :source
  (("git" "https://github.com/VincentToups/shadchen.git")))
 (:ql-project shadow :system-file shadow :system-name shadow :dependencies
  (asdf cffi cl-opengl glsl-packing mfiano-utils static-vectors varjo) :source
  (("git" "https://github.com/mfiano/shadow.git")))
 (:ql-project shared-preferences :system-file shared-preferences :system-name
  shared-preferences :dependencies (asdf inheriting-readers trivial-garbage)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/shared-preferences_latest.tar.gz")))
 (:ql-project shared-preferences :system-file shared-preferences_tests
  :system-name shared-preferences_tests :dependencies
  (asdf parachute shared-preferences) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/shared-preferences_latest.tar.gz")))
 (:ql-project shasht :system-file shasht :system-name shasht :dependencies
  (asdf closer-mop trivial-do) :source
  (("git" "https://github.com/yitzchak/shasht.git")))
 (:ql-project shasht :system-file shasht :system-name shasht/test :dependencies
  (alexandria parachute shasht) :source
  (("git" "https://github.com/yitzchak/shasht.git")))
 (:ql-project sheeple :system-file sheeple :system-name sheeple :dependencies
  (asdf) :source (("git" "https://github.com/zkat/sheeple.git")))
 (:ql-project sheeple :system-file sheeple :system-name sheeple-tests
  :dependencies (fiveam sheeple) :source
  (("git" "https://github.com/zkat/sheeple.git")))
 (:ql-project shellpool :system-file shellpool :system-name shellpool
  :dependencies (asdf bordeaux-threads bt-semaphore cl-fad trivial-features)
  :source (("git" "https://github.com/jaredcdavis/shellpool.git")))
 (:ql-project shelly :system-file shelly :system-name shelly :dependencies
  (babel bordeaux-threads cl-fad local-time split-sequence trivial-signal uiop)
  :source (("git" "https://github.com/fukamachi/shelly.git")))
 (:ql-project shelly :system-file shelly-test :system-name shelly-test
  :dependencies (cl-test-more shelly) :source
  (("git" "https://github.com/fukamachi/shelly.git")))
 (:ql-project shop3 :system-file rovers-problem-translator :system-name
  rovers-problem-translator :dependencies (alexandria asdf iterate shop3)
  :source (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project shop3 :system-file shop3 :system-name shop3 :dependencies
  (alexandria asdf fiveam-asdf iterate trivial-garbage) :source
  (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project shop3 :system-file shop3-thmpr-api :system-name shop3-thmpr-api
  :dependencies (asdf shop3) :source
  (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project shop3 :system-file shop3 :system-name shop3/common :dependencies
  (alexandria iterate) :source
  (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project shop3 :system-file shop3 :system-name shop3/openstacks
  :dependencies (shop3) :source
  (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project shop3 :system-file shop3 :system-name shop3/plan-grapher
  :dependencies (cl-dot shop3) :source
  (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project shop3 :system-file shop3 :system-name shop3/rovers :dependencies
  (shop3) :source (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project shop3 :system-file shop3 :system-name shop3/test-unifier
  :dependencies (alexandria fiveam-asdf) :source
  (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project shop3 :system-file shop3 :system-name shop3/theorem-prover
  :dependencies (alexandria iterate) :source
  (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project shop3 :system-file shop3 :system-name shop3/unifier :dependencies
  (alexandria) :source (("git" "https://github.com/shop-planner/shop3.git")))
 (:ql-project should-test :system-file should-test :system-name should-test
  :dependencies (asdf cl-ppcre local-time osicat rutils) :source
  (("git" "https://github.com/vseloved/should-test.git")))
 (:ql-project shuffletron :system-file shuffletron :system-name shuffletron
  :dependencies (asdf mixalot mixalot-flac mixalot-mp3 mixalot-vorbis osicat)
  :source (("git" "https://github.com/ahefner/shuffletron.git")))
 (:ql-project si-kanren :system-file si-kanren :system-name si-kanren
  :dependencies (asdf) :source
  (("git" "https://github.com/rgc69/si-kanren.git")))
 (:ql-project simple-actors :system-file simple-actors :system-name
  simple-actors :dependencies (asdf bordeaux-threads) :source
  (("git" "https://github.com/j3pic/simple-actors.git")))
 (:ql-project simple-config :system-file simple-config :system-name
  simple-config :dependencies (asdf str uiop) :source
  (("git" "https://github.com/compufox/simple-config.git")))
 (:ql-project simple-config :system-file simple-config-test :system-name
  simple-config-test :dependencies (asdf prove simple-config) :source
  (("git" "https://github.com/compufox/simple-config.git")))
 (:ql-project simple-currency :system-file simple-currency :system-name
  simple-currency :dependencies
  (cl-store dexador plump simple-date split-sequence) :source
  (("git" "https://github.com/a0-prw/simple-currency.git")))
 (:ql-project simple-date-time :system-file simple-date-time :system-name
  simple-date-time :dependencies (cl-ppcre) :source
  (("git" "https://github.com/quek/simple-date-time.git")))
 (:ql-project simple-finalizer :system-file simple-finalizer :system-name
  simple-finalizer :dependencies (cffi trivial-garbage) :source
  (("git" "https://github.com/Balooga/Simple-Finalizer.git")))
 (:ql-project simple-flow-dispatcher :system-file simple-flow-dispatcher
  :system-name simple-flow-dispatcher :dependencies
  (alexandria asdf bodge-queue cl-muth) :source
  (("tagged-git" "https://github.com/borodust/simple-flow-dispatcher.git"
    "stable")))
 (:ql-project simple-guess :system-file simple-guess :system-name simple-guess
  :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/simple-guess_latest.tar.gz")))
 (:ql-project simple-guess :system-file simple-guess_tests :system-name
  simple-guess_tests :dependencies (asdf fakenil parachute simple-guess)
  :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/simple-guess_latest.tar.gz")))
 (:ql-project simple-inferiors :system-file simple-inferiors :system-name
  simple-inferiors :dependencies
  (asdf bordeaux-threads documentation-utils uiop) :source
  (("git" "https://github.com/Shinmera/simple-inferiors.git")))
 (:ql-project simple-neural-network :system-file simple-neural-network
  :system-name simple-neural-network :dependencies (asdf cl-store lparallel)
  :source (("git" "https://codeberg.org/glv/simple-neural-network.git")))
 (:ql-project simple-neural-network :system-file simple-neural-network
  :system-name simple-neural-network/test :dependencies
  (chipz fiveam simple-neural-network uiop) :source
  (("git" "https://codeberg.org/glv/simple-neural-network.git")))
 (:ql-project simple-parallel-tasks :system-file simple-parallel-tasks
  :system-name simple-parallel-tasks :dependencies (asdf chanl) :source
  (("git" "https://codeberg.org/glv/simple-parallel-tasks.git")))
 (:ql-project simple-parallel-tasks :system-file simple-parallel-tasks-tests
  :system-name simple-parallel-tasks-tests :dependencies
  (asdf fiveam simple-parallel-tasks) :source
  (("git" "https://codeberg.org/glv/simple-parallel-tasks.git")))
 (:ql-project simple-rgb :system-file simple-rgb :system-name simple-rgb
  :dependencies (asdf) :source
  (("git" "https://github.com/wmannis/simple-rgb")))
 (:ql-project simple-routes :system-file simple-routes :system-name
  simple-routes :dependencies (asdf cl-ppcre hunchentoot) :source
  (("git" "https://gitlab.com/vancan1ty/simple-routes.git")))
 (:ql-project simple-routes :system-file simple-routes :system-name
  simpleroutes-demo :dependencies
  (cl-fad cl-ppcre cl-who hunchentoot simple-routes) :source
  (("git" "https://gitlab.com/vancan1ty/simple-routes.git")))
 (:ql-project simple-routes :system-file simple-routes :system-name
  simpleroutes-test :dependencies (simple-routes) :source
  (("git" "https://gitlab.com/vancan1ty/simple-routes.git")))
 (:ql-project simple-tasks :system-file simple-tasks :system-name simple-tasks
  :dependencies (array-utils asdf bordeaux-threads dissect) :source
  (("git" "https://github.com/Shinmera/simple-tasks.git")))
 (:ql-project simplet :system-file simplet :system-name simplet :dependencies
  (asdf) :source (("git" "https://github.com/noloop/simplet.git")))
 (:ql-project simplet :system-file simplet-asdf :system-name simplet-asdf
  :dependencies (asdf) :source
  (("git" "https://github.com/noloop/simplet.git")))
 (:ql-project simplet :system-file simplet :system-name simplet/test
  :dependencies (simplet) :source
  (("git" "https://github.com/noloop/simplet.git")))
 (:ql-project simplified-types :system-file simplified-types :system-name
  simplified-types :dependencies
  (alexandria asdf introspect-environment trivia) :source
  (("git" "https://github.com/marcoheisig/simplified-types.git")))
 (:ql-project simplified-types :system-file simplified-types-test-suite
  :system-name simplified-types-test-suite :dependencies
  (alexandria asdf simplified-types) :source
  (("git" "https://github.com/marcoheisig/simplified-types.git")))
 (:ql-project simpsamp :system-file simpsamp :system-name simpsamp
  :dependencies (jpl-util) :source
  (("https"
    "https://www.thoughtcrime.us/software/simpsamp/simpsamp-0.1.tar.gz")))
 (:ql-project single-threaded-ccl :system-file single-threaded-ccl :system-name
  single-threaded-ccl :dependencies nil :source
  (("git" "https://gitlab.common-lisp.net/qitab/single-threaded-ccl.git")))
 (:ql-project sip-hash :system-file sip-hash :system-name sip-hash
  :dependencies (asdf com.google.base nibbles) :source
  (("git" "https://github.com/brown/sip-hash.git")))
 (:ql-project sip-hash :system-file sip-hash :system-name sip-hash/test
  :dependencies (hu.dwim.stefil sip-hash) :source
  (("git" "https://github.com/brown/sip-hash.git")))
 (:ql-project skeleton-creator :system-file skeleton-creator :system-name
  skeleton-creator :dependencies (asdf cl-fad cl-ppcre conf simplet-asdf)
  :source (("git" "https://github.com/noloop/skeleton-creator.git")))
 (:ql-project skeleton-creator :system-file skeleton-creator :system-name
  skeleton-creator/test :dependencies (simplet simplet-asdf skeleton-creator)
  :source (("git" "https://github.com/noloop/skeleton-creator.git")))
 (:ql-project sketch :system-file sketch :system-name sketch :dependencies
  (alexandria asdf cl-geometry glkit mathkit md5 sdl2-image sdl2-ttf sdl2kit
   split-sequence static-vectors zpng)
  :source (("git" "https://github.com/vydd/sketch.git")))
 (:ql-project sketch :system-file sketch-examples :system-name sketch-examples
  :dependencies (alexandria asdf sketch) :source
  (("git" "https://github.com/vydd/sketch.git")))
 (:ql-project skippy :system-file skippy :system-name skippy :dependencies nil
  :source (("https" "https://www.xach.com/lisp/skippy.tgz")))
 (:ql-project skippy-renderer :system-file skippy-renderer :system-name
  skippy-renderer :dependencies (asdf skippy) :source
  (("git" "https://github.com/phoe/skippy-renderer.git")))
 (:ql-project skitter :system-file skitter :system-name skitter :dependencies
  (alexandria asdf rtg-math structy-defclass) :source
  (("branched-git" "https://github.com/cbaggers/skitter.git"
    "release-quicklisp")))
 (:ql-project skitter :system-file skitter.glop :system-name skitter.glop
  :dependencies (asdf glop skitter) :source
  (("branched-git" "https://github.com/cbaggers/skitter.git"
    "release-quicklisp")))
 (:ql-project skitter :system-file skitter.sdl2 :system-name skitter.sdl2
  :dependencies (asdf sdl2 skitter) :source
  (("branched-git" "https://github.com/cbaggers/skitter.git"
    "release-quicklisp")))
 (:ql-project slack-client :system-file slack-client :system-name slack-client
  :dependencies
  (babel blackbird cl-async drakma-async event-glue jonathan safe-queue
   websocket-driver)
  :source (("git" "https://github.com/kkazuo/slack-client.git")))
 (:ql-project slack-client :system-file slack-client-test :system-name
  slack-client-test :dependencies (prove prove-asdf slack-client) :source
  (("git" "https://github.com/kkazuo/slack-client.git")))
 (:ql-project slime :system-file swank :system-name swank :dependencies (asdf)
  :source (("latest-github-release" "https://github.com/slime/slime.git")))
 (:ql-project slite :system-file slite :system-name slite :dependencies
  (asdf fiveam str) :source (("git" "https://github.com/tdrhq/slite.git")))
 (:ql-project slite :system-file slite :system-name slite/lisp-unit2
  :dependencies (lisp-unit2 slite) :source
  (("git" "https://github.com/tdrhq/slite.git")))
 (:ql-project slite :system-file slite :system-name slite/parachute
  :dependencies (parachute slite) :source
  (("git" "https://github.com/tdrhq/slite.git")))
 (:ql-project slite :system-file slite :system-name slite/tests :dependencies
  (lisp-unit2 parachute slite) :source
  (("git" "https://github.com/tdrhq/slite.git")))
 (:ql-project slk-581 :system-file eclecticse.slk-581 :system-name
  eclecticse.slk-581 :dependencies (asdf cl-ppcre) :source
  (("git" "https://gitlab.com/DataLinkDroid/slk-581.git")))
 (:ql-project slot-extra-options :system-file slot-extra-options :system-name
  slot-extra-options :dependencies
  (alexandria asdf closer-mop iterate serapeum) :source
  (("git" "https://github.com/some-mthfka/slot-extra-options.git")))
 (:ql-project slot-extra-options :system-file slot-extra-options-tests
  :system-name slot-extra-options-tests :dependencies
  (alexandria asdf closer-mop iterate parachute serapeum slot-extra-options)
  :source (("git" "https://github.com/some-mthfka/slot-extra-options.git")))
 (:ql-project slot-map :system-file slot-map :system-name slot-map
  :dependencies (asdf dynamic-array mfiano-utils) :source
  (("git" "https://github.com/mfiano/slot-map.git")))
 (:ql-project sly :system-file slynk :system-name slynk :dependencies (asdf)
  :source (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly :system-file slynk :system-name slynk/arglists :dependencies
  (slynk) :source (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly :system-file slynk :system-name slynk/fancy-inspector
  :dependencies (slynk) :source
  (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly :system-file slynk :system-name slynk/indentation
  :dependencies (slynk) :source
  (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly :system-file slynk :system-name slynk/mrepl :dependencies
  (slynk) :source (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly :system-file slynk :system-name slynk/package-fu
  :dependencies (slynk) :source
  (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly :system-file slynk :system-name slynk/profiler :dependencies
  (slynk) :source (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly :system-file slynk :system-name slynk/retro :dependencies
  (slynk) :source (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly :system-file slynk :system-name slynk/stickers :dependencies
  (slynk) :source (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly :system-file slynk :system-name slynk/trace-dialog
  :dependencies (slynk) :source
  (("git" "https://github.com/joaotavora/sly.git")))
 (:ql-project sly-macrostep :system-file slynk-macrostep :system-name
  slynk-macrostep :dependencies (asdf slynk) :source
  (("git" "https://github.com/joaotavora/sly-macrostep.git")))
 (:ql-project sly-named-readtables :system-file slynk-named-readtables
  :system-name slynk-named-readtables :dependencies (asdf slynk) :source
  (("git" "https://github.com/joaotavora/sly-named-readtables.git")))
 (:ql-project smackjack :system-file smackjack :system-name smackjack
  :dependencies (alexandria asdf cl-containers cl-json hunchentoot parenscript)
  :source (("git" "https://github.com/aarvid/SmackJack")))
 (:ql-project smackjack :system-file smackjack-demo :system-name smackjack-demo
  :dependencies (asdf cl-containers cl-who local-time smackjack) :source
  (("git" "https://github.com/aarvid/SmackJack")))
 (:ql-project smart-buffer :system-file smart-buffer :system-name smart-buffer
  :dependencies (asdf flexi-streams uiop xsubseq) :source
  (("git" "https://github.com/fukamachi/smart-buffer.git")))
 (:ql-project smart-buffer :system-file smart-buffer-test :system-name
  smart-buffer-test :dependencies (asdf babel prove prove-asdf smart-buffer)
  :source (("git" "https://github.com/fukamachi/smart-buffer.git")))
 (:ql-project smug :system-file smug :system-name smug :dependencies
  (asdf asdf-package-system) :source
  (("git" "https://github.com/drewc/smug.git")))
 (:ql-project snakes :system-file snakes :system-name snakes :dependencies
  (alexandria asdf cl-cont cl-utilities closer-mop fiveam iterate) :source
  (("git" "https://github.com/BnMcGn/snakes.git")))
 (:ql-project snappy :system-file snappy :system-name snappy :dependencies
  (asdf com.google.base nibbles varint) :source
  (("git" "https://github.com/brown/snappy.git")))
 (:ql-project snappy :system-file snappy :system-name snappy/test :dependencies
  (acm-random hu.dwim.stefil nibbles snappy) :source
  (("git" "https://github.com/brown/snappy.git")))
 (:ql-project snark :system-file snark :system-name snark :dependencies
  (snark-implementation) :source
  (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-agenda :system-name snark-agenda
  :dependencies
  (snark-auxiliary-packages snark-deque snark-lisp snark-sparse-array) :source
  (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-auxiliary-packages :system-name
  snark-auxiliary-packages :dependencies nil :source
  (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-deque :system-name snark-deque
  :dependencies (snark-auxiliary-packages snark-lisp) :source
  (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-dpll :system-name snark-dpll
  :dependencies (snark-auxiliary-packages snark-lisp) :source
  (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-examples :system-name snark-examples
  :dependencies (snark) :source
  (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-feature :system-name snark-feature
  :dependencies (snark-auxiliary-packages snark-lisp) :source
  (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-implementation :system-name
  snark-implementation :dependencies
  (snark-agenda snark-auxiliary-packages snark-deque snark-dpll snark-feature
   snark-infix-reader snark-lisp snark-numbering snark-pkg snark-sparse-array)
  :source (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-infix-reader :system-name
  snark-infix-reader :dependencies (snark-auxiliary-packages snark-lisp)
  :source (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-lisp :system-name snark-lisp
  :dependencies (snark-auxiliary-packages) :source
  (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-loads :system-name snark-loads
  :dependencies nil :source (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-numbering :system-name snark-numbering
  :dependencies (snark-auxiliary-packages snark-lisp snark-sparse-array)
  :source (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-pkg :system-name snark-pkg :dependencies
  (snark-dpll) :source (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project snark :system-file snark-sparse-array :system-name
  snark-sparse-array :dependencies (snark-auxiliary-packages snark-lisp)
  :source (("git" "https://github.com/nilqed/SNARK.git")))
 (:ql-project sndfile-blob :system-file sndfile-blob :system-name sndfile-blob
  :dependencies (asdf bodge-blobs-support trivial-features) :source
  (("tagged-git" "https://github.com/borodust/sndfile-blob.git" "stable")))
 (:ql-project snmp :system-file snmp :system-name snmp :dependencies
  (ieee-floats ironclad portable-threads trivial-gray-streams usocket) :source
  (("https"
    "https://common-lisp.net/project/cl-net-snmp/release/snmp_latest.tar.gz")))
 (:ql-project snmp :system-file snmp-server :system-name snmp-server
  :dependencies (snmp usocket-server) :source
  (("https"
    "https://common-lisp.net/project/cl-net-snmp/release/snmp_latest.tar.gz")))
 (:ql-project snmp :system-file snmp-test :system-name snmp-test :dependencies
  (snmp snmp-server) :source
  (("https"
    "https://common-lisp.net/project/cl-net-snmp/release/snmp_latest.tar.gz")))
 (:ql-project snmp :system-file snmp-ui :system-name snmp-ui :dependencies
  (snmp) :source
  (("https"
    "https://common-lisp.net/project/cl-net-snmp/release/snmp_latest.tar.gz")))
 (:ql-project snooze :system-file snooze :system-name snooze :dependencies
  (alexandria asdf cl-ppcre closer-mop parse-float quri rfc2388 uiop) :source
  (("git" "https://github.com/capitaomorte/snooze.git")))
 (:ql-project snooze :system-file snooze :system-name snooze-demo :dependencies
  (alexandria cl-css cl-fad cl-json cl-who hunchentoot local-time
   local-time-duration snooze)
  :source (("git" "https://github.com/capitaomorte/snooze.git")))
 (:ql-project snooze :system-file snooze :system-name snooze-tests
  :dependencies (fiasco snooze) :source
  (("git" "https://github.com/capitaomorte/snooze.git")))
 (:ql-project softdrink :system-file softdrink :system-name softdrink
  :dependencies (asdf lass lquery) :source
  (("git" "https://github.com/Shinmera/softdrink.git")))
 (:ql-project solid-engine :system-file solid-engine :system-name solid-engine
  :dependencies (alexandria asdf) :source
  (("git" "https://bitbucket.org/reginleif/solid-engine.git")))
 (:ql-project soundex :system-file soundex :system-name soundex :dependencies
  nil :source (("http" "http://abstractnonsense.com/soundex-1.0.tgz")))
 (:ql-project south :system-file south :system-name south :dependencies
  (asdf cl-ppcre drakma ironclad uuid) :source
  (("git" "https://github.com/Shinmera/south.git")))
 (:ql-project sparse-set :system-file sparse-set :system-name sparse-set
  :dependencies (asdf mfiano-utils) :source
  (("git" "https://github.com/mfiano/sparse-set.git")))
 (:ql-project spatial-trees :system-file spatial-trees :system-name
  spatial-trees :dependencies nil :source
  (("git" "https://github.com/rpav/spatial-trees.git") nil))
 (:ql-project spatial-trees :system-file spatial-trees.nns :system-name
  spatial-trees.nns :dependencies (alexandria iterate optima spatial-trees)
  :source (("git" "https://github.com/rpav/spatial-trees.git") nil))
 (:ql-project spatial-trees :system-file spatial-trees.nns.test :system-name
  spatial-trees.nns.test :dependencies
  (alexandria fiveam iterate optima spatial-trees spatial-trees.nns) :source
  (("git" "https://github.com/rpav/spatial-trees.git") nil))
 (:ql-project spatial-trees :system-file spatial-trees.test :system-name
  spatial-trees.test :dependencies (fiveam spatial-trees) :source
  (("git" "https://github.com/rpav/spatial-trees.git") nil))
 (:ql-project special-functions :system-file special-functions :system-name
  special-functions :dependencies
  (alexandria+ asdf float-features let-plus num-utils) :source
  (("git" "https://github.com/Lisp-Stat/special-functions.git")))
 (:ql-project special-functions :system-file special-functions :system-name
  special-functions/tests :dependencies
  (cl-variates fiveam select special-functions) :source
  (("git" "https://github.com/Lisp-Stat/special-functions.git")))
 (:ql-project specialization-store :system-file specialization-store
  :system-name specialization-store :dependencies
  (alexandria asdf introspect-environment specialization-store-features)
  :source
  (("latest-github-tag"
    "https://github.com/markcox80/specialization-store.git")))
 (:ql-project specialization-store :system-file specialization-store-features
  :system-name specialization-store-features :dependencies
  (alexandria asdf introspect-environment) :source
  (("latest-github-tag"
    "https://github.com/markcox80/specialization-store.git")))
 (:ql-project specialization-store :system-file specialization-store-tests
  :system-name specialization-store-tests :dependencies
  (asdf fiveam specialization-store) :source
  (("latest-github-tag"
    "https://github.com/markcox80/specialization-store.git")))
 (:ql-project specialized-function :system-file specialized-function
  :system-name specialized-function :dependencies
  (alexandria asdf iterate lisp-namespace trivia trivial-cltl2 type-r) :source
  (("git" "https://github.com/numcl/specialized-function.git")))
 (:ql-project specialized-function :system-file specialized-function.test
  :system-name specialized-function.test :dependencies
  (asdf fiveam specialized-function) :source
  (("git" "https://github.com/numcl/specialized-function.git")))
 (:ql-project speechless :system-file speechless :system-name speechless
  :dependencies (asdf cl-markless documentation-utils) :source
  (("git" "https://github.com/shirakumo/speechless.git")))
 (:ql-project spell :system-file spell :system-name spell :dependencies (asdf)
  :source (("git" "https://github.com/robert-strandh/Spell.git")))
 (:ql-project spell :system-file spell :system-name spell/simple :dependencies
  nil :source (("git" "https://github.com/robert-strandh/Spell.git")))
 (:ql-project spellcheck :system-file spellcheck :system-name spellcheck
  :dependencies (alexandria cl-ppcre) :source
  (("git" "https://github.com/RobBlackwell/spellcheck.git")))
 (:ql-project spinneret :system-file spinneret :system-name spinneret
  :dependencies
  (alexandria asdf cl-ppcre global-vars parenscript serapeum trivia
   trivial-gray-streams)
  :source (("git" "https://github.com/ruricolist/spinneret.git")))
 (:ql-project spinneret :system-file spinneret :system-name
  spinneret/cl-markdown :dependencies (cl-markdown spinneret) :source
  (("git" "https://github.com/ruricolist/spinneret.git")))
 (:ql-project spinneret :system-file spinneret :system-name spinneret/ps
  :dependencies (parenscript spinneret) :source
  (("git" "https://github.com/ruricolist/spinneret.git")))
 (:ql-project spinneret :system-file spinneret :system-name spinneret/tests
  :dependencies (cl-markdown fiveam parenscript serapeum spinneret) :source
  (("git" "https://github.com/ruricolist/spinneret.git")))
 (:ql-project split-sequence :system-file split-sequence :system-name
  split-sequence :dependencies (asdf) :source
  (("latest-github-release"
    "https://github.com/sharplispers/split-sequence.git")))
 (:ql-project split-sequence :system-file split-sequence :system-name
  split-sequence/tests :dependencies (fiveam split-sequence) :source
  (("latest-github-release"
    "https://github.com/sharplispers/split-sequence.git")))
 (:ql-project sprint-stars :system-file stars :system-name stars :dependencies
  (asdf cl-json drakma xmls) :source
  (("git" "https://github.com/z3t0/sprint-stars.git")))
 (:ql-project srfi-1 :system-file srfi-1 :system-name srfi-1 :dependencies
  (asdf) :source (("git" "https://github.com/g000001/srfi-1.git")))
 (:ql-project srfi-1 :system-file srfi-1 :system-name srfi-1.test :dependencies
  (fiveam srfi-1) :source (("git" "https://github.com/g000001/srfi-1.git")))
 (:ql-project srfi-23 :system-file srfi-23 :system-name srfi-23 :dependencies
  (asdf) :source (("git" "https://github.com/g000001/srfi-23.git")))
 (:ql-project srfi-6 :system-file srfi-6 :system-name srfi-6 :dependencies
  (asdf) :source (("git" "https://github.com/g000001/srfi-6.git")))
 (:ql-project srfi-98 :system-file srfi-98 :system-name srfi-98 :dependencies
  (asdf) :source (("git" "https://github.com/g000001/srfi-98.git")))
 (:ql-project srfi-98 :system-file srfi-98 :system-name srfi-98.test
  :dependencies (fiveam srfi-98) :source
  (("git" "https://github.com/g000001/srfi-98.git")))
 (:ql-project st-json :system-file st-json :system-name st-json :dependencies
  (asdf) :source (("git" "https://github.com/marijnh/ST-JSON.git")))
 (:ql-project staple :system-file staple :system-name staple :dependencies
  (asdf babel cl-ppcre clip definitions documentation-utils language-codes
   pathname-utils staple-code-parser staple-package-recording)
  :source (("git" "https://github.com/Shinmera/staple.git")))
 (:ql-project staple :system-file staple-code-parser :system-name
  staple-code-parser :dependencies
  (alexandria asdf concrete-syntax-tree concrete-syntax-tree-destructuring
   concrete-syntax-tree-lambda-list definitions documentation-utils eclector
   eclector-concrete-syntax-tree)
  :source (("git" "https://github.com/Shinmera/staple.git")))
 (:ql-project staple :system-file staple-markdown :system-name staple-markdown
  :dependencies (3bmd 3bmd-ext-code-blocks asdf staple) :source
  (("git" "https://github.com/Shinmera/staple.git")))
 (:ql-project staple :system-file staple-markless :system-name staple-markless
  :dependencies (asdf cl-markless-plump staple) :source
  (("git" "https://github.com/Shinmera/staple.git")))
 (:ql-project staple :system-file staple-package-recording :system-name
  staple-package-recording :dependencies (asdf) :source
  (("git" "https://github.com/Shinmera/staple.git")))
 (:ql-project staple :system-file staple-restructured-text :system-name
  staple-restructured-text :dependencies (asdf docutils staple) :source
  (("git" "https://github.com/Shinmera/staple.git")))
 (:ql-project staple :system-file staple-server :system-name staple-server
  :dependencies
  (asdf dissect documentation-utils hunchentoot staple-markdown
   staple-markless)
  :source (("git" "https://github.com/Shinmera/staple.git")))
 (:ql-project static-dispatch :system-file static-dispatch :system-name
  static-dispatch :dependencies
  (agutil alexandria anaphora arrows asdf cl-environments cl-form-types
   closer-mop iterate optima)
  :source (("git" "https://github.com/alex-gutev/static-dispatch.git")))
 (:ql-project static-dispatch :system-file static-dispatch :system-name
  static-dispatch/test :dependencies (fiveam static-dispatch) :source
  (("git" "https://github.com/alex-gutev/static-dispatch.git")))
 (:ql-project static-vectors :system-file static-vectors :system-name
  static-vectors :dependencies (alexandria asdf cffi cffi-grovel) :source
  (("latest-github-release" "https://github.com/sionescu/static-vectors.git")))
 (:ql-project static-vectors :system-file static-vectors :system-name
  static-vectors/test :dependencies (fiveam static-vectors) :source
  (("latest-github-release" "https://github.com/sionescu/static-vectors.git")))
 (:ql-project statistics :system-file statistics :system-name statistics
  :dependencies
  (alexandria anaphora asdf distributions let-plus num-utils
   org.tfeb.conduit-packages)
  :source (("git" "https://github.com/Lisp-Stat/statistics.git")))
 (:ql-project statistics :system-file statistics :system-name statistics/lh
  :dependencies nil :source
  (("git" "https://github.com/Lisp-Stat/statistics.git")))
 (:ql-project statistics :system-file statistics :system-name statistics/tests
  :dependencies (clunit2 num-utils statistics) :source
  (("git" "https://github.com/Lisp-Stat/statistics.git")))
 (:ql-project statusor :system-file statusor :system-name statusor
  :dependencies (asdf) :source
  (("git" "https://github.com/erjoalgo/statusor.git")))
 (:ql-project stealth-mixin :system-file stealth-mixin :system-name
  stealth-mixin :dependencies (asdf closer-mop) :source
  (("git" "https://github.com/robert-strandh/Stealth-mixin.git")))
 (:ql-project stefil :system-file stefil :system-name stefil :dependencies
  (alexandria asdf iterate metabang-bind swank) :source
  (("git" "https://gitlab.common-lisp.net/stefil/stefil.git")))
 (:ql-project stefil :system-file stefil :system-name stefil-test :dependencies
  (stefil) :source
  (("git" "https://gitlab.common-lisp.net/stefil/stefil.git")))
 (:ql-project stefil- :system-file stefil+ :system-name stefil+ :dependencies
  (asdf asdf-package-system gt metabang-bind stefil) :source
  (("git" "https://github.com/GrammaTech/stefil-.git")))
 (:ql-project stem :system-file stem :system-name stem :dependencies nil
  :source (("git" "https://github.com/hanshuebner/stem.git")))
 (:ql-project stepster :system-file stepster :system-name stepster
  :dependencies (asdf babel cl-ppcre cl-reexport clss dexador jonathan plump)
  :source (("git" "https://github.com/walpurgisnatch/stepster.git")))
 (:ql-project stl :system-file stl :system-name stl :dependencies (3d-vectors)
  :source (("git" "https://github.com/jl2/stl.git")))
 (:ql-project stmx :system-file stmx :system-name stmx :dependencies
  (alexandria asdf bordeaux-threads closer-mop log4cl trivial-garbage) :source
  (("branched-git" "https://github.com/cosmos72/stmx.git" "stable")))
 (:ql-project stmx :system-file stmx.test :system-name stmx.test :dependencies
  (asdf bordeaux-threads fiveam log4cl stmx) :source
  (("branched-git" "https://github.com/cosmos72/stmx.git" "stable")))
 (:ql-project stopclock :system-file stopclock :system-name stopclock
  :dependencies (asdf) :source
  (("latest-github-tag" "https://github.com/Gleefre/stopclock.git")))
 (:ql-project stopclock :system-file stopclock :system-name stopclock/tests
  :dependencies (fiveam stopclock) :source
  (("latest-github-tag" "https://github.com/Gleefre/stopclock.git")))
 (:ql-project strict-function :system-file strict-function :system-name
  strict-function :dependencies (alexandria asdf trivia) :source
  (("git" "https://github.com/cxxxr/strict-function.git")))
 (:ql-project strict-function :system-file strict-function :system-name
  strict-function/test :dependencies (alexandria rove strict-function) :source
  (("git" "https://github.com/cxxxr/strict-function.git")))
 (:ql-project string-case :system-file string-case :system-name string-case
  :dependencies (asdf) :source
  (("git" "https://github.com/pkhuong/string-case.git")))
 (:ql-project string-escape :system-file string-escape :system-name
  string-escape :dependencies nil :source
  (("https" "https://people.csail.mit.edu/devon/lisp/string-escape.tgz")))
 (:ql-project stripe :system-file stripe :system-name stripe :dependencies
  (asdf dexador local-time mfiano-utils yason) :source
  (("git" "https://github.com/mfiano/stripe.git")))
 (:ql-project stripe-against-the-modern-world :system-file
  stripe-against-the-modern-world :system-name stripe-against-the-modern-world
  :dependencies
  (alexandria asdf closer-mop dexador do-urlencode ironclad jonathan local-time
   ningle str)
  :source
  (("git" "https://github.com/K1D77A/stripe-against-the-modern-world.git")))
 (:ql-project structure-ext :system-file structure-ext :system-name
  structure-ext :dependencies
  (asdf structure-ext.as-class structure-ext.left-arrow-accessors
   structure-ext.make-instance)
  :source (("git" "https://github.com/hyotang666/structure-ext.git")))
 (:ql-project structure-ext :system-file structure-ext.as-class :system-name
  structure-ext.as-class :dependencies
  (asdf closer-mop jingoh.documentizer lambda-fiddle uiop) :source
  (("git" "https://github.com/hyotang666/structure-ext.git")))
 (:ql-project structure-ext :system-file structure-ext.as-class.test
  :system-name structure-ext.as-class.test :dependencies
  (asdf jingoh structure-ext.as-class) :source
  (("git" "https://github.com/hyotang666/structure-ext.git")))
 (:ql-project structure-ext :system-file structure-ext.left-arrow-accessors
  :system-name structure-ext.left-arrow-accessors :dependencies
  (asdf jingoh.documentizer) :source
  (("git" "https://github.com/hyotang666/structure-ext.git")))
 (:ql-project structure-ext :system-file
  structure-ext.left-arrow-accessors.test :system-name
  structure-ext.left-arrow-accessors.test :dependencies
  (asdf jingoh structure-ext.left-arrow-accessors) :source
  (("git" "https://github.com/hyotang666/structure-ext.git")))
 (:ql-project structure-ext :system-file structure-ext.make-instance
  :system-name structure-ext.make-instance :dependencies
  (asdf closer-mop jingoh.documentizer) :source
  (("git" "https://github.com/hyotang666/structure-ext.git")))
 (:ql-project structure-ext :system-file structure-ext.make-instance.test
  :system-name structure-ext.make-instance.test :dependencies
  (asdf jingoh structure-ext.make-instance) :source
  (("git" "https://github.com/hyotang666/structure-ext.git")))
 (:ql-project structy-defclass :system-file structy-defclass :system-name
  structy-defclass :dependencies nil :source
  (("git" "https://github.com/cbaggers/structy-defclass.git")))
 (:ql-project studio-client :system-file studio-client :system-name
  studio-client :dependencies
  (asdf babel com.inuoe.jzon documentation-utils north-core) :source
  (("git" "https://github.com/Shinmera/studio-client.git")))
 (:ql-project stumpwm :system-file dynamic-mixins-swm :system-name
  dynamic-mixins-swm :dependencies (alexandria asdf) :source
  (("git" "https://github.com/stumpwm/stumpwm.git")))
 (:ql-project stumpwm :system-file stumpwm :system-name stumpwm :dependencies
  (alexandria asdf cl-ppcre clx dynamic-mixins-swm) :source
  (("git" "https://github.com/stumpwm/stumpwm.git")))
 (:ql-project stumpwm :system-file stumpwm-tests :system-name stumpwm-tests
  :dependencies (asdf fiasco stumpwm) :source
  (("git" "https://github.com/stumpwm/stumpwm.git")))
 (:ql-project stumpwm :system-file stumpwm :system-name stumpwm/build
  :dependencies (stumpwm) :source
  (("git" "https://github.com/stumpwm/stumpwm.git")))
 (:ql-project stumpwm-dynamic-float :system-file stumpwm-dynamic-float
  :system-name stumpwm-dynamic-float :dependencies (asdf stumpwm) :source
  (("git" "https://github.com/jcguu95/stumpwm-dynamic-float.git")))
 (:ql-project stumpwm-sndioctl :system-file stumpwm-sndioctl :system-name
  stumpwm-sndioctl :dependencies (asdf stumpwm) :source
  (("git" "https://github.com/fagg/stumpwm-sndioctl.git")))
 (:ql-project sucle :system-file aabbcc :system-name aabbcc :dependencies
  (asdf quads utility) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file application :system-name application
  :dependencies
  (asdf bordeaux-threads cl-opengl deflazy glhelp scratch-buffer utility
   window)
  :source (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file camera-matrix :system-name camera-matrix
  :dependencies (asdf nsb-cga uncommon-lisp) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file character-modifier-bits :system-name
  character-modifier-bits :dependencies (asdf) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file control :system-name control :dependencies
  (asdf character-modifier-bits utility window) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file crud :system-name crud :dependencies
  (alexandria asdf base64 lparallel sqlite sucle-serialize uiop) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file deflazy :system-name deflazy :dependencies
  (asdf bordeaux-threads uncommon-lisp utility) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file fps-independent-timestep :system-name
  fps-independent-timestep :dependencies (alexandria asdf local-time) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file glhelp :system-name glhelp :dependencies
  (asdf cl-opengl deflazy glsl-toolkit split-sequence uncommon-lisp) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file image-utility :system-name image-utility
  :dependencies (asdf opticl) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file lem-opengl :system-name lem-opengl
  :dependencies
  (application asdf control livesupport minilem ncurses-clone-for-lem sucle
   trivial-clipboard uncommon-lisp utility)
  :source (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file ncurses-clone-for-lem :system-name
  ncurses-clone-for-lem :dependencies
  (application asdf cffi cl-ppcre lparallel nsb-cga text-subsystem utility)
  :source (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file nsb-cga :system-name nsb-cga :dependencies
  (asdf cl-reexport) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file quads :system-name quads :dependencies
  (asdf utility) :source (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file scratch-buffer :system-name scratch-buffer
  :dependencies (asdf bordeaux-threads utility) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file sucle :system-name sucle :dependencies
  (aabbcc alexandria application asdf black-tie camera-matrix cl-opengl control
   crud fps-independent-timestep glhelp image-utility livesupport
   ncurses-clone-for-lem nsb-cga quads scratch-buffer sucle-multiprocessing
   sucle-temp text-subsystem uncommon-lisp utility)
  :source (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file sucle-multiprocessing :system-name
  sucle-multiprocessing :dependencies
  (asdf bordeaux-threads cl-cpus lparallel uncommon-lisp utility) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file sucle-serialize :system-name sucle-serialize
  :dependencies (asdf chipz cl-conspack salza2) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file sucle-temp :system-name sucle-temp
  :dependencies (asdf) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file sucle-test :system-name sucle-test
  :dependencies
  (aabbcc alexandria application asdf camera-matrix character-modifier-bits
   cl-opengl control deflazy fps-independent-timestep image-utility
   ncurses-clone-for-lem nsb-cga quads scratch-buffer sucle
   sucle-multiprocessing sucle-serialize text-subsystem uncommon-lisp window)
  :source (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file text-subsystem :system-name text-subsystem
  :dependencies
  (application asdf deflazy image-utility nsb-cga quads sucle-temp utility)
  :source (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file text-subsystem-generate-font :system-name
  text-subsystem-generate-font :dependencies (asdf cl-freetype2 opticl utility)
  :source (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file uncommon-lisp :system-name uncommon-lisp
  :dependencies (asdf structy-defclass) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project sucle :system-file window :system-name window :dependencies
  (alexandria asdf bodge-glfw cffi trivial-features utility) :source
  (("git" "https://github.com/terminal625/sucle.git")))
 (:ql-project super-loader :system-file my-cool-system :system-name
  my-cool-system :dependencies (asdf) :source
  (("git" "https://github.com/jordan4ibanez/super-loader.git")))
 (:ql-project super-loader :system-file my-secret-system :system-name
  my-secret-system :dependencies (asdf) :source
  (("git" "https://github.com/jordan4ibanez/super-loader.git")))
 (:ql-project swank-client :system-file swank-client :system-name swank-client
  :dependencies (asdf bordeaux-threads com.google.base swank usocket) :source
  (("git" "https://github.com/brown/swank-client.git")))
 (:ql-project swank-client :system-file swank-client :system-name
  swank-client/test :dependencies (hu.dwim.stefil swank-client) :source
  (("git" "https://github.com/brown/swank-client.git")))
 (:ql-project swank-crew :system-file swank-crew :system-name swank-crew
  :dependencies (asdf bordeaux-threads com.google.base swank-client) :source
  (("git" "https://github.com/brown/swank-crew.git")))
 (:ql-project swank-crew :system-file swank-crew :system-name swank-crew/test
  :dependencies (hu.dwim.stefil swank-crew) :source
  (("git" "https://github.com/brown/swank-crew.git")))
 (:ql-project swank-protocol :system-file swank-protocol :system-name
  swank-protocol :dependencies (asdf swank usocket) :source
  (("git" "https://github.com/eudoxia0/swank-protocol.git")))
 (:ql-project swank.live :system-file swank.live :system-name swank.live
  :dependencies (swank) :source
  (("git" "https://github.com/cbaggers/swank.live.git")))
 (:ql-project swap-bytes :system-file swap-bytes :system-name swap-bytes
  :dependencies (asdf trivial-features) :source
  (("latest-github-release" "https://github.com/sionescu/swap-bytes.git")))
 (:ql-project swap-bytes :system-file swap-bytes :system-name swap-bytes/test
  :dependencies (fiveam swap-bytes) :source
  (("latest-github-release" "https://github.com/sionescu/swap-bytes.git")))
 (:ql-project sxql :system-file sxql :system-name sxql :dependencies
  (alexandria asdf cl-annot cl-package-locks iterate named-readtables
   split-sequence trivia trivial-types)
  :source (("git" "https://github.com/fukamachi/sxql.git")))
 (:ql-project sxql :system-file sxql-test :system-name sxql-test :dependencies
  (asdf prove prove-asdf sxql) :source
  (("git" "https://github.com/fukamachi/sxql.git")))
 (:ql-project sxql-composer :system-file sxql-composer :system-name
  sxql-composer :dependencies (asdf sxql) :source
  (("git" "https://github.com/mmontone/sxql-composer.git")))
 (:ql-project sycamore :system-file sycamore :system-name sycamore
  :dependencies (alexandria asdf cl-fuzz cl-ppcre lisp-unit) :source
  (("git" "https://github.com/ndantam/sycamore.git")))
 (:ql-project symath :system-file symath :system-name symath :dependencies
  (asdf) :source (("git" "https://github.com/hemml/symath.git")))
 (:ql-project symbol-munger :system-file symbol-munger :system-name
  symbol-munger :dependencies (alexandria asdf iterate) :source
  (("git" "https://github.com/AccelerationNet/symbol-munger.git")))
 (:ql-project symbol-munger :system-file symbol-munger :system-name
  symbol-munger/test :dependencies (lisp-unit2 symbol-munger) :source
  (("git" "https://github.com/AccelerationNet/symbol-munger.git")))
 (:ql-project symbol-namespaces :system-file symbol-namespaces :system-name
  symbol-namespaces :dependencies (map-bind) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/symbol-namespaces_latest.tar.gz")))
 (:ql-project synonyms :system-file synonyms :system-name synonyms
  :dependencies (asdf) :source
  (("git" "https://github.com/stylewarning/synonyms.git")))
 (:ql-project system-locale :system-file system-locale :system-name
  system-locale :dependencies (asdf documentation-utils) :source
  (("git" "https://github.com/Shinmera/system-locale.git")))
 (:ql-project tagger :system-file tagger :system-name tagger :dependencies
  (asdf closer-mop) :source (("git" "https://github.com/g000001/tagger.git")))
 (:ql-project taglib :system-file taglib :system-name taglib :dependencies
  (asdf bordeaux-threads flexi-streams optima optima.ppcre) :source
  (("git" "https://github.com/mv2devnul/taglib.git")))
 (:ql-project taglib :system-file taglib-tests :system-name taglib-tests
  :dependencies (asdf chanl cl-fad taglib) :source
  (("git" "https://github.com/mv2devnul/taglib.git")))
 (:ql-project tailrec :system-file tailrec :system-name tailrec :dependencies
  (alexandria asdf trivial-macroexpand-all trivial-with-current-source-form)
  :source (("git" "https://github.com/charJe/tailrec.git")))
 (:ql-project talcl :system-file talcl :system-name talcl :dependencies
  (alexandria asdf buildnode cl-ppcre cxml iterate symbol-munger) :source
  (("git" "https://github.com/AccelerationNet/talcl.git")))
 (:ql-project talcl :system-file talcl :system-name talcl-examples
  :dependencies (buildnode-xhtml talcl) :source
  (("git" "https://github.com/AccelerationNet/talcl.git")))
 (:ql-project talcl :system-file talcl :system-name talcl-speed-tests
  :dependencies (buildnode-xhtml lisp-unit2 talcl talcl-examples) :source
  (("git" "https://github.com/AccelerationNet/talcl.git")))
 (:ql-project talcl :system-file talcl :system-name talcl-test :dependencies
  (buildnode-xhtml lisp-unit2 talcl) :source
  (("git" "https://github.com/AccelerationNet/talcl.git")))
 (:ql-project tap-unit-test :system-file tap-unit-test :system-name
  tap-unit-test :dependencies nil :source
  (("git" "https://github.com/jhanley634/tap-unit-test.git")))
 (:ql-project targa :system-file targa :system-name targa :dependencies (asdf)
  :source (("git" "https://github.com/massung/targa.git")))
 (:ql-project tclcs-code :system-file tclcs-code :system-name tclcs-code
  :dependencies (asdf trivial-custom-debugger) :source
  (("git" "https://github.com/phoe/tclcs-code.git")))
 (:ql-project teddy :system-file teddy :system-name teddy :dependencies
  (alexandria asdf asdf-finalizers cl-ascii-table eazy-gnuplot hu.dwim.def
   lhstats list-of rutils simplified-types)
  :source (("git" "https://github.com/40ants/teddy.git")))
 (:ql-project teepeedee2 :system-file teepeedee2 :system-name teepeedee2
  :dependencies
  (alexandria asdf cffi cl-cont cl-fad cl-irregsexp iterate parenscript
   trivial-backtrace trivial-garbage)
  :source (("git" "https://github.com/vii/teepeedee2.git")))
 (:ql-project teepeedee2 :system-file teepeedee2-test :system-name
  teepeedee2-test :dependencies (asdf fiveam teepeedee2) :source
  (("git" "https://github.com/vii/teepeedee2.git")))
 (:ql-project telnetlib :system-file telnetlib :system-name telnetlib
  :dependencies (cl-ppcre) :source
  (("git" "https://github.com/brianjcj/telnetlib-for-common-lisp")))
 (:ql-project template :system-file template :system-name template
  :dependencies (alexandria asdf parameterized-function) :source
  (("git" "https://github.com/stylewarning/template.git")))
 (:ql-project template-function :system-file template-function :system-name
  template-function :dependencies
  (alexandria introspect-environment specialization-store) :source
  (("tagged-git" "https://github.com/markcox80/template-function.git"
    "v0.0.1")))
 (:ql-project template-function :system-file template-function-tests
  :system-name template-function-tests :dependencies (fiveam template-function)
  :source
  (("tagged-git" "https://github.com/markcox80/template-function.git"
    "v0.0.1")))
 (:ql-project temporal-functions :system-file temporal-functions :system-name
  temporal-functions :dependencies (fn) :source
  (("git" "https://github.com/cbaggers/temporal-functions.git")))
 (:ql-project temporary-file :system-file temporary-file :system-name
  temporary-file :dependencies
  (alexandria bordeaux-threads cl-fad cl-ppcre unit-test) :source
  (("git" "https://github.com/hanshuebner/temporary-file.git")))
 (:ql-project ten :system-file ten :system-name ten :dependencies
  (access asdf cl-who esrap split-sequence) :source
  (("git" "https://github.com/mmontone/ten.git")))
 (:ql-project ten :system-file ten.examples :system-name ten.examples
  :dependencies (asdf ten) :source
  (("git" "https://github.com/mmontone/ten.git")))
 (:ql-project ten :system-file ten.i18n.cl-locale :system-name
  ten.i18n.cl-locale :dependencies (asdf cl-locale ten) :source
  (("git" "https://github.com/mmontone/ten.git")))
 (:ql-project ten :system-file ten.i18n.gettext :system-name ten.i18n.gettext
  :dependencies (asdf gettext ten) :source
  (("git" "https://github.com/mmontone/ten.git")))
 (:ql-project ten :system-file ten.tests :system-name ten.tests :dependencies
  (asdf fiveam ten ten.examples) :source
  (("git" "https://github.com/mmontone/ten.git")))
 (:ql-project terminfo :system-file terminfo :system-name terminfo
  :dependencies (asdf) :source
  (("git" "https://github.com/npatrick04/terminfo.git")))
 (:ql-project terrable :system-file terrable :system-name terrable
  :dependencies
  (asdf documentation-utils fast-io ieee-floats static-vectors trivial-garbage)
  :source (("git" "https://github.com/Shirakumo/terrable.git")))
 (:ql-project tesseract-capi :system-file tesseract-capi :system-name
  tesseract-capi :dependencies (asdf cffi cl-ppcre) :source
  (("git" "https://github.com/egao1980/tesseract-capi.git")))
 (:ql-project test-utils :system-file test-utils :system-name test-utils
  :dependencies (agnostic-lizard alexandria asdf cl-quickcheck prove) :source
  (("git" "https://github.com/inaimathi/test-utils.git")))
 (:ql-project testbild :system-file testbild :system-name testbild
  :dependencies (cl-ppcre graylex) :source
  (("git" "https://github.com/e-user/testbild.git")))
 (:ql-project testbild :system-file testbild-test :system-name testbild-test
  :dependencies (alexandria cl-heredoc testbild trivial-gray-streams) :source
  (("git" "https://github.com/e-user/testbild.git")))
 (:ql-project testiere :system-file testiere :system-name testiere
  :dependencies (asdf trivia) :source
  (("git" "https://cicadas.surf/cgit/colin/testiere.git")))
 (:ql-project texp :system-file texp :system-name texp :dependencies
  (named-readtables) :source (("git" "https://github.com/eugeneia/texp.git")))
 (:ql-project text-query :system-file text-query :system-name text-query
  :dependencies nil :source
  (("https"
    "https://common-lisp.net/project/asdf-packaging/text-query-latest.tar.gz")))
 (:ql-project textery :system-file textery :system-name textery :dependencies
  (asdf cl-json cl-ppcre str uiop) :source
  (("git" "https://github.com/compufox/textery.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax :system-name org.tfeb.hax
  :dependencies (asdf closer-mop) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.abstract-classes
  :system-name org.tfeb.hax.abstract-classes :dependencies (asdf closer-mop)
  :source (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.binding :system-name
  org.tfeb.hax.binding :dependencies
  (asdf org.tfeb.hax.collecting org.tfeb.hax.iterate) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.collecting :system-name
  org.tfeb.hax.collecting :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.comment-form :system-name
  org.tfeb.hax.comment-form :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.cs-forms :system-name
  org.tfeb.hax.cs-forms :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.define-functions
  :system-name org.tfeb.hax.define-functions :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.dynamic-state
  :system-name org.tfeb.hax.dynamic-state :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.iterate :system-name
  org.tfeb.hax.iterate :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.memoize :system-name
  org.tfeb.hax.memoize :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.metatronic :system-name
  org.tfeb.hax.metatronic :dependencies (asdf org.tfeb.hax.utilities) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.object-accessors
  :system-name org.tfeb.hax.object-accessors :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.read-package :system-name
  org.tfeb.hax.read-package :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.simple-loops :system-name
  org.tfeb.hax.simple-loops :dependencies
  (asdf org.tfeb.hax.collecting org.tfeb.hax.iterate org.tfeb.hax.utilities)
  :source (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.singleton-classes
  :system-name org.tfeb.hax.singleton-classes :dependencies (asdf closer-mop)
  :source (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.slog :system-name
  org.tfeb.hax.slog :dependencies
  (asdf org.tfeb.hax.collecting org.tfeb.hax.metatronic
   org.tfeb.hax.simple-loops org.tfeb.hax.spam)
  :source (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.spam :system-name
  org.tfeb.hax.spam :dependencies (asdf org.tfeb.hax.simple-loops) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.stringtable :system-name
  org.tfeb.hax.stringtable :dependencies
  (asdf org.tfeb.hax.collecting org.tfeb.hax.iterate) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.trace-macroexpand
  :system-name org.tfeb.hax.trace-macroexpand :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.utilities :system-name
  org.tfeb.hax.utilities :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax.wrapping-standard
  :system-name org.tfeb.hax.wrapping-standard :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-hax :system-file org.tfeb.hax :system-name
  org.tfeb.hax/test :dependencies (org.tfeb.hax parachute) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-hax.git")))
 (:ql-project tfeb-lisp-tools :system-file org.tfeb.tools :system-name
  org.tfeb.tools :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-tools.git")))
 (:ql-project tfeb-lisp-tools :system-file org.tfeb.tools.asdf-module-sysdcls
  :system-name org.tfeb.tools.asdf-module-sysdcls :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-tools.git")))
 (:ql-project tfeb-lisp-tools :system-file org.tfeb.tools.build-modules
  :system-name org.tfeb.tools.build-modules :dependencies
  (asdf org.tfeb.tools.require-module) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-tools.git")))
 (:ql-project tfeb-lisp-tools :system-file org.tfeb.tools.deprecations
  :system-name org.tfeb.tools.deprecations :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-tools.git")))
 (:ql-project tfeb-lisp-tools :system-file org.tfeb.tools.feature-expressions
  :system-name org.tfeb.tools.feature-expressions :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-tools.git")))
 (:ql-project tfeb-lisp-tools :system-file org.tfeb.tools.install-providers
  :system-name org.tfeb.tools.install-providers :dependencies
  (asdf org.tfeb.tools.require-module) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-tools.git")))
 (:ql-project tfeb-lisp-tools :system-file org.tfeb.tools.require-module
  :system-name org.tfeb.tools.require-module :dependencies (asdf) :source
  (("git" "https://github.com/tfeb/tfeb-lisp-tools.git")))
 (:ql-project tfm :system-file net.didierverna.tfm :system-name
  net.didierverna.tfm :dependencies (asdf net.didierverna.tfm.core) :source
  (("git" "https://github.com/didierverna/tfm.git")))
 (:ql-project tfm :system-file net.didierverna.tfm.core :system-name
  net.didierverna.tfm.core :dependencies (asdf net.didierverna.tfm.setup)
  :source (("git" "https://github.com/didierverna/tfm.git")))
 (:ql-project tfm :system-file net.didierverna.tfm.setup :system-name
  net.didierverna.tfm.setup :dependencies (asdf named-readtables) :source
  (("git" "https://github.com/didierverna/tfm.git")))
 (:ql-project the-cost-of-nothing :system-file the-cost-of-nothing :system-name
  the-cost-of-nothing :dependencies
  (alexandria asdf closer-mop local-time trivial-garbage) :source
  (("git" "https://github.com/marcoheisig/the-cost-of-nothing.git")))
 (:ql-project thnappy :system-file thnappy :system-name thnappy :dependencies
  (asdf cffi) :source (("git" "https://github.com/flambard/thnappy")))
 (:ql-project thorn :system-file thorn :system-name thorn :dependencies
  (common-doc) :source (("git" "https://github.com/CommonDoc/thorn.git")))
 (:ql-project thorn :system-file thorn-doc :system-name thorn-doc :dependencies
  (thorn) :source (("git" "https://github.com/CommonDoc/thorn.git")))
 (:ql-project thorn :system-file thorn-test :system-name thorn-test
  :dependencies (fiveam thorn thorn-doc) :source
  (("git" "https://github.com/CommonDoc/thorn.git")))
 (:ql-project thread-pool :system-file thread-pool :system-name thread-pool
  :dependencies (arnesi bordeaux-threads) :source
  (("git" "https://github.com/kiuma/thread-pool.git")))
 (:ql-project thread.comm.rendezvous :system-file thread.comm.rendezvous
  :system-name thread.comm.rendezvous :dependencies (bordeaux-threads cl-annot)
  :source (("git" "https://github.com/kkazuo/thread.comm.rendezvous.git")))
 (:ql-project thread.comm.rendezvous :system-file thread.comm.rendezvous.test
  :system-name thread.comm.rendezvous.test :dependencies
  (cl-test-more thread.comm.rendezvous) :source
  (("git" "https://github.com/kkazuo/thread.comm.rendezvous.git")))
 (:ql-project tile-grid :system-file tile-grid :system-name tile-grid
  :dependencies (asdf mfiano-utils) :source
  (("git" "https://github.com/mfiano/tile-grid.git")))
 (:ql-project time-interval :system-file time-interval :system-name
  time-interval :dependencies (asdf cl-ppcre local-time) :source
  (("git" "https://github.com/slyrus/time-interval.git")))
 (:ql-project timer-wheel :system-file timer-wheel :system-name timer-wheel
  :dependencies (asdf bordeaux-threads) :source
  (("git" "https://github.com/npatrick04/timer-wheel.git")))
 (:ql-project timer-wheel :system-file timer-wheel.examples :system-name
  timer-wheel.examples :dependencies (asdf bordeaux-threads timer-wheel)
  :source (("git" "https://github.com/npatrick04/timer-wheel.git")))
 (:ql-project tinaa :system-file tinaa :system-name tinaa :dependencies
  (anaphora asdf-system-connections cl-containers cl-graph
   defsystem-compatibility dynamic-classes lml2 metatilities trivial-shell)
  :source (("git" "https://github.com/gwkkwg/tinaa.git") nil))
 (:ql-project tinaa :system-file tinaa-test :system-name tinaa-test
  :dependencies (lift tinaa) :source
  (("git" "https://github.com/gwkkwg/tinaa.git") nil))
 (:ql-project tinaa :system-file tinaa :system-name tinaa/with-cl-markdown
  :dependencies (cl-markdown tinaa) :source
  (("git" "https://github.com/gwkkwg/tinaa.git") nil))
 (:ql-project tiny-routes :system-file tiny-routes :system-name tiny-routes
  :dependencies (asdf cl-ppcre uiop) :source
  (("git" "https://github.com/jeko2000/tiny-routes.git")))
 (:ql-project tiny-routes :system-file tiny-routes-middleware-cookie
  :system-name tiny-routes-middleware-cookie :dependencies
  (asdf cl-cookie tiny-routes) :source
  (("git" "https://github.com/jeko2000/tiny-routes.git")))
 (:ql-project tiny-routes :system-file tiny-routes-middleware-cookie
  :system-name tiny-routes-middleware-cookie/test :dependencies
  (fiveam tiny-routes-middleware-cookie) :source
  (("git" "https://github.com/jeko2000/tiny-routes.git")))
 (:ql-project tiny-routes :system-file tiny-routes :system-name
  tiny-routes/test :dependencies (fiveam tiny-routes) :source
  (("git" "https://github.com/jeko2000/tiny-routes.git")))
 (:ql-project tm :system-file tm :system-name tm :dependencies
  (asdf bordeaux-threads local-time) :source
  (("latest-github-release" "https://github.com/Antigonus/tm.git")))
 (:ql-project tmpdir :system-file tmpdir :system-name tmpdir :dependencies
  (asdf cl-fad) :source
  (("git" "https://github.com/moderninterpreters/tmpdir.git")))
 (:ql-project tmpdir :system-file tmpdir.tests :system-name tmpdir.tests
  :dependencies (asdf cl-fad fiveam osicat tmpdir) :source
  (("git" "https://github.com/moderninterpreters/tmpdir.git")))
 (:ql-project toadstool :system-file toadstool :system-name toadstool
  :dependencies (closer-mop) :source
  (("git" "https://github.com/kisp/toadstool.git")))
 (:ql-project toadstool :system-file toadstool-tests :system-name
  toadstool-tests :dependencies (stefil toadstool) :source
  (("git" "https://github.com/kisp/toadstool.git")))
 (:ql-project toot :system-file toot :system-name toot :dependencies
  (alexandria bordeaux-threads chunga cl+ssl cl-base64 cl-fad cl-ppcre
   flexi-streams md5 puri trivial-backtrace usocket)
  :source (("git" "https://github.com/gigamonkey/toot.git")))
 (:ql-project tooter :system-file tooter :system-name tooter :dependencies
  (asdf cl-ppcre com.inuoe.jzon documentation-utils drakma) :source
  (("git" "https://github.com/Shinmera/tooter.git")))
 (:ql-project towers :system-file towers :system-name towers :dependencies
  (alexandria cl-glu cl-glut cl-opengl) :source
  (("git" "https://github.com/death/towers.git")))
 (:ql-project trace-db :system-file trace-db :system-name trace-db
  :dependencies (asdf asdf-package-system) :source
  (("git" "https://github.com/GrammaTech/trace-db.git")))
 (:ql-project track-best :system-file track-best :system-name track-best
  :dependencies (asdf) :source
  (("git" "http://git.nklein.com/lisp/libs/track-best.git/")))
 (:ql-project track-best :system-file track-best :system-name track-best/tests
  :dependencies (nst track-best) :source
  (("git" "http://git.nklein.com/lisp/libs/track-best.git/")))
 (:ql-project trainable-object :system-file trainable-object :system-name
  trainable-object :dependencies (asdf closer-mop serializable-object) :source
  (("git" "https://github.com/guicho271828/trainable-object.git")))
 (:ql-project trainable-object :system-file trainable-object.test :system-name
  trainable-object.test :dependencies (asdf fiveam trainable-object) :source
  (("git" "https://github.com/guicho271828/trainable-object.git")))
 (:ql-project translate :system-file translate :system-name translate
  :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/dkochmanski/translate.git")))
 (:ql-project translate :system-file translate :system-name translate/test
  :dependencies (fiveam translate) :source
  (("git" "https://gitlab.common-lisp.net/dkochmanski/translate.git")))
 (:ql-project translate-client :system-file translate-client :system-name
  translate-client :dependencies
  (alexandria asdf assoc-utils dexador quri yason) :source
  (("git" "https://github.com/aarvid/translate-client.git")))
 (:ql-project transparent-wrap :system-file transparent-wrap :system-name
  transparent-wrap :dependencies
  (asdf fare-quasiquote-extras named-readtables optima trivial-arguments)
  :source (("git" "https://github.com/DalekBaldwin/transparent-wrap.git")))
 (:ql-project tree-search :system-file tree-search :system-name tree-search
  :dependencies (asdf) :source
  (("https" "https://files.astharoshe.net/lisp/tree-search-latest.tar.gz")))
 (:ql-project tree-search :system-file tree-search :system-name
  tree-search/test :dependencies (fiveam tree-search) :source
  (("https" "https://files.astharoshe.net/lisp/tree-search-latest.tar.gz")))
 (:ql-project treedb :system-file treedb :system-name treedb :dependencies
  (cl-json) :source (("git" "https://github.com/chfin/treedb.git")))
 (:ql-project treedb :system-file treedb.doc :system-name treedb.doc
  :dependencies (cl-gendoc treedb treedb.tests) :source
  (("git" "https://github.com/chfin/treedb.git")))
 (:ql-project treedb :system-file treedb.tests :system-name treedb.tests
  :dependencies (fiveam treedb) :source
  (("git" "https://github.com/chfin/treedb.git")))
 (:ql-project trees :system-file trees :system-name trees :dependencies (asdf)
  :source (("git" "https://github.com/froydnj/trees.git")))
 (:ql-project trees :system-file trees :system-name trees-tests :dependencies
  (trees) :source (("git" "https://github.com/froydnj/trees.git")))
 (:ql-project trestrul :system-file trestrul :system-name trestrul
  :dependencies (asdf jingoh.documentizer) :source
  (("git" "https://github.com/hyotang666/trestrul.git")))
 (:ql-project trestrul :system-file trestrul.test :system-name trestrul.test
  :dependencies (asdf jingoh trestrul) :source
  (("git" "https://github.com/hyotang666/trestrul.git")))
 (:ql-project trivia :system-file trivia :system-name trivia :dependencies
  (asdf trivia.balland2006) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.balland2006 :system-name
  trivia.balland2006 :dependencies
  (alexandria asdf iterate trivia.trivial type-i) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.benchmark :system-name
  trivia.benchmark :dependencies
  (asdf iterate optima trivia trivia.balland2006) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.benchmark :system-name
  trivia.benchmark/run :dependencies (trivia.benchmark) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.cffi :system-name trivia.cffi
  :dependencies (asdf cffi trivia.trivial) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.fset :system-name trivia.fset
  :dependencies (asdf fset trivia.trivial) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.level0 :system-name trivia.level0
  :dependencies (alexandria asdf) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.level1 :system-name trivia.level1
  :dependencies (asdf trivia.level0) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.level2 :system-name trivia.level2
  :dependencies (asdf closer-mop lisp-namespace trivia.level1 trivial-cltl2)
  :source (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.ppcre :system-name trivia.ppcre
  :dependencies (asdf cl-ppcre trivia.trivial) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.quasiquote :system-name
  trivia.quasiquote :dependencies
  (asdf fare-quasiquote-readtable trivia.trivial) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.test :system-name trivia.test
  :dependencies
  (asdf fiveam optima trivia trivia.cffi trivia.fset trivia.ppcre
   trivia.quasiquote)
  :source (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivia :system-file trivia.trivial :system-name trivia.trivial
  :dependencies (asdf trivia.level2) :source
  (("git" "https://github.com/guicho271828/trivia.git")))
 (:ql-project trivial-arguments :system-file trivial-arguments :system-name
  trivial-arguments :dependencies (asdf) :source
  (("git" "https://github.com/Shinmera/trivial-arguments.git")))
 (:ql-project trivial-backtrace :system-file trivial-backtrace :system-name
  trivial-backtrace :dependencies (asdf) :source
  (("git" "https://github.com/gwkkwg/trivial-backtrace.git")))
 (:ql-project trivial-backtrace :system-file trivial-backtrace-test
  :system-name trivial-backtrace-test :dependencies
  (asdf lift trivial-backtrace) :source
  (("git" "https://github.com/gwkkwg/trivial-backtrace.git")))
 (:ql-project trivial-battery :system-file trivial-battery :system-name
  trivial-battery :dependencies (asdf split-sequence) :source
  (("git" "https://github.com/fukamachi/trivial-battery.git")))
 (:ql-project trivial-benchmark :system-file trivial-benchmark :system-name
  trivial-benchmark :dependencies (alexandria asdf) :source
  (("git" "https://github.com/Shinmera/trivial-benchmark.git")))
 (:ql-project trivial-bit-streams :system-file trivial-bit-streams :system-name
  trivial-bit-streams :dependencies (asdf trivial-gray-streams) :source
  (("git" "https://github.com/Lovesan/trivial-bit-streams.git")))
 (:ql-project trivial-bit-streams :system-file trivial-bit-streams-tests
  :system-name trivial-bit-streams-tests :dependencies
  (asdf fiveam flexi-streams trivial-bit-streams) :source
  (("git" "https://github.com/Lovesan/trivial-bit-streams.git")))
 (:ql-project trivial-build :system-file trivial-build :system-name
  trivial-build :dependencies (lisp-invocation trivial-exe) :source
  (("git" "https://github.com/ceramic/trivial-build.git")))
 (:ql-project trivial-build :system-file trivial-build-test :system-name
  trivial-build-test :dependencies (fiveam trivial-build) :source
  (("git" "https://github.com/ceramic/trivial-build.git")))
 (:ql-project trivial-channels :system-file trivial-channels :system-name
  trivial-channels :dependencies (bordeaux-threads trivial-timeout) :source
  (("git" "https://github.com/rpav/trivial-channels.git")))
 (:ql-project trivial-clipboard :system-file trivial-clipboard :system-name
  trivial-clipboard :dependencies (asdf uiop) :source
  (("git" "https://github.com/snmsts/trivial-clipboard.git")))
 (:ql-project trivial-clipboard :system-file trivial-clipboard-test
  :system-name trivial-clipboard-test :dependencies
  (asdf fiveam trivial-clipboard) :source
  (("git" "https://github.com/snmsts/trivial-clipboard.git")))
 (:ql-project trivial-cltl2 :system-file trivial-cltl2 :system-name
  trivial-cltl2 :dependencies (asdf) :source
  (("git" "https://github.com/Zulu-Inuoe/trivial-cltl2.git")))
 (:ql-project trivial-compress :system-file trivial-compress :system-name
  trivial-compress :dependencies (alexandria archive asdf uiop which zip)
  :source (("git" "https://github.com/ceramic/trivial-compress.git")))
 (:ql-project trivial-compress :system-file trivial-compress-test :system-name
  trivial-compress-test :dependencies (asdf fiveam trivial-compress) :source
  (("git" "https://github.com/ceramic/trivial-compress.git")))
 (:ql-project trivial-continuation :system-file trivial-continuation
  :system-name trivial-continuation :dependencies
  (asdf log4cl trivial-utilities) :source
  (("git" "https://gitlab.com/ediethelm/trivial-continuation.git")))
 (:ql-project trivial-continuation :system-file trivial-continuation
  :system-name trivial-continuation/test :dependencies
  (fiveam trivial-continuation) :source
  (("git" "https://gitlab.com/ediethelm/trivial-continuation.git")))
 (:ql-project trivial-coverage :system-file trivial-coverage :system-name
  trivial-coverage :dependencies (asdf lquery) :source
  (("git" "https://gitlab.com/ediethelm/trivial-coverage.git")))
 (:ql-project trivial-custom-debugger :system-file trivial-custom-debugger
  :system-name trivial-custom-debugger :dependencies (asdf) :source
  (("git" "https://github.com/phoe/trivial-custom-debugger.git")))
 (:ql-project trivial-custom-debugger :system-file trivial-custom-debugger
  :system-name trivial-custom-debugger/test :dependencies
  (parachute trivial-custom-debugger) :source
  (("git" "https://github.com/phoe/trivial-custom-debugger.git")))
 (:ql-project trivial-debug-console :system-file trivial-debug-console
  :system-name trivial-debug-console :dependencies (cffi) :source
  (("git" "https://github.com/mtstickney/trivial-debug-console.git")))
 (:ql-project trivial-do :system-file trivial-do :system-name trivial-do
  :dependencies (asdf) :source
  (("git" "https://github.com/yitzchak/trivial-do.git")))
 (:ql-project trivial-documentation :system-file trivial-documentation
  :system-name trivial-documentation :dependencies (closer-mop) :source
  (("git" "https://github.com/eugeneia/trivial-documentation.git")))
 (:ql-project trivial-documentation :system-file trivial-documentation-test
  :system-name trivial-documentation-test :dependencies (trivial-documentation)
  :source (("git" "https://github.com/eugeneia/trivial-documentation.git")))
 (:ql-project trivial-download :system-file trivial-download :system-name
  trivial-download :dependencies (asdf drakma) :source
  (("git" "https://github.com/eudoxia0/trivial-download.git")))
 (:ql-project trivial-dump-core :system-file trivial-dump-core :system-name
  trivial-dump-core :dependencies nil :source
  (("git" "https://github.com/rolpereira/trivial-dump-core.git") nil))
 (:ql-project trivial-ed-functions :system-file trivial-ed-functions
  :system-name trivial-ed-functions :dependencies (asdf) :source
  (("git" "https://github.com/yitzchak/trivial-ed-functions.git")))
 (:ql-project trivial-ed-functions :system-file trivial-ed-functions
  :system-name trivial-ed-functions/test :dependencies
  (parachute trivial-ed-functions) :source
  (("git" "https://github.com/yitzchak/trivial-ed-functions.git")))
 (:ql-project trivial-escapes :system-file trivial-escapes :system-name
  trivial-escapes :dependencies (asdf named-readtables) :source
  (("git" "https://github.com/williamyaoh/trivial-escapes.git")))
 (:ql-project trivial-escapes :system-file trivial-escapes-test :system-name
  trivial-escapes-test :dependencies (asdf fiveam trivial-escapes uiop) :source
  (("git" "https://github.com/williamyaoh/trivial-escapes.git")))
 (:ql-project trivial-exe :system-file trivial-exe :system-name trivial-exe
  :dependencies (osicat uiop) :source
  (("git" "https://github.com/ceramic/trivial-exe.git")))
 (:ql-project trivial-exe :system-file trivial-exe-test :system-name
  trivial-exe-test :dependencies (fiveam trivial-exe) :source
  (("git" "https://github.com/ceramic/trivial-exe.git")))
 (:ql-project trivial-extensible-sequences :system-file
  trivial-extensible-sequences :system-name trivial-extensible-sequences
  :dependencies (asdf) :source
  (("git" "https://github.com/shinmera/trivial-extensible-sequences.git")))
 (:ql-project trivial-extract :system-file trivial-extract :system-name
  trivial-extract :dependencies
  (alexandria archive cl-fad deflate uiop which zip) :source
  (("git" "https://github.com/eudoxia0/trivial-extract.git")))
 (:ql-project trivial-extract :system-file trivial-extract-test :system-name
  trivial-extract-test :dependencies (fiveam trivial-extract) :source
  (("git" "https://github.com/eudoxia0/trivial-extract.git")))
 (:ql-project trivial-features :system-file trivial-features :system-name
  trivial-features :dependencies (asdf) :source
  (("git" "https://github.com/trivial-features/trivial-features")))
 (:ql-project trivial-features :system-file trivial-features-tests :system-name
  trivial-features-tests :dependencies
  (alexandria asdf cffi cffi-grovel rt trivial-features) :source
  (("git" "https://github.com/trivial-features/trivial-features")))
 (:ql-project trivial-file-size :system-file trivial-file-size :system-name
  trivial-file-size :dependencies (asdf uiop) :source
  (("git" "https://github.com/ruricolist/trivial-file-size.git")))
 (:ql-project trivial-file-size :system-file trivial-file-size :system-name
  trivial-file-size/tests :dependencies (fiveam trivial-file-size) :source
  (("git" "https://github.com/ruricolist/trivial-file-size.git")))
 (:ql-project trivial-garbage :system-file trivial-garbage :system-name
  trivial-garbage :dependencies (asdf) :source
  (("git" "https://github.com/trivial-garbage/trivial-garbage")))
 (:ql-project trivial-garbage :system-file trivial-garbage :system-name
  trivial-garbage/tests :dependencies (rt trivial-garbage) :source
  (("git" "https://github.com/trivial-garbage/trivial-garbage")))
 (:ql-project trivial-gray-streams :system-file trivial-gray-streams
  :system-name trivial-gray-streams :dependencies (asdf) :source
  (("git" "https://github.com/trivial-gray-streams/trivial-gray-streams.git")))
 (:ql-project trivial-gray-streams :system-file trivial-gray-streams-test
  :system-name trivial-gray-streams-test :dependencies
  (asdf trivial-gray-streams) :source
  (("git" "https://github.com/trivial-gray-streams/trivial-gray-streams.git")))
 (:ql-project trivial-hashtable-serialize :system-file
  trivial-hashtable-serialize :system-name trivial-hashtable-serialize
  :dependencies (asdf split-sequence) :source
  (("git" "https://gitlab.com/ediethelm/trivial-hashtable-serialize.git")))
 (:ql-project trivial-http :system-file trivial-http :system-name trivial-http
  :dependencies (usocket) :source
  (("https"
    "https://common-lisp.net/project/trivial-http/trivial-http.tar.gz")))
 (:ql-project trivial-http :system-file trivial-http-test :system-name
  trivial-http-test :dependencies (lift trivial-http) :source
  (("https"
    "https://common-lisp.net/project/trivial-http/trivial-http.tar.gz")))
 (:ql-project trivial-indent :system-file trivial-indent :system-name
  trivial-indent :dependencies (asdf) :source
  (("git" "https://github.com/Shinmera/trivial-indent.git")))
 (:ql-project trivial-inspector-hook :system-file trivial-inspector-hook
  :system-name trivial-inspector-hook :dependencies (asdf) :source
  (("git" "https://github.com/yitzchak/trivial-inspector-hook.git")))
 (:ql-project trivial-irc :system-file trivial-irc :system-name trivial-irc
  :dependencies (cl-ppcre split-sequence usocket) :source
  (("git" "https://github.com/karvus/trivial-irc.git")))
 (:ql-project trivial-irc :system-file trivial-irc-echobot :system-name
  trivial-irc-echobot :dependencies (trivial-irc) :source
  (("git" "https://github.com/karvus/trivial-irc.git")))
 (:ql-project trivial-json-codec :system-file trivial-json-codec :system-name
  trivial-json-codec :dependencies
  (asdf closer-mop iterate log4cl parse-number trivial-utilities) :source
  (("git" "https://gitlab.com/ediethelm/trivial-json-codec.git")))
 (:ql-project trivial-jumptables :system-file trivial-jumptables :system-name
  trivial-jumptables :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/trivial-jumptables_latest.tar.gz")))
 (:ql-project trivial-jumptables :system-file trivial-jumptables_tests
  :system-name trivial-jumptables_tests :dependencies
  (asdf bubble-operator-upwards parachute trivial-jumptables) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/trivial-jumptables_latest.tar.gz")))
 (:ql-project trivial-lazy :system-file trivial-lazy :system-name trivial-lazy
  :dependencies (bordeaux-threads) :source
  (("git" "https://github.com/dsorokin/trivial-lazy.git")))
 (:ql-project trivial-ldap :system-file trivial-ldap :system-name trivial-ldap
  :dependencies (asdf cl+ssl usocket yacc) :source
  (("git" "https://github.com/rwiker/trivial-ldap.git")))
 (:ql-project trivial-left-pad :system-file trivial-left-pad :system-name
  trivial-left-pad :dependencies (alexandria asdf prove-asdf) :source
  (("git" "https://gitlab.com/mbabich/trivial-left-pad.git")))
 (:ql-project trivial-left-pad :system-file trivial-left-pad :system-name
  trivial-left-pad-test :dependencies (prove prove-asdf trivial-left-pad)
  :source (("git" "https://gitlab.com/mbabich/trivial-left-pad.git")))
 (:ql-project trivial-macroexpand-all :system-file trivial-macroexpand-all
  :system-name trivial-macroexpand-all :dependencies nil :source
  (("git" "https://github.com/cbaggers/trivial-macroexpand-all.git")))
 (:ql-project trivial-main-thread :system-file trivial-main-thread :system-name
  trivial-main-thread :dependencies
  (asdf bordeaux-threads simple-tasks trivial-features) :source
  (("git" "https://github.com/Shinmera/trivial-main-thread.git")))
 (:ql-project trivial-method-combinations :system-file
  trivial-method-combinations :system-name trivial-method-combinations
  :dependencies (asdf closer-mop) :source
  (("git" "https://github.com/phoe/trivial-method-combinations.git")))
 (:ql-project trivial-mimes :system-file trivial-mimes :system-name
  trivial-mimes :dependencies (asdf) :source
  (("git" "https://github.com/Shinmera/trivial-mimes.git")))
 (:ql-project trivial-mmap :system-file trivial-mmap :system-name trivial-mmap
  :dependencies (alexandria asdf osicat) :source
  (("git" "https://github.com/zodmaner/trivial-mmap.git")))
 (:ql-project trivial-monitored-thread :system-file trivial-monitored-thread
  :system-name trivial-monitored-thread :dependencies
  (asdf iterate log4cl trivial-utilities) :source
  (("git" "https://gitlab.com/ediethelm/trivial-monitored-thread.git")))
 (:ql-project trivial-monitored-thread :system-file trivial-monitored-thread
  :system-name trivial-monitored-thread/test :dependencies
  (fiveam trivial-monitored-thread) :source
  (("git" "https://gitlab.com/ediethelm/trivial-monitored-thread.git")))
 (:ql-project trivial-msi :system-file trivial-msi :system-name trivial-msi
  :dependencies (uiop) :source
  (("git" "https://github.com/roswell/trivial-msi.git")))
 (:ql-project trivial-msi :system-file trivial-msi-test :system-name
  trivial-msi-test :dependencies (fiveam trivial-msi) :source
  (("git" "https://github.com/roswell/trivial-msi.git")))
 (:ql-project trivial-nntp :system-file trivial-nntp :system-name trivial-nntp
  :dependencies (cl+ssl usocket) :source
  (("git" "https://github.com/stacksmith/trivial-nntp.git")))
 (:ql-project trivial-object-lock :system-file trivial-object-lock :system-name
  trivial-object-lock :dependencies
  (asdf bordeaux-threads iterate log4cl trivial-utilities) :source
  (("git" "https://gitlab.com/ediethelm/trivial-object-lock.git")))
 (:ql-project trivial-object-lock :system-file trivial-object-lock :system-name
  trivial-object-lock/test :dependencies (fiveam trivial-object-lock) :source
  (("git" "https://gitlab.com/ediethelm/trivial-object-lock.git")))
 (:ql-project trivial-octet-streams :system-file trivial-octet-streams
  :system-name trivial-octet-streams :dependencies nil :source
  (("git" "https://github.com/sharplispers/trivial-octet-streams.git")))
 (:ql-project trivial-open-browser :system-file trivial-open-browser
  :system-name trivial-open-browser :dependencies (uiop) :source
  (("git" "https://github.com/eudoxia0/trivial-open-browser.git")))
 (:ql-project trivial-openstack :system-file trivial-openstack :system-name
  trivial-openstack :dependencies (alexandria drakma local-time st-json)
  :source (("git" "https://github.com/zodmaner/trivial-openstack.git")))
 (:ql-project trivial-openstack :system-file trivial-openstack-test
  :system-name trivial-openstack-test :dependencies
  (fiveam hunchentoot local-time st-json trivial-openstack uri-template)
  :source (("git" "https://github.com/zodmaner/trivial-openstack.git")))
 (:ql-project trivial-package-local-nicknames :system-file
  trivial-package-local-nicknames :system-name trivial-package-local-nicknames
  :dependencies (asdf) :source
  (("git" "https://github.com/phoe/trivial-package-local-nicknames.git")))
 (:ql-project trivial-package-locks :system-file trivial-package-locks
  :system-name trivial-package-locks :dependencies (asdf) :source
  (("git" "https://github.com/yitzchak/trivial-package-locks.git")))
 (:ql-project trivial-package-locks :system-file trivial-package-locks
  :system-name trivial-package-locks/test :dependencies
  (parachute trivial-package-locks) :source
  (("git" "https://github.com/yitzchak/trivial-package-locks.git")))
 (:ql-project trivial-package-manager :system-file trivial-package-manager
  :system-name trivial-package-manager :dependencies
  (alexandria trivial-features trivial-open-browser) :source
  (("git" "https://github.com/guicho271828/trivial-package-manager.git")))
 (:ql-project trivial-package-manager :system-file trivial-package-manager.test
  :system-name trivial-package-manager.test :dependencies
  (fiveam trivial-package-manager) :source
  (("git" "https://github.com/guicho271828/trivial-package-manager.git")))
 (:ql-project trivial-pooled-database :system-file trivial-pooled-database
  :system-name trivial-pooled-database :dependencies
  (asdf bordeaux-threads cl-dbi iterate log4cl parse-number trivial-object-lock
   trivial-utilities)
  :source (("git" "https://gitlab.com/ediethelm/trivial-pooled-database.git")))
 (:ql-project trivial-project :system-file trivial-project :system-name
  trivial-project :dependencies (alexandria cl-ppcre) :source
  (("branched-git" "https://github.com/stacksmith/trivial-project.git"
    "quicklisp")))
 (:ql-project trivial-raw-io :system-file trivial-raw-io :system-name
  trivial-raw-io :dependencies (alexandria) :source
  (("git" "https://github.com/redline6561/trivial-raw-io.git")))
 (:ql-project trivial-renamer :system-file trivial-renamer :system-name
  trivial-renamer :dependencies (cl-ppcre) :source
  (("branched-git" "https://github.com/stacksmith/trivial-renamer.git"
    "quicklisp")))
 (:ql-project trivial-rfc-1123 :system-file trivial-rfc-1123 :system-name
  trivial-rfc-1123 :dependencies (asdf cl-ppcre) :source
  (("git" "https://github.com/stacksmith/trivial-rfc-1123.git")))
 (:ql-project trivial-sanitize :system-file trivial-sanitize :system-name
  trivial-sanitize :dependencies
  (alexandria asdf cl-html5-parser cl-ppcre-unicode uiop) :source
  (("git" "https://notabug.org/cage/trivial-sanitize.git")))
 (:ql-project trivial-sanitize :system-file trivial-sanitize-tests :system-name
  trivial-sanitize-tests :dependencies
  (alexandria asdf clunit2 trivial-sanitize uiop) :source
  (("git" "https://notabug.org/cage/trivial-sanitize.git")))
 (:ql-project trivial-shell :system-file trivial-shell :system-name
  trivial-shell :dependencies (asdf) :source
  (("git" "https://github.com/gwkkwg/trivial-shell.git")))
 (:ql-project trivial-shell :system-file trivial-shell-test :system-name
  trivial-shell-test :dependencies (asdf lift trivial-shell) :source
  (("git" "https://github.com/gwkkwg/trivial-shell.git")))
 (:ql-project trivial-signal :system-file trivial-signal :system-name
  trivial-signal :dependencies (asdf bordeaux-threads cffi cffi-grovel) :source
  (("git" "https://github.com/guicho271828/trivial-signal.git")))
 (:ql-project trivial-sockets :system-file trivial-sockets :system-name
  trivial-sockets :dependencies (asdf) :source
  (("git" "https://github.com/usocket/trivial-sockets.git")))
 (:ql-project trivial-ssh :system-file trivial-ssh :system-name trivial-ssh
  :dependencies (asdf trivial-ssh-libssh2) :source
  (("git" "https://github.com/eudoxia0/trivial-ssh.git")))
 (:ql-project trivial-ssh :system-file trivial-ssh-libssh2 :system-name
  trivial-ssh-libssh2 :dependencies
  (asdf babel cffi cffi-grovel cl-fad split-sequence trivial-gray-streams
   usocket)
  :source (("git" "https://github.com/eudoxia0/trivial-ssh.git")))
 (:ql-project trivial-ssh :system-file trivial-ssh-test :system-name
  trivial-ssh-test :dependencies (asdf fiveam trivial-ssh) :source
  (("git" "https://github.com/eudoxia0/trivial-ssh.git")))
 (:ql-project trivial-tco :system-file trivial-tco :system-name trivial-tco
  :dependencies nil :source
  (("git" "https://github.com/rmoritz/trivial-tco.git")))
 (:ql-project trivial-tco :system-file trivial-tco-test :system-name
  trivial-tco-test :dependencies (clunit trivial-tco) :source
  (("git" "https://github.com/rmoritz/trivial-tco.git")))
 (:ql-project trivial-thumbnail :system-file trivial-thumbnail :system-name
  trivial-thumbnail :dependencies (asdf uiop) :source
  (("git" "https://github.com/Shinmera/trivial-thumbnail.git")))
 (:ql-project trivial-timeout :system-file trivial-timeout :system-name
  trivial-timeout :dependencies (asdf) :source
  (("git" "https://github.com/gwkkwg/trivial-timeout.git")))
 (:ql-project trivial-timer :system-file trivial-timer :system-name
  trivial-timer :dependencies
  (asdf bordeaux-threads chanl iterate log4cl trivial-utilities) :source
  (("git" "https://gitlab.com/ediethelm/trivial-timer.git")))
 (:ql-project trivial-timer :system-file trivial-timer :system-name
  trivial-timer/test :dependencies (fiveam trivial-timer) :source
  (("git" "https://gitlab.com/ediethelm/trivial-timer.git")))
 (:ql-project trivial-types :system-file trivial-types :system-name
  trivial-types :dependencies nil :source
  (("git" "https://github.com/m2ym/trivial-types.git")
   ("git" "https://github.com/digikar99/trivial-types.git")))
 (:ql-project trivial-update :system-file trivial-update :system-name
  trivial-update :dependencies (asdf) :source
  (("git" "https://github.com/cbaggers/trivial-update.git")))
 (:ql-project trivial-utf-8 :system-file trivial-utf-8 :system-name
  trivial-utf-8 :dependencies (asdf mgl-pax-bootstrap) :source
  (("git" "https://gitlab.common-lisp.net/trivial-utf-8/trivial-utf-8.git")))
 (:ql-project trivial-utilities :system-file trivial-utilities :system-name
  trivial-utilities :dependencies (alexandria asdf closer-mop iterate) :source
  (("git" "https://gitlab.com/ediethelm/trivial-utilities.git")))
 (:ql-project trivial-variable-bindings :system-file trivial-variable-bindings
  :system-name trivial-variable-bindings :dependencies
  (asdf iterate trivial-utilities) :source
  (("git" "https://gitlab.com/ediethelm/trivial-variable-bindings.git")))
 (:ql-project trivial-variable-bindings :system-file trivial-variable-bindings
  :system-name trivial-variable-bindings/test :dependencies
  (fiveam trivial-variable-bindings) :source
  (("git" "https://gitlab.com/ediethelm/trivial-variable-bindings.git")))
 (:ql-project trivial-wish :system-file trivial-wish :system-name trivial-wish
  :dependencies nil :source
  (("branched-git" "https://github.com/stacksmith/trivial-wish.git"
    "quicklisp")))
 (:ql-project trivial-with :system-file trivial-with :system-name trivial-with
  :dependencies nil :source
  (("branched-git" "https://github.com/stacksmith/trivial-with.git"
    "quicklisp")))
 (:ql-project trivial-with-current-source-form :system-file
  trivial-with-current-source-form :system-name
  trivial-with-current-source-form :dependencies (alexandria asdf) :source
  (("git" "https://github.com/scymtym/trivial-with-current-source-form.git")))
 (:ql-project trivial-ws :system-file trivial-ws :system-name trivial-ws
  :dependencies (asdf hunchensocket) :source
  (("git" "https://github.com/ceramic/trivial-ws.git")))
 (:ql-project trivial-ws :system-file trivial-ws-client :system-name
  trivial-ws-client :dependencies (asdf cl-async websocket-driver) :source
  (("git" "https://github.com/ceramic/trivial-ws.git")))
 (:ql-project trivial-ws :system-file trivial-ws-test :system-name
  trivial-ws-test :dependencies
  (asdf find-port prove prove-asdf trivial-ws trivial-ws-client) :source
  (("git" "https://github.com/ceramic/trivial-ws.git")))
 (:ql-project trivial-yenc :system-file trivial-yenc :system-name trivial-yenc
  :dependencies (split-sequence) :source
  (("git" "https://github.com/stacksmith/trivial-yenc.git")))
 (:ql-project trivialib.bdd :system-file trivialib.bdd :system-name
  trivialib.bdd :dependencies
  (alexandria asdf immutable-struct trivia trivial-garbage) :source
  (("git" "https://github.com/guicho271828/trivialib.bdd.git")))
 (:ql-project trivialib.bdd :system-file trivialib.bdd.test :system-name
  trivialib.bdd.test :dependencies (asdf fiveam trivialib.bdd) :source
  (("git" "https://github.com/guicho271828/trivialib.bdd.git")))
 (:ql-project trivialib.type-unify :system-file trivialib.type-unify
  :system-name trivialib.type-unify :dependencies
  (alexandria asdf introspect-environment trivia type-r) :source
  (("git" "https://github.com/guicho271828/trivialib.type-unify.git")))
 (:ql-project trivialib.type-unify :system-file trivialib.type-unify.test
  :system-name trivialib.type-unify.test :dependencies
  (asdf fiveam trivialib.type-unify) :source
  (("git" "https://github.com/guicho271828/trivialib.type-unify.git")))
 (:ql-project trucler :system-file trucler :system-name trucler :dependencies
  (asdf trucler-base trucler-native) :source
  (("git" "https://github.com/s-expressionists/Trucler.git")))
 (:ql-project trucler :system-file trucler-base :system-name trucler-base
  :dependencies (acclimation asdf) :source
  (("git" "https://github.com/s-expressionists/Trucler.git")))
 (:ql-project trucler :system-file trucler-native :system-name trucler-native
  :dependencies (asdf trucler-base) :source
  (("git" "https://github.com/s-expressionists/Trucler.git")))
 (:ql-project trucler :system-file trucler-native-test :system-name
  trucler-native-test :dependencies (asdf trucler-base trucler-native) :source
  (("git" "https://github.com/s-expressionists/Trucler.git")))
 (:ql-project trucler :system-file trucler-reference :system-name
  trucler-reference :dependencies (asdf trucler-base) :source
  (("git" "https://github.com/s-expressionists/Trucler.git")))
 (:ql-project truetype-clx :system-file truetype-clx :system-name truetype-clx
  :dependencies (asdf cl-aa cl-paths-ttf cl-vectors zpb-ttf) :source
  (("git" "https://github.com/JMC-design/truetype-clx.git")))
 (:ql-project try :system-file try :system-name try :dependencies
  (alexandria asdf cl-ppcre closer-mop ieee-floats mgl-pax trivial-gray-streams
   try.asdf uiop)
  :source (("git" "https://github.com/melisgl/try.git")))
 (:ql-project try :system-file try.asdf :system-name try.asdf :dependencies
  (asdf) :source (("git" "https://github.com/melisgl/try.git")))
 (:ql-project try :system-file try :system-name try/test :dependencies (try)
  :source (("git" "https://github.com/melisgl/try.git")))
 (:ql-project tsqueue :system-file tsqueue :system-name tsqueue :dependencies
  (asdf bordeaux-threads) :source
  (("git" "https://github.com/plkrueger/tsqueue.git")))
 (:ql-project ttt :system-file ttt :system-name ttt :dependencies
  (asdf bordeaux-threads) :source
  (("git" "https://github.com/genelkim/ttt.git")))
 (:ql-project ttt :system-file ttt :system-name ttt/tests :dependencies
  (lisp-unit ttt) :source (("git" "https://github.com/genelkim/ttt.git")))
 (:ql-project twfy :system-file twfy :system-name twfy :dependencies
  (cl-json drakma) :source (("git" "https://github.com/jamtho/twfy.git")))
 (:ql-project type-i :system-file type-i :system-name type-i :dependencies
  (alexandria asdf introspect-environment lisp-namespace trivia.trivial)
  :source (("git" "https://github.com/guicho271828/type-i.git")))
 (:ql-project type-i :system-file type-i.test :system-name type-i.test
  :dependencies (asdf fiveam type-i) :source
  (("git" "https://github.com/guicho271828/type-i.git")))
 (:ql-project type-r :system-file type-r :system-name type-r :dependencies
  (alexandria asdf trivia) :source
  (("git" "https://github.com/guicho271828/type-r.git")))
 (:ql-project type-r :system-file type-r.test :system-name type-r.test
  :dependencies (asdf fiveam type-r) :source
  (("git" "https://github.com/guicho271828/type-r.git")))
 (:ql-project type-templates :system-file type-templates :system-name
  type-templates :dependencies
  (alexandria asdf documentation-utils form-fiddle) :source
  (("git" "https://github.com/shinmera/type-templates.git")))
 (:ql-project typo :system-file typo :system-name typo :dependencies
  (alexandria asdf closer-mop introspect-environment trivia trivial-arguments
   trivial-garbage)
  :source (("git" "https://github.com/marcoheisig/Typo.git")))
 (:ql-project typo :system-file typo.test-suite :system-name typo.test-suite
  :dependencies (asdf closer-mop typo) :source
  (("git" "https://github.com/marcoheisig/Typo.git")))
 (:ql-project uax-14 :system-file uax-14 :system-name uax-14 :dependencies
  (asdf documentation-utils) :source
  (("git" "https://github.com/shinmera/uax-14.git")))
 (:ql-project uax-14 :system-file uax-14-test :system-name uax-14-test
  :dependencies (asdf cl-ppcre parachute uax-14) :source
  (("git" "https://github.com/shinmera/uax-14.git")))
 (:ql-project uax-15 :system-file uax-15 :system-name uax-15 :dependencies
  (asdf cl-ppcre split-sequence) :source
  (("git" "https://github.com/sabracrolleton/uax-15.git")))
 (:ql-project uax-15 :system-file uax-15 :system-name uax-15/tests
  :dependencies (cl-ppcre parachute split-sequence uax-15) :source
  (("git" "https://github.com/sabracrolleton/uax-15.git")))
 (:ql-project uax-9 :system-file uax-9 :system-name uax-9 :dependencies
  (asdf documentation-utils) :source
  (("git" "https://github.com/shinmera/uax-9.git")))
 (:ql-project uax-9 :system-file uax-9-test :system-name uax-9-test
  :dependencies (asdf cl-ppcre parachute uax-9) :source
  (("git" "https://github.com/shinmera/uax-9.git")))
 (:ql-project ubiquitous :system-file ubiquitous :system-name ubiquitous
  :dependencies (asdf) :source
  (("git" "https://github.com/Shinmera/ubiquitous.git")))
 (:ql-project ubiquitous :system-file ubiquitous-concurrent :system-name
  ubiquitous-concurrent :dependencies (asdf bordeaux-threads ubiquitous)
  :source (("git" "https://github.com/Shinmera/ubiquitous.git")))
 (:ql-project ucons :system-file ucons :system-name ucons :dependencies
  (alexandria asdf atomics bordeaux-threads named-readtables trivia) :source
  (("git" "https://github.com/marcoheisig/ucons.git")))
 (:ql-project ucw :system-file ucw :system-name ucw :dependencies
  (cl-ppcre closer-mop ucw-core) :source
  (("git" "https://gitlab.common-lisp.net/ucw/ucw-core.git")))
 (:ql-project ucw :system-file ucw-core :system-name ucw-core :dependencies
  (arnesi bordeaux-threads cl-fad closer-mop iterate local-time net-telent-date
   rfc2109 swank trivial-garbage usocket yaclml)
  :source (("git" "https://gitlab.common-lisp.net/ucw/ucw-core.git")))
 (:ql-project ucw :system-file ucw-core :system-name ucw-core.test
  :dependencies (arnesi cxml drakma iterate stefil ucw-core) :source
  (("git" "https://gitlab.common-lisp.net/ucw/ucw-core.git")))
 (:ql-project ucw :system-file ucw :system-name ucw.examples :dependencies
  (ucw) :source (("git" "https://gitlab.common-lisp.net/ucw/ucw-core.git")))
 (:ql-project ucw :system-file ucw-core :system-name ucw.httpd :dependencies
  (cl-ppcre puri rfc2388-binary ucw-core) :source
  (("git" "https://gitlab.common-lisp.net/ucw/ucw-core.git")))
 (:ql-project ucw :system-file ucw :system-name ucw.manual-examples
  :dependencies (ucw) :source
  (("git" "https://gitlab.common-lisp.net/ucw/ucw-core.git")))
 (:ql-project uffi :system-file uffi :system-name uffi :dependencies (asdf)
  :source (("kmr-git" "uffi")))
 (:ql-project uffi :system-file uffi-tests :system-name uffi-tests
  :dependencies (asdf uffi) :source (("kmr-git" "uffi")))
 (:ql-project ufo :system-file ufo :system-name ufo :dependencies (asdf uiop)
  :source (("git" "https://github.com/ta2gch/UFO.git")))
 (:ql-project ufo :system-file ufo-test :system-name ufo-test :dependencies
  (asdf cl-fad prove prove-asdf ufo) :source
  (("git" "https://github.com/ta2gch/UFO.git")))
 (:ql-project ugly-tiny-infix-macro :system-file ugly-tiny-infix-macro
  :system-name ugly-tiny-infix-macro :dependencies nil :source
  (("git" "https://github.com/peey/ugly-tiny-infix-macro.git")))
 (:ql-project uiop :system-file asdf-driver :system-name asdf-driver
  :dependencies (asdf uiop) :source
  (("https" "https://asdf.common-lisp.dev/archives/uiop.tar.gz") nil nil nil
   nil nil))
 (:ql-project uiop :system-file uiop :system-name uiop :dependencies (asdf)
  :source
  (("https" "https://asdf.common-lisp.dev/archives/uiop.tar.gz") nil nil nil
   nil nil))
 (:ql-project umbra :system-file umbra :system-name umbra :dependencies
  (asdf mfiano-utils shadow varjo) :source
  (("git" "https://github.com/mfiano/umbra.git")))
 (:ql-project umlisp :system-file umlisp :system-name umlisp :dependencies
  (asdf clsql clsql-mysql hyperobject kmrcl) :source (("kmr-git" "umlisp")))
 (:ql-project umlisp :system-file umlisp-tests :system-name umlisp-tests
  :dependencies (asdf rt umlisp) :source (("kmr-git" "umlisp")))
 (:ql-project umlisp-orf :system-file umlisp-orf :system-name umlisp-orf
  :dependencies (clsql clsql-postgresql-socket hyperobject kmrcl) :source
  (("kmr-git" "umlisp-orf")))
 (:ql-project unboxables :system-file unboxables :system-name unboxables
  :dependencies (alexandria asdf cffi trivial-garbage) :source
  (("git" "https://github.com/digikar99/unboxables.git")))
 (:ql-project uncursed :system-file uncursed :system-name uncursed
  :dependencies (alexandria asdf cffi cffi-grovel cl-setlocale terminfo)
  :source (("git" "https://github.com/Plisp/uncursed.git")))
 (:ql-project uncursed :system-file uncursed-examples :system-name
  uncursed-examples :dependencies (asdf cffi-grovel uncursed) :source
  (("git" "https://github.com/Plisp/uncursed.git")))
 (:ql-project unicly :system-file unicly :system-name unicly :dependencies
  (asdf ironclad split-sequence) :source
  (("git" "https://github.com/mon-key/unicly.git")))
 (:ql-project unit-formula :system-file unit-formulas :system-name
  unit-formulas :dependencies (alexandria asdf iterate) :source
  (("git" "https://github.com/Ramarren/unit-formula.git")))
 (:ql-project unit-test :system-file unit-test :system-name unit-test
  :dependencies nil :source
  (("git" "https://github.com/hanshuebner/unit-test.git") nil))
 (:ql-project universal-config :system-file universal-config :system-name
  universal-config :dependencies (asdf cl-ppcre parse-float) :source
  (("git" "https://github.com/Shinmera/universal-config.git")))
 (:ql-project unix-options :system-file unix-options :system-name unix-options
  :dependencies nil :source
  (("git" "https://github.com/astine/unix-options.git")))
 (:ql-project unix-opts :system-file unix-opts :system-name unix-opts
  :dependencies (asdf) :source
  (("git" "https://github.com/libre-man/unix-opts.git")))
 (:ql-project unix-opts :system-file unix-opts :system-name unix-opts/tests
  :dependencies (unix-opts) :source
  (("git" "https://github.com/libre-man/unix-opts.git")))
 (:ql-project uri-template :system-file uri-template :system-name uri-template
  :dependencies (asdf cl-ppcre flexi-streams named-readtables) :source
  (("https"
    "https://common-lisp.net/project/uri-template/release/uri-template-latest.tgz")))
 (:ql-project uri-template :system-file uri-template.test :system-name
  uri-template.test :dependencies (asdf fiveam uri-template) :source
  (("https"
    "https://common-lisp.net/project/uri-template/release/uri-template-latest.tgz")))
 (:ql-project url-rewrite :system-file url-rewrite :system-name url-rewrite
  :dependencies nil :source (("ediware-http" "url-rewrite")))
 (:ql-project userial :system-file userial :system-name userial :dependencies
  (contextl ieee-floats trivial-utf-8) :source
  (("http"
    "http://nklein.com/wp-content/uploads/2011/06/userial_0.8.2011.06.02.tar.gz")))
 (:ql-project userial :system-file userial-tests :system-name userial-tests
  :dependencies (nst userial) :source
  (("http"
    "http://nklein.com/wp-content/uploads/2011/06/userial_0.8.2011.06.02.tar.gz")))
 (:ql-project usocket :system-file usocket :system-name usocket :dependencies
  (asdf split-sequence) :source
  (("https"
    "https://common-lisp.net/project/usocket/releases/usocket-latest.tar.gz")))
 (:ql-project usocket :system-file usocket-server :system-name usocket-server
  :dependencies (asdf bordeaux-threads usocket) :source
  (("https"
    "https://common-lisp.net/project/usocket/releases/usocket-latest.tar.gz")))
 (:ql-project usocket :system-file usocket-test :system-name usocket-test
  :dependencies (asdf rt usocket-server) :source
  (("https"
    "https://common-lisp.net/project/usocket/releases/usocket-latest.tar.gz")))
 (:ql-project utilities.binary-dump :system-file utilities.binary-dump
  :system-name utilities.binary-dump :dependencies
  (alexandria asdf let-plus nibbles) :source
  (("git" "https://github.com/scymtym/utilities.binary-dump.git")))
 (:ql-project utilities.binary-dump :system-file utilities.binary-dump
  :system-name utilities.binary-dump/test :dependencies
  (alexandria fiveam let-plus nibbles split-sequence utilities.binary-dump)
  :source (("git" "https://github.com/scymtym/utilities.binary-dump.git")))
 (:ql-project utilities.print-items :system-file utilities.print-items
  :system-name utilities.print-items :dependencies (alexandria asdf) :source
  (("git" "https://github.com/scymtym/utilities.print-items.git")))
 (:ql-project utilities.print-items :system-file utilities.print-items
  :system-name utilities.print-items/test :dependencies
  (fiveam utilities.print-items) :source
  (("git" "https://github.com/scymtym/utilities.print-items.git")))
 (:ql-project utilities.print-tree :system-file utilities.print-tree
  :system-name utilities.print-tree :dependencies (alexandria asdf uiop)
  :source (("git" "https://github.com/scymtym/utilities.print-tree.git")))
 (:ql-project utilities.print-tree :system-file utilities.print-tree
  :system-name utilities.print-tree/test :dependencies
  (alexandria fiveam uiop utilities.print-tree) :source
  (("git" "https://github.com/scymtym/utilities.print-tree.git")))
 (:ql-project utility :system-file utility :system-name utility :dependencies
  (asdf) :source (("git" "https://github.com/terminal625/utility.git")))
 (:ql-project utility-arguments :system-file utility-arguments :system-name
  utility-arguments :dependencies (alexandria) :source
  (("git" "https://gitlab.com/fau/utility-arguments.git")))
 (:ql-project utils-kt :system-file utils-kt :system-name utils-kt
  :dependencies (asdf) :source
  (("git" "https://github.com/kennytilton/utils-kt.git")))
 (:ql-project utm :system-file utm :system-name utm :dependencies (asdf)
  :source (("git" "https://github.com/jl2/utm.git")))
 (:ql-project utm :system-file utm.test :system-name utm.test :dependencies
  (asdf fiveam utm) :source (("git" "https://github.com/jl2/utm.git")))
 (:ql-project utm-ups :system-file utm-ups :system-name utm-ups :dependencies
  (asdf) :source (("git" "https://codeberg.org/glv/utm-ups.git")))
 (:ql-project utm-ups :system-file utm-ups :system-name utm-ups/tests
  :dependencies (fiveam utm-ups) :source
  (("git" "https://codeberg.org/glv/utm-ups.git")))
 (:ql-project uuid :system-file uuid :system-name uuid :dependencies
  (asdf ironclad trivial-utf-8) :source
  (("git" "https://github.com/dardoria/uuid.git")))
 (:ql-project validate-list :system-file validate-list :system-name
  validate-list :dependencies
  (alexandria arithmetic-operators-as-words asdf lisp-unit) :source
  (("git" "https://github.com/K1D77A/validate-list.git")))
 (:ql-project validate-list :system-file validate-list :system-name
  validate-list/tests :dependencies (lisp-unit validate-list) :source
  (("git" "https://github.com/K1D77A/validate-list.git")))
 (:ql-project varjo :system-file varjo :system-name varjo :dependencies
  (alexandria asdf cl-ppcre documentation-utils fn glsl-docs glsl-spec
   glsl-symbols named-readtables parse-float uiop vas-string-metrics)
  :source
  (("branched-git" "https://github.com/cbaggers/varjo.git" "release-quicklisp")
   nil))
 (:ql-project varjo :system-file varjo.import :system-name varjo.import
  :dependencies
  (asdf fare-quasiquote-extras glsl-toolkit rtg-math.vari split-sequence varjo)
  :source
  (("branched-git" "https://github.com/cbaggers/varjo.git" "release-quicklisp")
   nil))
 (:ql-project varjo :system-file varjo.tests :system-name varjo.tests
  :dependencies (asdf fiveam rtg-math.vari varjo) :source
  (("branched-git" "https://github.com/cbaggers/varjo.git" "release-quicklisp")
   nil))
 (:ql-project vas-string-metrics :system-file test.vas-string-metrics
  :system-name test.vas-string-metrics :dependencies (asdf vas-string-metrics)
  :source (("git" "https://github.com/vsedach/vas-string-metrics.git")))
 (:ql-project vas-string-metrics :system-file vas-string-metrics :system-name
  vas-string-metrics :dependencies (asdf) :source
  (("git" "https://github.com/vsedach/vas-string-metrics.git")))
 (:ql-project vecto :system-file vecto :system-name vecto :dependencies
  (asdf cl-vectors zpb-ttf zpng) :source
  (("https" "https://www.xach.com/lisp/vecto.tgz")))
 (:ql-project vecto :system-file vectometry :system-name vectometry
  :dependencies (asdf vecto) :source
  (("https" "https://www.xach.com/lisp/vecto.tgz")))
 (:ql-project vector :system-file com.elbeno.vector :system-name
  com.elbeno.vector :dependencies nil :source
  (("git" "https://github.com/elbeno/vector.git")))
 (:ql-project vectors :system-file vectors :system-name vectors :dependencies
  nil :source (("git" "https://gitlab.com/porky11/vectors.git")))
 (:ql-project vellum :system-file vellum :system-name vellum :dependencies
  (agnostic-lizard alexandria asdf cl-data-structures closer-mop
   documentation-utils-extensions iterate lparallel metabang-bind serapeum)
  :source (("git" "https://github.com/sirherrbatka/vellum.git")))
 (:ql-project vellum :system-file vellum-tests :system-name vellum-tests
  :dependencies (asdf prove prove-asdf vellum) :source
  (("git" "https://github.com/sirherrbatka/vellum.git")))
 (:ql-project vellum-binary :system-file vellum-binary :system-name
  vellum-binary :dependencies
  (asdf chipz cl-conspack ieee-floats nibbles salza2 vellum) :source
  (("git" "https://github.com/sirherrbatka/vellum-binary.git")))
 (:ql-project vellum-clim :system-file vellum-clim :system-name vellum-clim
  :dependencies (asdf iterate mcclim vellum) :source
  (("git" "https://github.com/sirherrbatka/vellum-clim.git")))
 (:ql-project vellum-csv :system-file vellum-csv :system-name vellum-csv
  :dependencies
  (alexandria asdf documentation-utils-extensions iterate parse-float serapeum
   uiop vellum)
  :source (("git" "https://github.com/sirherrbatka/vellum-csv.git")))
 (:ql-project vellum-csv :system-file vellum-csv-tests :system-name
  vellum-csv-tests :dependencies (asdf prove prove-asdf vellum-csv) :source
  (("git" "https://github.com/sirherrbatka/vellum-csv.git")))
 (:ql-project vellum-postmodern :system-file vellum-postmodern :system-name
  vellum-postmodern :dependencies
  (alexandria asdf cl-postgres documentation-utils-extensions iterate
   postmodern s-sql serapeum vellum)
  :source (("git" "https://github.com/sirherrbatka/vellum-postmodern.git")))
 (:ql-project verbose :system-file verbose :system-name verbose :dependencies
  (asdf bordeaux-threads dissect documentation-utils local-time piping) :source
  (("git" "https://github.com/Shinmera/verbose.git")))
 (:ql-project verlet :system-file verlet :system-name verlet :dependencies
  (asdf chain fset metabang-bind mgl-pax rtg-math) :source
  (("git" "https://gitlab.com/Aksej/verlet.git")))
 (:ql-project vernacular :system-file vernacular :system-name vernacular
  :dependencies
  (alexandria asdf local-time named-readtables overlord serapeum trivia
   trivial-garbage trivial-macroexpand-all)
  :source (("git" "https://github.com/ruricolist/vernacular.git")))
 (:ql-project verrazano :system-file verrazano :system-name verrazano
  :dependencies
  (alexandria cffi cl-ppcre closer-mop cxml iterate metabang-bind parse-number
   trivial-shell)
  :source (("git" "https://gitlab.common-lisp.net/fetter/verrazano.git")))
 (:ql-project verrazano :system-file verrazano-runtime :system-name
  verrazano-runtime :dependencies (cffi) :source
  (("git" "https://gitlab.common-lisp.net/fetter/verrazano.git")))
 (:ql-project vertex :system-file vertex :system-name vertex :dependencies
  (common-doc common-doc-plump plump-tex) :source
  (("git" "https://github.com/CommonDoc/vertex.git")))
 (:ql-project vertex :system-file vertex-test :system-name vertex-test
  :dependencies (fiveam vertex) :source
  (("git" "https://github.com/CommonDoc/vertex.git")))
 (:ql-project vgplot :system-file vgplot :system-name vgplot :dependencies
  (asdf cl-fad cl-ppcre ltk) :source
  (("git" "https://github.com/volkers/vgplot.git")))
 (:ql-project vgplot :system-file vgplot :system-name vgplot/test :dependencies
  (lisp-unit vgplot) :source (("git" "https://github.com/volkers/vgplot.git")))
 (:ql-project vivid-colors :system-file vivid-colors :system-name vivid-colors
  :dependencies
  (asdf cl-colors2 closer-mop jingoh.documentizer lambda-fiddle millet
   vivid-colors.content vivid-colors.dispatch vivid-colors.stream)
  :source (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.content :system-name
  vivid-colors.content :dependencies
  (alexandria asdf cl-ansi-text jingoh.documentizer mcase vivid-colors.queue
   vivid-colors.shared)
  :source (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.content.test :system-name
  vivid-colors.content.test :dependencies (asdf jingoh vivid-colors.content)
  :source (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.dispatch :system-name
  vivid-colors.dispatch :dependencies
  (alexandria asdf jingoh.documentizer millet) :source
  (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.dispatch.test :system-name
  vivid-colors.dispatch.test :dependencies (asdf jingoh vivid-colors.dispatch)
  :source (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.queue :system-name
  vivid-colors.queue :dependencies (alexandria asdf jingoh.documentizer millet)
  :source (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.queue.test :system-name
  vivid-colors.queue.test :dependencies (asdf jingoh vivid-colors.queue)
  :source (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.shared :system-name
  vivid-colors.shared :dependencies (asdf jingoh.documentizer) :source
  (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.shared.test :system-name
  vivid-colors.shared.test :dependencies (asdf jingoh vivid-colors.shared)
  :source (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.stream :system-name
  vivid-colors.stream :dependencies
  (alexandria asdf cl-ansi-text jingoh.documentizer trivial-gray-streams
   vivid-colors.content vivid-colors.dispatch vivid-colors.shared)
  :source (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.stream.test :system-name
  vivid-colors.stream.test :dependencies (asdf jingoh vivid-colors.stream)
  :source (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-colors :system-file vivid-colors.test :system-name
  vivid-colors.test :dependencies (asdf jingoh vivid-colors) :source
  (("git" "https://github.com/hyotang666/vivid-colors.git")))
 (:ql-project vivid-diff :system-file vivid-diff :system-name vivid-diff
  :dependencies
  (asdf cl-colors2 closer-mop jingoh.documentizer matrix-case vivid-colors)
  :source (("git" "https://github.com/hyotang666/vivid-diff.git")))
 (:ql-project vivid-diff :system-file vivid-diff.test :system-name
  vivid-diff.test :dependencies (asdf cl-ppcre jingoh vivid-diff) :source
  (("git" "https://github.com/hyotang666/vivid-diff.git")))
 (:ql-project vk :system-file vk :system-name vk :dependencies
  (alexandria asdf cffi rove) :source
  (("git" "https://github.com/JolifantoBambla/vk.git")))
 (:ql-project vk :system-file vk :system-name vk/tests :dependencies (rove vk)
  :source (("git" "https://github.com/JolifantoBambla/vk.git")))
 (:ql-project vom :system-file vom :system-name vom :dependencies nil :source
  (("git" "https://github.com/orthecreedence/vom.git")))
 (:ql-project vom-json :system-file vom-json :system-name vom-json
  :dependencies (asdf jonathan local-time vom) :source
  (("git" "https://github.com/fisxoj/vom-json.git")))
 (:ql-project vom-json :system-file vom-json :system-name vom-json/test
  :dependencies (rove vom-json) :source
  (("git" "https://github.com/fisxoj/vom-json.git")))
 (:ql-project vp-trees :system-file vp-trees :system-name vp-trees
  :dependencies (asdf float-features serapeum) :source
  (("git" "https://github.com/shamazmazum/vp-trees.git")))
 (:ql-project vp-trees :system-file vp-trees :system-name vp-trees/tests
  :dependencies (fiveam vp-trees) :source
  (("git" "https://github.com/shamazmazum/vp-trees.git")))
 (:ql-project wallstreetflets :system-file wallstreetflets :system-name
  wallstreetflets :dependencies (asdf dexador lquery parse-number) :source
  (("git" "https://github.com/nathanvy/wallstreetflets.git")))
 (:ql-project wasm-encoder :system-file wasm-encoder :system-name wasm-encoder
  :dependencies
  (agutil alexandria asdf babel flexi-streams generic-cl ieee-floats trivia)
  :source (("git" "https://github.com/alex-gutev/wasm-encoder.git")))
 (:ql-project wasm-encoder :system-file wasm-encoder :system-name
  wasm-encoder/test :dependencies (fiveam wasm-encoder) :source
  (("git" "https://github.com/alex-gutev/wasm-encoder.git")))
 (:ql-project water :system-file water :system-name water :dependencies
  (asdf parenscript) :source
  (("git" "https://github.com/handicraftsman/water.git")))
 (:ql-project wayflan :system-file wayflan :system-name wayflan :dependencies
  (asdf cffi-grovel wayflan-client) :source
  (("git" "https://git.sr.ht/~shunter/wayflan/")))
 (:ql-project wayflan :system-file wayflan-client :system-name wayflan-client
  :dependencies (alexandria asdf babel cffi cffi-grovel closer-mop plump)
  :source (("git" "https://git.sr.ht/~shunter/wayflan/")))
 (:ql-project wayflan :system-file wayflan-client :system-name
  wayflan-client/examples :dependencies
  (cl-cairo2 cl-colors cl-pango cl-xkb input-event-codes posix-shm
   wayflan-client)
  :source (("git" "https://git.sr.ht/~shunter/wayflan/")))
 (:ql-project wayflan :system-file wayflan :system-name wayflan/common
  :dependencies (alexandria babel cffi cffi-grovel plump) :source
  (("git" "https://git.sr.ht/~shunter/wayflan/")))
 (:ql-project wayflan :system-file wayflan :system-name wayflan/test
  :dependencies (parachute wayflan) :source
  (("git" "https://git.sr.ht/~shunter/wayflan/")))
 (:ql-project webapi :system-file webapi :system-name webapi :dependencies
  (alexandria asdf closer-mop dexador kebab quri st-json) :source
  (("git" "https://github.com/fukamachi/webapi.git")))
 (:ql-project weblocks :system-file weblocks-scripts :system-name
  weblocks-scripts :dependencies (asdf cl-fad cl-ppcre) :source
  (("git" "https://github.com/skypher/weblocks.git")))
 (:ql-project weblocks :system-file weblocks-util :system-name weblocks-util
  :dependencies
  (anaphora asdf bordeaux-threads cl-cont cl-fad cl-json cl-ppcre cl-who
   closer-mop f-underscore html-template hunchentoot ironclad metatilities
   optima parenscript parse-number pretty-function puri salza2
   trivial-backtrace trivial-timeout)
  :source (("git" "https://github.com/skypher/weblocks.git")))
 (:ql-project weblocks-stores :system-file weblocks-clsql :system-name
  weblocks-clsql :dependencies
  (asdf closer-mop clsql clsql-fluid metatilities weblocks-stores
   weblocks-util)
  :source
  (("git" "https://github.com/weblocks-framework/weblocks-stores.git")))
 (:ql-project weblocks-stores :system-file weblocks-memory :system-name
  weblocks-memory :dependencies (asdf cl-ppcre metatilities weblocks-stores)
  :source
  (("git" "https://github.com/weblocks-framework/weblocks-stores.git")))
 (:ql-project weblocks-stores :system-file weblocks-montezuma :system-name
  weblocks-montezuma :dependencies (asdf montezuma weblocks-stores) :source
  (("git" "https://github.com/weblocks-framework/weblocks-stores.git")))
 (:ql-project weblocks-stores :system-file weblocks-perec :system-name
  weblocks-perec :dependencies (asdf hu.dwim.perec weblocks-stores) :source
  (("git" "https://github.com/weblocks-framework/weblocks-stores.git")))
 (:ql-project weblocks-stores :system-file weblocks-prevalence :system-name
  weblocks-prevalence :dependencies
  (asdf bordeaux-threads cl-ppcre cl-prevalence metatilities weblocks-memory
   weblocks-stores)
  :source
  (("git" "https://github.com/weblocks-framework/weblocks-stores.git")))
 (:ql-project weblocks-stores :system-file weblocks-stores :system-name
  weblocks-stores :dependencies (asdf closer-mop metatilities weblocks-util)
  :source
  (("git" "https://github.com/weblocks-framework/weblocks-stores.git")))
 (:ql-project websocket-driver :system-file websocket-driver :system-name
  websocket-driver :dependencies
  (asdf websocket-driver-client websocket-driver-server) :source
  (("git" "https://github.com/fukamachi/websocket-driver.git")))
 (:ql-project websocket-driver :system-file websocket-driver-base :system-name
  websocket-driver-base :dependencies
  (asdf bordeaux-threads cl-base64 event-emitter fast-io fast-websocket sha1
   split-sequence)
  :source (("git" "https://github.com/fukamachi/websocket-driver.git")))
 (:ql-project websocket-driver :system-file websocket-driver-client
  :system-name websocket-driver-client :dependencies
  (asdf babel cl+ssl cl-base64 fast-http fast-io fast-websocket quri usocket
   websocket-driver-base)
  :source (("git" "https://github.com/fukamachi/websocket-driver.git")))
 (:ql-project websocket-driver :system-file websocket-driver-server
  :system-name websocket-driver-server :dependencies
  (asdf babel clack-socket fast-io fast-websocket websocket-driver-base)
  :source (("git" "https://github.com/fukamachi/websocket-driver.git")))
 (:ql-project weft :system-file weft :system-name weft :dependencies
  (asdf bordeaux-threads log4cl trivial-timeout usocket) :source
  (("git" "https://github.com/mtstickney/weft.git")))
 (:ql-project westbrook :system-file westbrook :system-name westbrook
  :dependencies (asdf cxml) :source
  (("git" "https://github.com/xach/westbrook.git")))
 (:ql-project westbrook :system-file westbrook-tests :system-name
  westbrook-tests :dependencies (asdf fiasco westbrook) :source
  (("git" "https://github.com/xach/westbrook.git")))
 (:ql-project what3words :system-file what3words :system-name what3words
  :dependencies (cl-ppcre drakma jsown) :source
  (("git" "https://github.com/MartinEnders/what3words.git")))
 (:ql-project which :system-file which :system-name which :dependencies
  (cl-fad path-parse uiop) :source
  (("git" "https://github.com/eudoxia0/which.git")))
 (:ql-project which :system-file which-test :system-name which-test
  :dependencies (fiveam which) :source
  (("git" "https://github.com/eudoxia0/which.git")))
 (:ql-project whirlog :system-file whirlog :system-name whirlog :dependencies
  (asdf) :source (("git" "https://github.com/codr7/whirlog.git")))
 (:ql-project whofields :system-file whofields :system-name whofields
  :dependencies (asdf asdf-package-system cl-who) :source
  (("git" "https://github.com/michaeljforster/whofields.git")))
 (:ql-project whofields :system-file whofields :system-name whofields/test
  :dependencies nil :source
  (("git" "https://github.com/michaeljforster/whofields.git")))
 (:ql-project wild-package-inferred-system :system-file foo-wild :system-name
  foo-wild :dependencies (asdf wild-package-inferred-system) :source
  (("git" "https://github.com/privet-kitty/wild-package-inferred-system.git")))
 (:ql-project wild-package-inferred-system :system-file
  wild-package-inferred-system :system-name wild-package-inferred-system
  :dependencies (asdf) :source
  (("git" "https://github.com/privet-kitty/wild-package-inferred-system.git")))
 (:ql-project wild-package-inferred-system :system-file
  wild-package-inferred-system :system-name wild-package-inferred-system/test
  :dependencies (fiveam wild-package-inferred-system) :source
  (("git" "https://github.com/privet-kitty/wild-package-inferred-system.git")))
 (:ql-project winhttp :system-file winhttp :system-name winhttp :dependencies
  (asdf cffi) :source (("git" "https://github.com/fjames86/winhttp.git")))
 (:ql-project winlock :system-file winlock :system-name winlock :dependencies
  (asdf cffi named-readtables serapeum) :source
  (("git" "https://github.com/ruricolist/winlock.git")))
 (:ql-project winlock :system-file winlock :system-name winlock/test
  :dependencies (fiveam winlock) :source
  (("git" "https://github.com/ruricolist/winlock.git")))
 (:ql-project with-branching :system-file with-branching :system-name
  with-branching :dependencies (alexandria asdf trivial-indent) :source
  (("git" "https://github.com/phoe/with-branching.git")))
 (:ql-project with-branching :system-file with-branching :system-name
  with-branching/dangerous :dependencies (with-branching) :source
  (("git" "https://github.com/phoe/with-branching.git")))
 (:ql-project with-branching :system-file with-branching :system-name
  with-branching/test :dependencies (agnostic-lizard with-branching) :source
  (("git" "https://github.com/phoe/with-branching.git")))
 (:ql-project with-c-syntax :system-file with-c-syntax :system-name
  with-c-syntax :dependencies
  (alexandria asdf cl-ppcre float-features floating-point-contractions
   named-readtables split-sequence trivial-gray-streams yacc)
  :source (("git" "https://github.com/y2q-actionman/with-c-syntax.git")))
 (:ql-project with-c-syntax :system-file with-c-syntax-test :system-name
  with-c-syntax-test :dependencies
  (1am asdf floating-point trivial-cltl2 with-c-syntax) :source
  (("git" "https://github.com/y2q-actionman/with-c-syntax.git")))
 (:ql-project with-cached-reader-conditionals :system-file
  with-cached-reader-conditionals :system-name with-cached-reader-conditionals
  :dependencies nil :source
  (("git" "https://github.com/cbaggers/with-cached-reader-conditionals.git")))
 (:ql-project with-contexts :system-file with-contexts :system-name
  with-contexts :dependencies (asdf) :source
  (("git" "https://gitlab.common-lisp.net/mantoniotti/with-contexts.git")))
 (:ql-project with-output-to-stream :system-file with-output-to-stream
  :system-name with-output-to-stream :dependencies (asdf) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/with-output-to-stream_latest.tar.gz")))
 (:ql-project with-output-to-stream :system-file with-output-to-stream_tests
  :system-name with-output-to-stream_tests :dependencies
  (asdf parachute with-output-to-stream) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/with-output-to-stream_latest.tar.gz")))
 (:ql-project with-setf :system-file with-setf :system-name with-setf
  :dependencies (asdf) :source
  (("branched-git" "https://github.com/cbaggers/with-setf.git"
    "release-quicklisp")))
 (:ql-project with-shadowed-bindings :system-file with-shadowed-bindings
  :system-name with-shadowed-bindings :dependencies (asdf map-bind) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/with-shadowed-bindings_latest.tar.gz")))
 (:ql-project with-shadowed-bindings :system-file with-shadowed-bindings_tests
  :system-name with-shadowed-bindings_tests :dependencies
  (asdf parachute with-shadowed-bindings) :source
  (("https"
    "https://tarballs.hexstreamsoft.com/libraries/latest/with-shadowed-bindings_latest.tar.gz")))
 (:ql-project with-user-abort :system-file with-user-abort :system-name
  with-user-abort :dependencies (asdf) :source
  (("git" "https://github.com/theZacAttacks/with-user-abort.git")))
 (:ql-project woo :system-file clack-handler-woo :system-name clack-handler-woo
  :dependencies (asdf woo) :source
  (("git" "https://github.com/fukamachi/woo.git")))
 (:ql-project woo :system-file woo :system-name woo :dependencies
  (alexandria asdf bordeaux-threads cffi cffi-grovel clack-socket fast-http
   fast-io lev quri smart-buffer static-vectors swap-bytes trivial-mimes
   trivial-utf-8 vom)
  :source (("git" "https://github.com/fukamachi/woo.git")))
 (:ql-project woo :system-file woo-test :system-name woo-test :dependencies
  (asdf clack-test rove woo) :source
  (("git" "https://github.com/fukamachi/woo.git")))
 (:ql-project wookie :system-file wookie :system-name wookie :dependencies
  (alexandria asdf babel blackbird chunga cl-async cl-async-ssl cl-fad cl-ppcre
   do-urlencode fast-http fast-io quri vom)
  :source (("git" "https://github.com/orthecreedence/wookie.git")))
 (:ql-project wordnet :system-file wordnet :system-name wordnet :dependencies
  (asdf split-sequence) :source
  (("git" "https://github.com/phoe/wordnet.git")))
 (:ql-project workout-timer :system-file workout-timer :system-name
  workout-timer :dependencies
  (asdf cffi-toolchain command-line-arguments local-time mixalot mixalot-vorbis
   vorbisfile-ffi)
  :source (("git" "https://gitlab.common-lisp.net/frideau/workout-timer.git")))
 (:ql-project workout-timer :system-file workout-timer :system-name
  workout-timer/static :dependencies (cffi-toolchain workout-timer) :source
  (("git" "https://gitlab.common-lisp.net/frideau/workout-timer.git")))
 (:ql-project wu-decimal :system-file wu-decimal :system-name wu-decimal
  :dependencies nil :source
  (("git" "https://github.com/Wukix/wu-decimal.git")
   ("git" "http://wukix.com/dist/wu-decimal.git")))
 (:ql-project wu-sugar :system-file wu-sugar :system-name wu-sugar
  :dependencies nil :source (("git" "https://github.com/Wukix/wu-sugar.git")))
 (:ql-project wuwei :system-file wuwei :system-name wuwei :dependencies
  (asdf aserve cl-json drakma ironclad mtlisp) :source
  (("git" "https://github.com/mtravers/wuwei.git")))
 (:ql-project wuwei :system-file wuwei :system-name wuwei-examples
  :dependencies (drakma wuwei) :source
  (("git" "https://github.com/mtravers/wuwei.git")))
 (:ql-project x.let-star :system-file x.let-star :system-name x.let-star
  :dependencies (asdf) :source
  (("git" "https://github.com/ks/x.let-star.git")))
 (:ql-project xarray :system-file xarray :system-name xarray :dependencies
  (anaphora cl-utilities iterate metabang-bind) :source
  (("git" "https://github.com/blindglobe/xarray.git")))
 (:ql-project xarray :system-file xarray-test :system-name xarray-test
  :dependencies (lift xarray) :source
  (("git" "https://github.com/blindglobe/xarray.git")))
 (:ql-project xcat :system-file xcat :system-name xcat :dependencies
  (asdf bordeaux-threads cl-ppcre flexi-streams log4cl trivial-features
   trivial-garbage usocket-server)
  :source (("git" "http://github.com/jesseoff/xcat.git")))
 (:ql-project xecto :system-file xecto :system-name xecto :dependencies nil
  :source (("git" "https://github.com/pkhuong/Xecto.git")))
 (:ql-project xhtmlambda :system-file xhtmlambda :system-name xhtmlambda
  :dependencies (asdf cl-unicode) :source
  (("git" "https://gitlab.common-lisp.net/xhtmlambda/XHTMLambda.git")))
 (:ql-project xhtmlgen :system-file xhtmlgen :system-name xhtmlgen
  :dependencies (cxml) :source
  (("git" "https://github.com/hanshuebner/xhtmlgen")))
 (:ql-project xhtmlgen :system-file xhtmlgen :system-name xhtmlgen-test
  :dependencies (rt xhtmlgen) :source
  (("git" "https://github.com/hanshuebner/xhtmlgen")))
 (:ql-project xlsx :system-file xlsx :system-name xlsx :dependencies
  (asdf flexi-streams xmls zip) :source
  (("git" "https://gitlab.common-lisp.net/cungil/xlsx.git")))
 (:ql-project xlunit :system-file xlunit :system-name xlunit :dependencies nil
  :source (("kmr-git" "xlunit")))
 (:ql-project xlunit :system-file xlunit :system-name xlunit-tests
  :dependencies (xlunit) :source (("kmr-git" "xlunit")))
 (:ql-project xml-emitter :system-file xml-emitter :system-name xml-emitter
  :dependencies (asdf cl-utilities) :source
  (("git" "https://github.com/VitoVan/xml-emitter.git")))
 (:ql-project xml-emitter :system-file xml-emitter :system-name
  xml-emitter/tests :dependencies (1am xml-emitter) :source
  (("git" "https://github.com/VitoVan/xml-emitter.git")))
 (:ql-project xml-mop :system-file xml-mop :system-name xml-mop :dependencies
  (closer-mop s-xml) :source (("git" "https://github.com/gonzojive/xml-mop")))
 (:ql-project xml.location :system-file xml.location :system-name xml.location
  :dependencies
  (alexandria asdf closer-mop cxml-stp iterate let-plus more-conditions
   split-sequence xpath)
  :source (("git" "https://github.com/scymtym/xml.location.git")))
 (:ql-project xml.location :system-file xml.location-and-local-time
  :system-name xml.location-and-local-time :dependencies
  (asdf local-time xml.location) :source
  (("git" "https://github.com/scymtym/xml.location.git")))
 (:ql-project xml.location :system-file xml.location :system-name
  xml.location/test :dependencies (lift xml.location) :source
  (("git" "https://github.com/scymtym/xml.location.git")))
 (:ql-project xmls :system-file xmls :system-name xmls :dependencies (asdf)
  :source
  (("branched-git" "https://github.com/rpgoldman/xmls.git" "release")
   ("https" "https://common-lisp.net/project/xmls/xmls-3.0.2.tar.gz")))
 (:ql-project xmls :system-file xmls :system-name xmls/octets :dependencies
  (cl-ppcre flexi-streams xmls) :source
  (("branched-git" "https://github.com/rpgoldman/xmls.git" "release")
   ("https" "https://common-lisp.net/project/xmls/xmls-3.0.2.tar.gz")))
 (:ql-project xmls :system-file xmls :system-name xmls/test :dependencies
  (xmls) :source
  (("branched-git" "https://github.com/rpgoldman/xmls.git" "release")
   ("https" "https://common-lisp.net/project/xmls/xmls-3.0.2.tar.gz")))
 (:ql-project xmls :system-file xmls :system-name xmls/unit-test :dependencies
  (fiveam xmls) :source
  (("branched-git" "https://github.com/rpgoldman/xmls.git" "release")
   ("https" "https://common-lisp.net/project/xmls/xmls-3.0.2.tar.gz")))
 (:ql-project xptest :system-file xptest :system-name xptest :dependencies nil
  :source (("kmr-git" "xptest")))
 (:ql-project xsubseq :system-file xsubseq :system-name xsubseq :dependencies
  nil :source (("git" "https://github.com/fukamachi/xsubseq.git")))
 (:ql-project xsubseq :system-file xsubseq-test :system-name xsubseq-test
  :dependencies (prove prove-asdf xsubseq) :source
  (("git" "https://github.com/fukamachi/xsubseq.git")))
 (:ql-project xuriella :system-file xuriella :system-name xuriella
  :dependencies (closure-html cxml cxml-stp split-sequence xpath) :source
  (("git" "git://repo.or.cz/xuriella.git")))
 (:ql-project yaclml :system-file yaclml :system-name yaclml :dependencies
  (arnesi asdf iterate) :source
  (("git" "https://github.com/sharplispers/yaclml.git")))
 (:ql-project yaclml :system-file yaclml :system-name yaclml/test :dependencies
  (fiveam yaclml) :source
  (("git" "https://github.com/sharplispers/yaclml.git")))
 (:ql-project yah :system-file yah :system-name yah :dependencies
  (asdf mgl-pax) :source (("git" "https://gitlab.com/Aksej/yah.git")))
 (:ql-project yason :system-file yason :system-name yason :dependencies
  (alexandria asdf trivial-gray-streams) :source
  (("git" "https://github.com/phmarek/yason.git")))
 (:ql-project youtube :system-file youtube :system-name youtube :dependencies
  (alexandria asdf bordeaux-threads cl-ppcre yason) :source
  (("git" "https://github.com/mihaiolteanu/youtube.git")))
 (:ql-project zacl :system-file setup-cl+ssl :system-name setup-cl+ssl
  :dependencies (asdf cffi) :source
  (("git" "https://gitlab.common-lisp.net/dcooper/zacl.git")))
 (:ql-project zacl :system-file zacl :system-name zacl :dependencies
  (alexandria asdf atomics babel-streams bordeaux-threads cl+ssl cl-base64
   cl-ppcre cl-store local-time md5 queues.simple-queue quri setup-cl+ssl
   split-sequence trivial-backtrace trivial-garbage uiop usocket)
  :source (("git" "https://gitlab.common-lisp.net/dcooper/zacl.git")))
 (:ql-project zaws :system-file zaws :system-name zaws :dependencies
  (cl-base64 drakma flexi-streams ironclad) :source
  (("git" "https://github.com/xach/zaws.git")))
 (:ql-project zaws :system-file zaws-xml :system-name zaws-xml :dependencies
  (cxml) :source (("git" "https://github.com/xach/zaws.git")))
 (:ql-project zbucium :system-file zbucium :system-name zbucium :dependencies
  (alexandria asdf bordeaux-threads drakma fare-memoization generators lastfm
   local-time lquery lyrics plump yason youtube)
  :source (("git" "https://github.com/mihaiolteanu/zbucium.git")))
 (:ql-project zcdb :system-file zcdb :system-name zcdb :dependencies nil
  :source (("https" "https://www.xach.com/lisp/zcdb.tgz")))
 (:ql-project zenekindarl :system-file zenekindarl :system-name zenekindarl
  :dependencies
  (alexandria anaphora babel cl-annot cl-ppcre fast-io html-encode maxpc
   optima)
  :source (("git" "https://github.com/KeenS/zenekindarl.git")))
 (:ql-project zenekindarl :system-file zenekindarl-test :system-name
  zenekindarl-test :dependencies (flexi-streams prove zenekindarl) :source
  (("git" "https://github.com/KeenS/zenekindarl.git")))
 (:ql-project zip :system-file zip :system-name zip :dependencies
  (babel cl-fad salza2 trivial-gray-streams) :source
  (("git" "https://github.com/bluelisp/zip.git")))
 (:ql-project zippy :system-file zippy :system-name zippy :dependencies
  (3bz alexandria asdf babel documentation-utils file-attributes
   filesystem-utils nibbles pathname-utils salza2)
  :source (("git" "https://github.com/Shinmera/zippy.git")))
 (:ql-project zippy :system-file zippy-dwim :system-name zippy-dwim
  :dependencies (asdf deploy zippy) :source
  (("git" "https://github.com/Shinmera/zippy.git")))
 (:ql-project ziz :system-file ziz :system-name ziz :dependencies
  (alexandria asdf hunchentoot ironclad trivial-file-size) :source
  (("git" "https://github.com/yitzchak/ziz.git")))
 (:ql-project zlib :system-file zlib :system-name zlib :dependencies nil
  :source
  (("git" "https://github.com/sharplispers/zlib.git")
   ("git" "https://gitlab.common-lisp.net/zlib/zlib.git")))
 (:ql-project zpb-exif :system-file zpb-exif :system-name zpb-exif
  :dependencies (asdf) :source
  (("latest-github-release" "https://github.com/xach/zpb-exif.git") nil))
 (:ql-project zpb-ttf :system-file zpb-ttf :system-name zpb-ttf :dependencies
  (asdf) :source
  (("latest-github-release" "https://github.com/xach/zpb-ttf.git") nil))
 (:ql-project zpng :system-file zpng :system-name zpng :dependencies (salza2)
  :source (("https" "https://www.xach.com/lisp/zpng.tgz")))
 (:ql-project zs3 :system-file zs3 :system-name zs3 :dependencies
  (alexandria asdf cl-base64 cxml drakma ironclad puri) :source
  (("https" "https://www.xach.com/lisp/zs3.tgz")))
 (:ql-project zsort :system-file zsort :system-name zsort :dependencies
  (alexandria) :source (("git" "https://github.com/jorgetavares/zsort.git"))))